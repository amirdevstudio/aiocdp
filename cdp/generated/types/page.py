# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from cdp.generated.types import (
    debugger,
    dom,
    emulation,
    io,
    network,
    runtime
)
from typing import (
    Literal,
    NotRequired,
    TypedDict
)

FrameId = str

ScriptIdentifier = str

AdFrameType = Literal[
    'none',
    'child',
    'root'
]

AdFrameExplanation = Literal[
    'ParentIsAd',
    'CreatedByAdScript',
    'MatchedBlockingRule'
]

SecureContextType = Literal[
    'Secure',
    'SecureLocalhost',
    'InsecureScheme',
    'InsecureAncestor'
]

CrossOriginIsolatedContextType = Literal[
    'Isolated',
    'NotIsolated',
    'NotIsolatedFeatureDisabled'
]

GatedAPIFeatures = Literal[
    'SharedArrayBuffers',
    'SharedArrayBuffersTransferAllowed',
    'PerformanceMeasureMemory',
    'PerformanceProfile'
]

PermissionsPolicyFeature = Literal[
    'accelerometer',
    'ambient-light-sensor',
    'attribution-reporting',
    'autoplay',
    'bluetooth',
    'browsing-topics',
    'camera',
    'ch-dpr',
    'ch-device-memory',
    'ch-downlink',
    'ch-ect',
    'ch-prefers-color-scheme',
    'ch-prefers-reduced-motion',
    'ch-prefers-reduced-transparency',
    'ch-rtt',
    'ch-save-data',
    'ch-ua',
    'ch-ua-arch',
    'ch-ua-bitness',
    'ch-ua-platform',
    'ch-ua-model',
    'ch-ua-mobile',
    'ch-ua-form-factor',
    'ch-ua-full-version',
    'ch-ua-full-version-list',
    'ch-ua-platform-version',
    'ch-ua-wow64',
    'ch-viewport-height',
    'ch-viewport-width',
    'ch-width',
    'clipboard-read',
    'clipboard-write',
    'compute-pressure',
    'cross-origin-isolated',
    'direct-sockets',
    'display-capture',
    'document-domain',
    'encrypted-media',
    'execution-while-out-of-viewport',
    'execution-while-not-rendered',
    'focus-without-user-activation',
    'fullscreen',
    'frobulate',
    'gamepad',
    'geolocation',
    'gyroscope',
    'hid',
    'identity-credentials-get',
    'idle-detection',
    'interest-cohort',
    'join-ad-interest-group',
    'keyboard-map',
    'local-fonts',
    'magnetometer',
    'microphone',
    'midi',
    'otp-credentials',
    'payment',
    'picture-in-picture',
    'private-aggregation',
    'private-state-token-issuance',
    'private-state-token-redemption',
    'publickey-credentials-get',
    'run-ad-auction',
    'screen-wake-lock',
    'serial',
    'shared-autofill',
    'shared-storage',
    'shared-storage-select-url',
    'smart-card',
    'storage-access',
    'sync-xhr',
    'unload',
    'usb',
    'vertical-scroll',
    'web-share',
    'window-management',
    'window-placement',
    'xr-spatial-tracking'
]

PermissionsPolicyBlockReason = Literal[
    'Header',
    'IframeAttribute',
    'InFencedFrameTree',
    'InIsolatedApp'
]

OriginTrialTokenStatus = Literal[
    'Success',
    'NotSupported',
    'Insecure',
    'Expired',
    'WrongOrigin',
    'InvalidSignature',
    'Malformed',
    'WrongVersion',
    'FeatureDisabled',
    'TokenDisabled',
    'FeatureDisabledForUser',
    'UnknownTrial'
]

OriginTrialStatus = Literal[
    'Enabled',
    'ValidTokenNotProvided',
    'OSNotSupported',
    'TrialNotAllowed'
]

OriginTrialUsageRestriction = Literal[
    'None',
    'Subset'
]

TransitionType = Literal[
    'link',
    'typed',
    'address_bar',
    'auto_bookmark',
    'auto_subframe',
    'manual_subframe',
    'generated',
    'auto_toplevel',
    'form_submit',
    'reload',
    'keyword',
    'keyword_generated',
    'other'
]

DialogType = Literal[
    'alert',
    'confirm',
    'prompt',
    'beforeunload'
]

ClientNavigationReason = Literal[
    'formSubmissionGet',
    'formSubmissionPost',
    'httpHeaderRefresh',
    'scriptInitiated',
    'metaTagRefresh',
    'pageBlockInterstitial',
    'reload',
    'anchorClick'
]

ClientNavigationDisposition = Literal[
    'currentTab',
    'newTab',
    'newWindow',
    'download'
]

ReferrerPolicy = Literal[
    'noReferrer',
    'noReferrerWhenDowngrade',
    'origin',
    'originWhenCrossOrigin',
    'sameOrigin',
    'strictOrigin',
    'strictOriginWhenCrossOrigin',
    'unsafeUrl'
]

AutoResponseMode = Literal[
    'none',
    'autoAccept',
    'autoReject',
    'autoOptOut'
]

NavigationType = Literal[
    'Navigation',
    'BackForwardCacheRestore'
]

BackForwardCacheNotRestoredReason = Literal[
    'NotPrimaryMainFrame',
    'BackForwardCacheDisabled',
    'RelatedActiveContentsExist',
    'HTTPStatusNotOK',
    'SchemeNotHTTPOrHTTPS',
    'Loading',
    'WasGrantedMediaAccess',
    'DisableForRenderFrameHostCalled',
    'DomainNotAllowed',
    'HTTPMethodNotGET',
    'SubframeIsNavigating',
    'Timeout',
    'CacheLimit',
    'JavaScriptExecution',
    'RendererProcessKilled',
    'RendererProcessCrashed',
    'SchedulerTrackedFeatureUsed',
    'ConflictingBrowsingInstance',
    'CacheFlushed',
    'ServiceWorkerVersionActivation',
    'SessionRestored',
    'ServiceWorkerPostMessage',
    'EnteredBackForwardCacheBeforeServiceWorkerHostAdded',
    'RenderFrameHostReused_SameSite',
    'RenderFrameHostReused_CrossSite',
    'ServiceWorkerClaim',
    'IgnoreEventAndEvict',
    'HaveInnerContents',
    'TimeoutPuttingInCache',
    'BackForwardCacheDisabledByLowMemory',
    'BackForwardCacheDisabledByCommandLine',
    'NetworkRequestDatapipeDrainedAsBytesConsumer',
    'NetworkRequestRedirected',
    'NetworkRequestTimeout',
    'NetworkExceedsBufferLimit',
    'NavigationCancelledWhileRestoring',
    'NotMostRecentNavigationEntry',
    'BackForwardCacheDisabledForPrerender',
    'UserAgentOverrideDiffers',
    'ForegroundCacheLimit',
    'BrowsingInstanceNotSwapped',
    'BackForwardCacheDisabledForDelegate',
    'UnloadHandlerExistsInMainFrame',
    'UnloadHandlerExistsInSubFrame',
    'ServiceWorkerUnregistration',
    'CacheControlNoStore',
    'CacheControlNoStoreCookieModified',
    'CacheControlNoStoreHTTPOnlyCookieModified',
    'NoResponseHead',
    'Unknown',
    'ActivationNavigationsDisallowedForBug1234857',
    'ErrorDocument',
    'FencedFramesEmbedder',
    'CookieDisabled',
    'HTTPAuthRequired',
    'CookieFlushed',
    'WebSocket',
    'WebTransport',
    'WebRTC',
    'MainResourceHasCacheControlNoStore',
    'MainResourceHasCacheControlNoCache',
    'SubresourceHasCacheControlNoStore',
    'SubresourceHasCacheControlNoCache',
    'ContainsPlugins',
    'DocumentLoaded',
    'DedicatedWorkerOrWorklet',
    'OutstandingNetworkRequestOthers',
    'RequestedMIDIPermission',
    'RequestedAudioCapturePermission',
    'RequestedVideoCapturePermission',
    'RequestedBackForwardCacheBlockedSensors',
    'RequestedBackgroundWorkPermission',
    'BroadcastChannel',
    'WebXR',
    'SharedWorker',
    'WebLocks',
    'WebHID',
    'WebShare',
    'RequestedStorageAccessGrant',
    'WebNfc',
    'OutstandingNetworkRequestFetch',
    'OutstandingNetworkRequestXHR',
    'AppBanner',
    'Printing',
    'WebDatabase',
    'PictureInPicture',
    'Portal',
    'SpeechRecognizer',
    'IdleManager',
    'PaymentManager',
    'SpeechSynthesis',
    'KeyboardLock',
    'WebOTPService',
    'OutstandingNetworkRequestDirectSocket',
    'InjectedJavascript',
    'InjectedStyleSheet',
    'KeepaliveRequest',
    'IndexedDBEvent',
    'Dummy',
    'JsNetworkRequestReceivedCacheControlNoStoreResource',
    'WebRTCSticky',
    'WebTransportSticky',
    'WebSocketSticky',
    'ContentSecurityHandler',
    'ContentWebAuthenticationAPI',
    'ContentFileChooser',
    'ContentSerial',
    'ContentFileSystemAccess',
    'ContentMediaDevicesDispatcherHost',
    'ContentWebBluetooth',
    'ContentWebUSB',
    'ContentMediaSessionService',
    'ContentScreenReader',
    'EmbedderPopupBlockerTabHelper',
    'EmbedderSafeBrowsingTriggeredPopupBlocker',
    'EmbedderSafeBrowsingThreatDetails',
    'EmbedderAppBannerManager',
    'EmbedderDomDistillerViewerSource',
    'EmbedderDomDistillerSelfDeletingRequestDelegate',
    'EmbedderOomInterventionTabHelper',
    'EmbedderOfflinePage',
    'EmbedderChromePasswordManagerClientBindCredentialManager',
    'EmbedderPermissionRequestManager',
    'EmbedderModalDialog',
    'EmbedderExtensions',
    'EmbedderExtensionMessaging',
    'EmbedderExtensionMessagingForOpenPort',
    'EmbedderExtensionSentMessageToCachedFrame'
]

BackForwardCacheNotRestoredReasonType = Literal[
    'SupportPending',
    'PageSupportNeeded',
    'Circumstantial'
]


class AdFrameStatus(TypedDict):
    ad_frame_type: 'AdFrameType'
    explanations: NotRequired[list]


class AdScriptId(TypedDict):
    script_id: 'runtime.ScriptId'
    debugger_id: 'runtime.UniqueDebuggerId'


class PermissionsPolicyBlockLocator(TypedDict):
    frame_id: 'FrameId'
    block_reason: 'PermissionsPolicyBlockReason'


class PermissionsPolicyFeatureState(TypedDict):
    feature: 'PermissionsPolicyFeature'
    allowed: bool
    locator: NotRequired['PermissionsPolicyBlockLocator']


class OriginTrialToken(TypedDict):
    origin: str
    match_sub_domains: bool
    trial_name: str
    expiry_time: 'network.TimeSinceEpoch'
    is_third_party: bool
    usage_restriction: 'OriginTrialUsageRestriction'


class OriginTrialTokenWithStatus(TypedDict):
    raw_token_text: str
    status: 'OriginTrialTokenStatus'
    parsed_token: NotRequired['OriginTrialToken']


class OriginTrial(TypedDict):
    trial_name: str
    status: 'OriginTrialStatus'
    tokens_with_status: list


class Frame(TypedDict):
    id: 'FrameId'
    loader_id: 'network.LoaderId'
    url: str
    domain_and_registry: str
    security_origin: str
    mime_type: str
    secure_context_type: 'SecureContextType'
    cross_origin_isolated_context_type: 'CrossOriginIsolatedContextType'
    gated_api_features: list
    parent_id: NotRequired['FrameId']
    name: NotRequired[str]
    url_fragment: NotRequired[str]
    unreachable_url: NotRequired[str]
    ad_frame_status: NotRequired['AdFrameStatus']


class FrameResource(TypedDict):
    url: str
    type: 'network.ResourceType'
    mime_type: str
    last_modified: NotRequired['network.TimeSinceEpoch']
    content_size: NotRequired[float]
    failed: NotRequired[bool]
    canceled: NotRequired[bool]


class FrameResourceTree(TypedDict):
    frame: 'Frame'
    resources: list
    child_frames: NotRequired[list]


class FrameTree(TypedDict):
    frame: 'Frame'
    child_frames: NotRequired[list]


class NavigationEntry(TypedDict):
    id: int
    url: str
    user_typed_url: str
    title: str
    transition_type: 'TransitionType'


class ScreencastFrameMetadata(TypedDict):
    offset_top: float
    page_scale_factor: float
    device_width: float
    device_height: float
    scroll_offset_x: float
    scroll_offset_y: float
    timestamp: NotRequired['network.TimeSinceEpoch']


class AppManifestError(TypedDict):
    message: str
    critical: int
    line: int
    column: int


class AppManifestParsedProperties(TypedDict):
    scope: str


class LayoutViewport(TypedDict):
    page_x: int
    page_y: int
    client_width: int
    client_height: int


class VisualViewport(TypedDict):
    offset_x: float
    offset_y: float
    page_x: float
    page_y: float
    client_width: float
    client_height: float
    scale: float
    zoom: NotRequired[float]


class Viewport(TypedDict):
    x: float
    y: float
    width: float
    height: float
    scale: float


class FontFamilies(TypedDict):
    standard: NotRequired[str]
    fixed: NotRequired[str]
    serif: NotRequired[str]
    sans_serif: NotRequired[str]
    cursive: NotRequired[str]
    fantasy: NotRequired[str]
    math: NotRequired[str]


class ScriptFontFamilies(TypedDict):
    script: str
    font_families: 'FontFamilies'


class FontSizes(TypedDict):
    standard: NotRequired[int]
    fixed: NotRequired[int]


class InstallabilityErrorArgument(TypedDict):
    name: str
    value: str


class InstallabilityError(TypedDict):
    error_id: str
    error_arguments: list


class CompilationCacheParams(TypedDict):
    url: str
    eager: NotRequired[bool]


class BackForwardCacheNotRestoredExplanation(TypedDict):
    type: 'BackForwardCacheNotRestoredReasonType'
    reason: 'BackForwardCacheNotRestoredReason'
    context: NotRequired[str]


class BackForwardCacheNotRestoredExplanationTree(TypedDict):
    url: str
    explanations: list
    children: list


class AddScriptToEvaluateOnLoadParamsT(TypedDict):
    script_source: str


class AddScriptToEvaluateOnNewDocumentParamsT(TypedDict):
    source: str
    world_name: NotRequired[str]
    include_command_line_api: NotRequired[bool]
    run_immediately: NotRequired[bool]


class CaptureScreenshotParamsT(TypedDict):
    format: NotRequired[str]
    quality: NotRequired[int]
    clip: NotRequired['Viewport']
    from_surface: NotRequired[bool]
    capture_beyond_viewport: NotRequired[bool]
    optimize_for_speed: NotRequired[bool]


class CaptureSnapshotParamsT(TypedDict):
    format: NotRequired[str]


class CreateIsolatedWorldParamsT(TypedDict):
    frame_id: 'FrameId'
    world_name: NotRequired[str]
    grant_univeral_access: NotRequired[bool]


class DeleteCookieParamsT(TypedDict):
    cookie_name: str
    url: str


class GetAdScriptIdParamsT(TypedDict):
    frame_id: 'FrameId'


class GetResourceContentParamsT(TypedDict):
    frame_id: 'FrameId'
    url: str


class HandleJavaScriptDialogParamsT(TypedDict):
    accept: bool
    prompt_text: NotRequired[str]


class NavigateParamsT(TypedDict):
    url: str
    referrer: NotRequired[str]
    transition_type: NotRequired['TransitionType']
    frame_id: NotRequired['FrameId']
    referrer_policy: NotRequired['ReferrerPolicy']


class NavigateToHistoryEntryParamsT(TypedDict):
    entry_id: int


class PrintToPDFParamsT(TypedDict):
    landscape: NotRequired[bool]
    display_header_footer: NotRequired[bool]
    print_background: NotRequired[bool]
    scale: NotRequired[float]
    paper_width: NotRequired[float]
    paper_height: NotRequired[float]
    margin_top: NotRequired[float]
    margin_bottom: NotRequired[float]
    margin_left: NotRequired[float]
    margin_right: NotRequired[float]
    page_ranges: NotRequired[str]
    header_template: NotRequired[str]
    footer_template: NotRequired[str]
    prefer_css_page_size: NotRequired[bool]
    transfer_mode: NotRequired[str]
    generate_tagged_pdf: NotRequired[bool]


class ReloadParamsT(TypedDict):
    ignore_cache: NotRequired[bool]
    script_to_evaluate_on_load: NotRequired[str]


class RemoveScriptToEvaluateOnLoadParamsT(TypedDict):
    identifier: 'ScriptIdentifier'


class RemoveScriptToEvaluateOnNewDocumentParamsT(TypedDict):
    identifier: 'ScriptIdentifier'


class ScreencastFrameAckParamsT(TypedDict):
    session_id: int


class SearchInResourceParamsT(TypedDict):
    frame_id: 'FrameId'
    url: str
    query: str
    case_sensitive: NotRequired[bool]
    is_regex: NotRequired[bool]


class SetAdBlockingEnabledParamsT(TypedDict):
    enabled: bool


class SetBypassCSPParamsT(TypedDict):
    enabled: bool


class GetPermissionsPolicyStateParamsT(TypedDict):
    frame_id: 'FrameId'


class GetOriginTrialsParamsT(TypedDict):
    frame_id: 'FrameId'


class SetDeviceMetricsOverrideParamsT(TypedDict):
    width: int
    height: int
    device_scale_factor: float
    mobile: bool
    scale: NotRequired[float]
    screen_width: NotRequired[int]
    screen_height: NotRequired[int]
    position_x: NotRequired[int]
    position_y: NotRequired[int]
    dont_set_visible_size: NotRequired[bool]
    screen_orientation: NotRequired['emulation.ScreenOrientation']
    viewport: NotRequired['Viewport']


class SetDeviceOrientationOverrideParamsT(TypedDict):
    alpha: float
    beta: float
    gamma: float


class SetFontFamiliesParamsT(TypedDict):
    font_families: 'FontFamilies'
    for_scripts: NotRequired[list]


class SetFontSizesParamsT(TypedDict):
    font_sizes: 'FontSizes'


class SetDocumentContentParamsT(TypedDict):
    frame_id: 'FrameId'
    html: str


class SetDownloadBehaviorParamsT(TypedDict):
    behavior: str
    download_path: NotRequired[str]


class SetGeolocationOverrideParamsT(TypedDict):
    latitude: NotRequired[float]
    longitude: NotRequired[float]
    accuracy: NotRequired[float]


class SetLifecycleEventsEnabledParamsT(TypedDict):
    enabled: bool


class SetTouchEmulationEnabledParamsT(TypedDict):
    enabled: bool
    configuration: NotRequired[str]


class StartScreencastParamsT(TypedDict):
    format: NotRequired[str]
    quality: NotRequired[int]
    max_width: NotRequired[int]
    max_height: NotRequired[int]
    every_nth_frame: NotRequired[int]


class SetWebLifecycleStateParamsT(TypedDict):
    state: str


class ProduceCompilationCacheParamsT(TypedDict):
    scripts: list


class AddCompilationCacheParamsT(TypedDict):
    url: str
    data: str


class SetSPCTransactionModeParamsT(TypedDict):
    mode: 'AutoResponseMode'


class SetRPHRegistrationModeParamsT(TypedDict):
    mode: 'AutoResponseMode'


class GenerateTestReportParamsT(TypedDict):
    message: str
    group: NotRequired[str]


class SetInterceptFileChooserDialogParamsT(TypedDict):
    enabled: bool


class SetPrerenderingAllowedParamsT(TypedDict):
    is_allowed: bool


class AddScriptToEvaluateOnLoadReturnT(TypedDict):
    identifier: 'ScriptIdentifier'


class AddScriptToEvaluateOnNewDocumentReturnT(TypedDict):
    identifier: 'ScriptIdentifier'


class CaptureScreenshotReturnT(TypedDict):
    data: str


class CaptureSnapshotReturnT(TypedDict):
    data: str


class CreateIsolatedWorldReturnT(TypedDict):
    execution_context_id: 'runtime.ExecutionContextId'


class GetAppManifestReturnT(TypedDict):
    url: str
    errors: list
    data: str
    parsed: 'AppManifestParsedProperties'


class GetInstallabilityErrorsReturnT(TypedDict):
    installability_errors: list


class GetManifestIconsReturnT(TypedDict):
    primary_icon: str


class GetAppIdReturnT(TypedDict):
    app_id: str
    recommended_id: str


class GetAdScriptIdReturnT(TypedDict):
    ad_script_id: 'AdScriptId'


class GetCookiesReturnT(TypedDict):
    cookies: list


class GetFrameTreeReturnT(TypedDict):
    frame_tree: 'FrameTree'


class GetLayoutMetricsReturnT(TypedDict):
    layout_viewport: 'LayoutViewport'
    visual_viewport: 'VisualViewport'
    content_size: 'dom.Rect'
    css_layout_viewport: 'LayoutViewport'
    css_visual_viewport: 'VisualViewport'
    css_content_size: 'dom.Rect'


class GetNavigationHistoryReturnT(TypedDict):
    current_index: int
    entries: list


class GetResourceContentReturnT(TypedDict):
    content: str
    base64_encoded: bool


class GetResourceTreeReturnT(TypedDict):
    frame_tree: 'FrameResourceTree'


class NavigateReturnT(TypedDict):
    frame_id: 'FrameId'
    loader_id: 'network.LoaderId'
    error_text: str


class PrintToPDFReturnT(TypedDict):
    data: str
    stream: 'io.StreamHandle'


class SearchInResourceReturnT(TypedDict):
    result: list


class GetPermissionsPolicyStateReturnT(TypedDict):
    states: list


class GetOriginTrialsReturnT(TypedDict):
    origin_trials: list


class DomContentEventFiredEventT(TypedDict):
    name: Literal['dom_content_event_fired']
    params: 'DomContentEventFiredParamsT'


class FileChooserOpenedEventT(TypedDict):
    name: Literal['file_chooser_opened']
    params: 'FileChooserOpenedParamsT'


class FrameAttachedEventT(TypedDict):
    name: Literal['frame_attached']
    params: 'FrameAttachedParamsT'


class FrameClearedScheduledNavigationEventT(TypedDict):
    name: Literal['frame_cleared_scheduled_navigation']
    params: 'FrameClearedScheduledNavigationParamsT'


class FrameDetachedEventT(TypedDict):
    name: Literal['frame_detached']
    params: 'FrameDetachedParamsT'


class FrameNavigatedEventT(TypedDict):
    name: Literal['frame_navigated']
    params: 'FrameNavigatedParamsT'


class DocumentOpenedEventT(TypedDict):
    name: Literal['document_opened']
    params: 'DocumentOpenedParamsT'


class FrameResizedEventT(TypedDict):
    name: Literal['frame_resized']
    params: None


class FrameRequestedNavigationEventT(TypedDict):
    name: Literal['frame_requested_navigation']
    params: 'FrameRequestedNavigationParamsT'


class FrameScheduledNavigationEventT(TypedDict):
    name: Literal['frame_scheduled_navigation']
    params: 'FrameScheduledNavigationParamsT'


class FrameStartedLoadingEventT(TypedDict):
    name: Literal['frame_started_loading']
    params: 'FrameStartedLoadingParamsT'


class FrameStoppedLoadingEventT(TypedDict):
    name: Literal['frame_stopped_loading']
    params: 'FrameStoppedLoadingParamsT'


class DownloadWillBeginEventT(TypedDict):
    name: Literal['download_will_begin']
    params: 'DownloadWillBeginParamsT'


class DownloadProgressEventT(TypedDict):
    name: Literal['download_progress']
    params: 'DownloadProgressParamsT'


class InterstitialHiddenEventT(TypedDict):
    name: Literal['interstitial_hidden']
    params: None


class InterstitialShownEventT(TypedDict):
    name: Literal['interstitial_shown']
    params: None


class JavascriptDialogClosedEventT(TypedDict):
    name: Literal['javascript_dialog_closed']
    params: 'JavascriptDialogClosedParamsT'


class JavascriptDialogOpeningEventT(TypedDict):
    name: Literal['javascript_dialog_opening']
    params: 'JavascriptDialogOpeningParamsT'


class LifecycleEventEventT(TypedDict):
    name: Literal['lifecycle_event']
    params: 'LifecycleEventParamsT'


class BackForwardCacheNotUsedEventT(TypedDict):
    name: Literal['back_forward_cache_not_used']
    params: 'BackForwardCacheNotUsedParamsT'


class LoadEventFiredEventT(TypedDict):
    name: Literal['load_event_fired']
    params: 'LoadEventFiredParamsT'


class NavigatedWithinDocumentEventT(TypedDict):
    name: Literal['navigated_within_document']
    params: 'NavigatedWithinDocumentParamsT'


class ScreencastFrameEventT(TypedDict):
    name: Literal['screencast_frame']
    params: 'ScreencastFrameParamsT'


class ScreencastVisibilityChangedEventT(TypedDict):
    name: Literal['screencast_visibility_changed']
    params: 'ScreencastVisibilityChangedParamsT'


class WindowOpenEventT(TypedDict):
    name: Literal['window_open']
    params: 'WindowOpenParamsT'


class CompilationCacheProducedEventT(TypedDict):
    name: Literal['compilation_cache_produced']
    params: 'CompilationCacheProducedParamsT'


class DomContentEventFiredParamsT(TypedDict):
    timestamp: 'network.MonotonicTime'


class FileChooserOpenedParamsT(TypedDict):
    frame_id: 'FrameId'
    mode: str
    backend_node_id: 'dom.BackendNodeId'


class FrameAttachedParamsT(TypedDict):
    frame_id: 'FrameId'
    parent_frame_id: 'FrameId'
    stack: 'runtime.StackTrace'


class FrameClearedScheduledNavigationParamsT(TypedDict):
    frame_id: 'FrameId'


class FrameDetachedParamsT(TypedDict):
    frame_id: 'FrameId'
    reason: str


class FrameNavigatedParamsT(TypedDict):
    frame: 'Frame'
    type: 'NavigationType'


class DocumentOpenedParamsT(TypedDict):
    frame: 'Frame'


class FrameRequestedNavigationParamsT(TypedDict):
    frame_id: 'FrameId'
    reason: 'ClientNavigationReason'
    url: str
    disposition: 'ClientNavigationDisposition'


class FrameScheduledNavigationParamsT(TypedDict):
    frame_id: 'FrameId'
    delay: float
    reason: 'ClientNavigationReason'
    url: str


class FrameStartedLoadingParamsT(TypedDict):
    frame_id: 'FrameId'


class FrameStoppedLoadingParamsT(TypedDict):
    frame_id: 'FrameId'


class DownloadWillBeginParamsT(TypedDict):
    frame_id: 'FrameId'
    guid: str
    url: str
    suggested_filename: str


class DownloadProgressParamsT(TypedDict):
    guid: str
    total_bytes: float
    received_bytes: float
    state: str


class JavascriptDialogClosedParamsT(TypedDict):
    result: bool
    user_input: str


class JavascriptDialogOpeningParamsT(TypedDict):
    url: str
    message: str
    type: 'DialogType'
    has_browser_handler: bool
    default_prompt: str


class LifecycleEventParamsT(TypedDict):
    frame_id: 'FrameId'
    loader_id: 'network.LoaderId'
    name: str
    timestamp: 'network.MonotonicTime'


class BackForwardCacheNotUsedParamsT(TypedDict):
    loader_id: 'network.LoaderId'
    frame_id: 'FrameId'
    not_restored_explanations: list
    not_restored_explanations_tree: 'BackForwardCacheNotRestoredExplanationTree'


class LoadEventFiredParamsT(TypedDict):
    timestamp: 'network.MonotonicTime'


class NavigatedWithinDocumentParamsT(TypedDict):
    frame_id: 'FrameId'
    url: str


class ScreencastFrameParamsT(TypedDict):
    data: str
    metadata: 'ScreencastFrameMetadata'
    session_id: int


class ScreencastVisibilityChangedParamsT(TypedDict):
    visible: bool


class WindowOpenParamsT(TypedDict):
    url: str
    window_name: str
    window_features: list
    user_gesture: bool


class CompilationCacheProducedParamsT(TypedDict):
    url: str
    data: str
