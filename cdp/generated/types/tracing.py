# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from cdp.types import (
    io
)
from typing import (
    Literal,
    TypedDict
)

MemoryDumpConfig = dict

StreamFormat = Literal[
    'json',
    'proto'
]

StreamCompression = Literal[
    'none',
    'gzip'
]

MemoryDumpLevelOfDetail = Literal[
    'background',
    'light',
    'detailed'
]

TracingBackend = Literal[
    'auto',
    'chrome',
    'system'
]


class TraceConfig(TypedDict):
    record_mode: str
    trace_buffer_size_in_kb: float
    enable_sampling: bool
    enable_systrace: bool
    enable_argument_filter: bool
    included_categories: list
    excluded_categories: list
    synthetic_delays: list
    memory_dump_config: 'MemoryDumpConfig'


class RecordClockSyncMarkerParamsT(TypedDict):
    sync_id: str


class RequestMemoryDumpParamsT(TypedDict):
    deterministic: bool
    level_of_detail: 'MemoryDumpLevelOfDetail'


class StartParamsT(TypedDict):
    categories: str
    options: str
    buffer_usage_reporting_interval: float
    transfer_mode: str
    stream_format: 'StreamFormat'
    stream_compression: 'StreamCompression'
    trace_config: 'TraceConfig'
    perfetto_config: str
    tracing_backend: 'TracingBackend'


class GetCategoriesReturnT(TypedDict):
    categories: list


class RequestMemoryDumpReturnT(TypedDict):
    dump_guid: str
    success: bool


class BufferUsageEventT(TypedDict):
    name: Literal['buffer_usage']
    params: 'BufferUsageParamsT'


class DataCollectedEventT(TypedDict):
    name: Literal['data_collected']
    params: 'DataCollectedParamsT'


class TracingCompleteEventT(TypedDict):
    name: Literal['tracing_complete']
    params: 'TracingCompleteParamsT'


class BufferUsageParamsT(TypedDict):
    percent_full: float
    event_count: float
    value: float


class DataCollectedParamsT(TypedDict):
    value: list


class TracingCompleteParamsT(TypedDict):
    data_loss_occurred: bool
    stream: 'io.StreamHandle'
    trace_format: 'StreamFormat'
    stream_compression: 'StreamCompression'
