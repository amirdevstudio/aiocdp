# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from cdp.generated.types import (
    dom,
    page,
    runtime
)
from typing import (
    Literal,
    NotRequired,
    TypedDict
)

ContrastAlgorithm = Literal[
    'aa',
    'aaa',
    'apca'
]

ColorFormat = Literal[
    'rgb',
    'hsl',
    'hwb',
    'hex'
]

InspectMode = Literal[
    'searchForNode',
    'searchForUAShadowDOM',
    'captureAreaScreenshot',
    'showDistances',
    'none'
]


class SourceOrderConfig(TypedDict):
    parent_outline_color: 'dom.RGBA'
    child_outline_color: 'dom.RGBA'


class GridHighlightConfig(TypedDict):
    show_grid_extension_lines: NotRequired[bool]
    show_positive_line_numbers: NotRequired[bool]
    show_negative_line_numbers: NotRequired[bool]
    show_area_names: NotRequired[bool]
    show_line_names: NotRequired[bool]
    show_track_sizes: NotRequired[bool]
    grid_border_color: NotRequired['dom.RGBA']
    cell_border_color: NotRequired['dom.RGBA']
    row_line_color: NotRequired['dom.RGBA']
    column_line_color: NotRequired['dom.RGBA']
    grid_border_dash: NotRequired[bool]
    cell_border_dash: NotRequired[bool]
    row_line_dash: NotRequired[bool]
    column_line_dash: NotRequired[bool]
    row_gap_color: NotRequired['dom.RGBA']
    row_hatch_color: NotRequired['dom.RGBA']
    column_gap_color: NotRequired['dom.RGBA']
    column_hatch_color: NotRequired['dom.RGBA']
    area_border_color: NotRequired['dom.RGBA']
    grid_background_color: NotRequired['dom.RGBA']


class FlexContainerHighlightConfig(TypedDict):
    container_border: NotRequired['LineStyle']
    line_separator: NotRequired['LineStyle']
    item_separator: NotRequired['LineStyle']
    main_distributed_space: NotRequired['BoxStyle']
    cross_distributed_space: NotRequired['BoxStyle']
    row_gap_space: NotRequired['BoxStyle']
    column_gap_space: NotRequired['BoxStyle']
    cross_alignment: NotRequired['LineStyle']


class FlexItemHighlightConfig(TypedDict):
    base_size_box: NotRequired['BoxStyle']
    base_size_border: NotRequired['LineStyle']
    flexibility_arrow: NotRequired['LineStyle']


class LineStyle(TypedDict):
    color: NotRequired['dom.RGBA']
    pattern: NotRequired[str]


class BoxStyle(TypedDict):
    fill_color: NotRequired['dom.RGBA']
    hatch_color: NotRequired['dom.RGBA']


class HighlightConfig(TypedDict):
    show_info: NotRequired[bool]
    show_styles: NotRequired[bool]
    show_rulers: NotRequired[bool]
    show_accessibility_info: NotRequired[bool]
    show_extension_lines: NotRequired[bool]
    content_color: NotRequired['dom.RGBA']
    padding_color: NotRequired['dom.RGBA']
    border_color: NotRequired['dom.RGBA']
    margin_color: NotRequired['dom.RGBA']
    event_target_color: NotRequired['dom.RGBA']
    shape_color: NotRequired['dom.RGBA']
    shape_margin_color: NotRequired['dom.RGBA']
    css_grid_color: NotRequired['dom.RGBA']
    color_format: NotRequired['ColorFormat']
    grid_highlight_config: NotRequired['GridHighlightConfig']
    flex_container_highlight_config: NotRequired['FlexContainerHighlightConfig']
    flex_item_highlight_config: NotRequired['FlexItemHighlightConfig']
    contrast_algorithm: NotRequired['ContrastAlgorithm']
    container_query_container_highlight_config: NotRequired['ContainerQueryContainerHighlightConfig']


class GridNodeHighlightConfig(TypedDict):
    grid_highlight_config: 'GridHighlightConfig'
    node_id: 'dom.NodeId'


class FlexNodeHighlightConfig(TypedDict):
    flex_container_highlight_config: 'FlexContainerHighlightConfig'
    node_id: 'dom.NodeId'


class ScrollSnapContainerHighlightConfig(TypedDict):
    snapport_border: NotRequired['LineStyle']
    snap_area_border: NotRequired['LineStyle']
    scroll_margin_color: NotRequired['dom.RGBA']
    scroll_padding_color: NotRequired['dom.RGBA']


class ScrollSnapHighlightConfig(TypedDict):
    scroll_snap_container_highlight_config: 'ScrollSnapContainerHighlightConfig'
    node_id: 'dom.NodeId'


class HingeConfig(TypedDict):
    rect: 'dom.Rect'
    content_color: NotRequired['dom.RGBA']
    outline_color: NotRequired['dom.RGBA']


class ContainerQueryHighlightConfig(TypedDict):
    container_query_container_highlight_config: 'ContainerQueryContainerHighlightConfig'
    node_id: 'dom.NodeId'


class ContainerQueryContainerHighlightConfig(TypedDict):
    container_border: NotRequired['LineStyle']
    descendant_border: NotRequired['LineStyle']


class IsolatedElementHighlightConfig(TypedDict):
    isolation_mode_highlight_config: 'IsolationModeHighlightConfig'
    node_id: 'dom.NodeId'


class IsolationModeHighlightConfig(TypedDict):
    resizer_color: NotRequired['dom.RGBA']
    resizer_handle_color: NotRequired['dom.RGBA']
    mask_color: NotRequired['dom.RGBA']


class GetHighlightObjectForTestParamsT(TypedDict):
    node_id: 'dom.NodeId'
    include_distance: NotRequired[bool]
    include_style: NotRequired[bool]
    color_format: NotRequired['ColorFormat']
    show_accessibility_info: NotRequired[bool]


class GetGridHighlightObjectsForTestParamsT(TypedDict):
    node_ids: list


class GetSourceOrderHighlightObjectForTestParamsT(TypedDict):
    node_id: 'dom.NodeId'


class HighlightFrameParamsT(TypedDict):
    frame_id: 'page.FrameId'
    content_color: NotRequired['dom.RGBA']
    content_outline_color: NotRequired['dom.RGBA']


class HighlightNodeParamsT(TypedDict):
    highlight_config: 'HighlightConfig'
    node_id: NotRequired['dom.NodeId']
    backend_node_id: NotRequired['dom.BackendNodeId']
    object_id: NotRequired['runtime.RemoteObjectId']
    selector: NotRequired[str]


class HighlightQuadParamsT(TypedDict):
    quad: 'dom.Quad'
    color: NotRequired['dom.RGBA']
    outline_color: NotRequired['dom.RGBA']


class HighlightRectParamsT(TypedDict):
    x: int
    y: int
    width: int
    height: int
    color: NotRequired['dom.RGBA']
    outline_color: NotRequired['dom.RGBA']


class HighlightSourceOrderParamsT(TypedDict):
    source_order_config: 'SourceOrderConfig'
    node_id: NotRequired['dom.NodeId']
    backend_node_id: NotRequired['dom.BackendNodeId']
    object_id: NotRequired['runtime.RemoteObjectId']


class SetInspectModeParamsT(TypedDict):
    mode: 'InspectMode'
    highlight_config: NotRequired['HighlightConfig']


class SetShowAdHighlightsParamsT(TypedDict):
    show: bool


class SetPausedInDebuggerMessageParamsT(TypedDict):
    message: NotRequired[str]


class SetShowDebugBordersParamsT(TypedDict):
    show: bool


class SetShowFPSCounterParamsT(TypedDict):
    show: bool


class SetShowGridOverlaysParamsT(TypedDict):
    grid_node_highlight_configs: list


class SetShowFlexOverlaysParamsT(TypedDict):
    flex_node_highlight_configs: list


class SetShowScrollSnapOverlaysParamsT(TypedDict):
    scroll_snap_highlight_configs: list


class SetShowContainerQueryOverlaysParamsT(TypedDict):
    container_query_highlight_configs: list


class SetShowPaintRectsParamsT(TypedDict):
    result: bool


class SetShowLayoutShiftRegionsParamsT(TypedDict):
    result: bool


class SetShowScrollBottleneckRectsParamsT(TypedDict):
    show: bool


class SetShowHitTestBordersParamsT(TypedDict):
    show: bool


class SetShowWebVitalsParamsT(TypedDict):
    show: bool


class SetShowViewportSizeOnResizeParamsT(TypedDict):
    show: bool


class SetShowHingeParamsT(TypedDict):
    hinge_config: NotRequired['HingeConfig']


class SetShowIsolatedElementsParamsT(TypedDict):
    isolated_element_highlight_configs: list


class GetHighlightObjectForTestReturnT(TypedDict):
    highlight: dict


class GetGridHighlightObjectsForTestReturnT(TypedDict):
    highlights: dict


class GetSourceOrderHighlightObjectForTestReturnT(TypedDict):
    highlight: dict


class InspectNodeRequestedEventT(TypedDict):
    name: Literal['inspect_node_requested']
    params: 'InspectNodeRequestedParamsT'


class NodeHighlightRequestedEventT(TypedDict):
    name: Literal['node_highlight_requested']
    params: 'NodeHighlightRequestedParamsT'


class ScreenshotRequestedEventT(TypedDict):
    name: Literal['screenshot_requested']
    params: 'ScreenshotRequestedParamsT'


class InspectModeCanceledEventT(TypedDict):
    name: Literal['inspect_mode_canceled']
    params: None


class InspectNodeRequestedParamsT(TypedDict):
    backend_node_id: 'dom.BackendNodeId'


class NodeHighlightRequestedParamsT(TypedDict):
    node_id: 'dom.NodeId'


class ScreenshotRequestedParamsT(TypedDict):
    viewport: 'page.Viewport'
