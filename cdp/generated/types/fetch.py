# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from cdp.generated.types import (
    io,
    network,
    page
)
from typing import (
    Literal,
    TypedDict
)

RequestId = str

RequestStage = Literal[
    'Request',
    'Response'
]


class RequestPattern(TypedDict):
    url_pattern: str
    resource_type: 'network.ResourceType'
    request_stage: 'RequestStage'


class HeaderEntry(TypedDict):
    name: str
    value: str


class AuthChallenge(TypedDict):
    origin: str
    scheme: str
    realm: str
    source: str


class AuthChallengeResponse(TypedDict):
    response: str
    username: str
    password: str


class EnableParamsT(TypedDict):
    patterns: list
    handle_auth_requests: bool


class FailRequestParamsT(TypedDict):
    request_id: 'RequestId'
    error_reason: 'network.ErrorReason'


class FulfillRequestParamsT(TypedDict):
    request_id: 'RequestId'
    response_code: int
    response_headers: list
    binary_response_headers: str
    body: str
    response_phrase: str


class ContinueRequestParamsT(TypedDict):
    request_id: 'RequestId'
    url: str
    method: str
    post_data: str
    headers: list
    intercept_response: bool


class ContinueWithAuthParamsT(TypedDict):
    request_id: 'RequestId'
    auth_challenge_response: 'AuthChallengeResponse'


class ContinueResponseParamsT(TypedDict):
    request_id: 'RequestId'
    response_code: int
    response_phrase: str
    response_headers: list
    binary_response_headers: str


class GetResponseBodyParamsT(TypedDict):
    request_id: 'RequestId'


class TakeResponseBodyAsStreamParamsT(TypedDict):
    request_id: 'RequestId'


class GetResponseBodyReturnT(TypedDict):
    body: str
    base64_encoded: bool


class TakeResponseBodyAsStreamReturnT(TypedDict):
    stream: 'io.StreamHandle'


class RequestPausedEventT(TypedDict):
    name: Literal['request_paused']
    params: 'RequestPausedParamsT'


class AuthRequiredEventT(TypedDict):
    name: Literal['auth_required']
    params: 'AuthRequiredParamsT'


class RequestPausedParamsT(TypedDict):
    request_id: 'RequestId'
    request: 'network.Request'
    frame_id: 'page.FrameId'
    resource_type: 'network.ResourceType'
    response_error_reason: 'network.ErrorReason'
    response_status_code: int
    response_status_text: str
    response_headers: list
    network_id: 'network.RequestId'
    redirected_request_id: 'RequestId'


class AuthRequiredParamsT(TypedDict):
    request_id: 'RequestId'
    request: 'network.Request'
    frame_id: 'page.FrameId'
    resource_type: 'network.ResourceType'
    auth_challenge: 'AuthChallenge'
