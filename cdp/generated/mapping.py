# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.


domain_names = {
    'snake:pascal': {
        'accessibility': (
            'accessibility'
        ),
        'animation': (
            'animation'
        ),
        'audits': (
            'audits'
        ),
        'autofill': (
            'autofill'
        ),
        'background_service': (
            'backgroundService'
        ),
        'browser': (
            'browser'
        ),
        'css': (
            'cSS'
        ),
        'cache_storage': (
            'cacheStorage'
        ),
        'cast': (
            'cast'
        ),
        'dom': (
            'dOM'
        ),
        'dom_debugger': (
            'dOMDebugger'
        ),
        'event_breakpoints': (
            'eventBreakpoints'
        ),
        'dom_snapshot': (
            'dOMSnapshot'
        ),
        'dom_storage': (
            'dOMStorage'
        ),
        'database': (
            'database'
        ),
        'device_orientation': (
            'deviceOrientation'
        ),
        'emulation': (
            'emulation'
        ),
        'headless_experimental': (
            'headlessExperimental'
        ),
        'io': (
            'iO'
        ),
        'indexed_db': (
            'indexedDB'
        ),
        'input': (
            'input'
        ),
        'inspector': (
            'inspector'
        ),
        'layer_tree': (
            'layerTree'
        ),
        'log': (
            'log'
        ),
        'memory': (
            'memory'
        ),
        'network': (
            'network'
        ),
        'overlay': (
            'overlay'
        ),
        'page': (
            'page'
        ),
        'performance': (
            'performance'
        ),
        'performance_timeline': (
            'performanceTimeline'
        ),
        'security': (
            'security'
        ),
        'service_worker': (
            'serviceWorker'
        ),
        'storage': (
            'storage'
        ),
        'system_info': (
            'systemInfo'
        ),
        'target': (
            'target'
        ),
        'tethering': (
            'tethering'
        ),
        'tracing': (
            'tracing'
        ),
        'fetch': (
            'fetch'
        ),
        'web_audio': (
            'webAudio'
        ),
        'web_authn': (
            'webAuthn'
        ),
        'media': (
            'media'
        ),
        'device_access': (
            'deviceAccess'
        ),
        'preload': (
            'preload'
        ),
        'fed_cm': (
            'fedCm'
        ),
        'console': (
            'console'
        ),
        'debugger': (
            'debugger'
        ),
        'heap_profiler': (
            'heapProfiler'
        ),
        'profiler': (
            'profiler'
        ),
        'runtime': (
            'runtime'
        ),
        'schema': (
            'schema'
        ),
    },
}


type_properties = {
    'snake:camel': {
        ('accessibility', 'ax_node_id'): (
            'aXNodeId'
        ),
        ('accessibility', 'ax_value_type'): (
            'aXValueType'
        ),
        ('accessibility', 'ax_value_source_type'): (
            'aXValueSourceType'
        ),
        ('accessibility', 'ax_value_native_source_type'): (
            'aXValueNativeSourceType'
        ),
        ('accessibility', 'ax_value_source'): (
            'aXValueSource'
        ),
        ('accessibility', 'ax_related_node'): (
            'aXRelatedNode'
        ),
        ('accessibility', 'ax_property'): (
            'aXProperty'
        ),
        ('accessibility', 'ax_value'): (
            'aXValue'
        ),
        ('accessibility', 'ax_property_name'): (
            'aXPropertyName'
        ),
        ('accessibility', 'ax_node'): (
            'aXNode'
        ),
        ('animation', 'animation'): (
            'animation'
        ),
        ('animation', 'animation_effect'): (
            'animationEffect'
        ),
        ('animation', 'keyframes_rule'): (
            'keyframesRule'
        ),
        ('animation', 'keyframe_style'): (
            'keyframeStyle'
        ),
        ('audits', 'affected_cookie'): (
            'affectedCookie'
        ),
        ('audits', 'affected_request'): (
            'affectedRequest'
        ),
        ('audits', 'affected_frame'): (
            'affectedFrame'
        ),
        ('audits', 'cookie_exclusion_reason'): (
            'cookieExclusionReason'
        ),
        ('audits', 'cookie_warning_reason'): (
            'cookieWarningReason'
        ),
        ('audits', 'cookie_operation'): (
            'cookieOperation'
        ),
        ('audits', 'cookie_issue_details'): (
            'cookieIssueDetails'
        ),
        ('audits', 'mixed_content_resolution_status'): (
            'mixedContentResolutionStatus'
        ),
        ('audits', 'mixed_content_resource_type'): (
            'mixedContentResourceType'
        ),
        ('audits', 'mixed_content_issue_details'): (
            'mixedContentIssueDetails'
        ),
        ('audits', 'blocked_by_response_reason'): (
            'blockedByResponseReason'
        ),
        ('audits', 'blocked_by_response_issue_details'): (
            'blockedByResponseIssueDetails'
        ),
        ('audits', 'heavy_ad_resolution_status'): (
            'heavyAdResolutionStatus'
        ),
        ('audits', 'heavy_ad_reason'): (
            'heavyAdReason'
        ),
        ('audits', 'heavy_ad_issue_details'): (
            'heavyAdIssueDetails'
        ),
        ('audits', 'content_security_policy_violation_type'): (
            'contentSecurityPolicyViolationType'
        ),
        ('audits', 'source_code_location'): (
            'sourceCodeLocation'
        ),
        ('audits', 'content_security_policy_issue_details'): (
            'contentSecurityPolicyIssueDetails'
        ),
        ('audits', 'shared_array_buffer_issue_type'): (
            'sharedArrayBufferIssueType'
        ),
        ('audits', 'shared_array_buffer_issue_details'): (
            'sharedArrayBufferIssueDetails'
        ),
        ('audits', 'low_text_contrast_issue_details'): (
            'lowTextContrastIssueDetails'
        ),
        ('audits', 'cors_issue_details'): (
            'corsIssueDetails'
        ),
        ('audits', 'attribution_reporting_issue_type'): (
            'attributionReportingIssueType'
        ),
        ('audits', 'attribution_reporting_issue_details'): (
            'attributionReportingIssueDetails'
        ),
        ('audits', 'quirks_mode_issue_details'): (
            'quirksModeIssueDetails'
        ),
        ('audits', 'navigator_user_agent_issue_details'): (
            'navigatorUserAgentIssueDetails'
        ),
        ('audits', 'generic_issue_error_type'): (
            'genericIssueErrorType'
        ),
        ('audits', 'generic_issue_details'): (
            'genericIssueDetails'
        ),
        ('audits', 'deprecation_issue_details'): (
            'deprecationIssueDetails'
        ),
        ('audits', 'bounce_tracking_issue_details'): (
            'bounceTrackingIssueDetails'
        ),
        ('audits', 'client_hint_issue_reason'): (
            'clientHintIssueReason'
        ),
        ('audits', 'federated_auth_request_issue_details'): (
            'federatedAuthRequestIssueDetails'
        ),
        ('audits', 'federated_auth_request_issue_reason'): (
            'federatedAuthRequestIssueReason'
        ),
        ('audits', 'federated_auth_user_info_request_issue_details'): (
            'federatedAuthUserInfoRequestIssueDetails'
        ),
        ('audits', 'federated_auth_user_info_request_issue_reason'): (
            'federatedAuthUserInfoRequestIssueReason'
        ),
        ('audits', 'client_hint_issue_details'): (
            'clientHintIssueDetails'
        ),
        ('audits', 'failed_request_info'): (
            'failedRequestInfo'
        ),
        ('audits', 'style_sheet_loading_issue_reason'): (
            'styleSheetLoadingIssueReason'
        ),
        ('audits', 'stylesheet_loading_issue_details'): (
            'stylesheetLoadingIssueDetails'
        ),
        ('audits', 'inspector_issue_code'): (
            'inspectorIssueCode'
        ),
        ('audits', 'inspector_issue_details'): (
            'inspectorIssueDetails'
        ),
        ('audits', 'issue_id'): (
            'issueId'
        ),
        ('audits', 'inspector_issue'): (
            'inspectorIssue'
        ),
        ('autofill', 'credit_card'): (
            'creditCard'
        ),
        ('autofill', 'address_field'): (
            'addressField'
        ),
        ('autofill', 'address_fields'): (
            'addressFields'
        ),
        ('autofill', 'address'): (
            'address'
        ),
        ('autofill', 'address_ui'): (
            'addressUI'
        ),
        ('autofill', 'filling_strategy'): (
            'fillingStrategy'
        ),
        ('autofill', 'filled_field'): (
            'filledField'
        ),
        ('background_service', 'service_name'): (
            'serviceName'
        ),
        ('background_service', 'event_metadata'): (
            'eventMetadata'
        ),
        ('background_service', 'background_service_event'): (
            'backgroundServiceEvent'
        ),
        ('browser', 'browser_context_id'): (
            'browserContextID'
        ),
        ('browser', 'window_id'): (
            'windowID'
        ),
        ('browser', 'window_state'): (
            'windowState'
        ),
        ('browser', 'bounds'): (
            'bounds'
        ),
        ('browser', 'permission_type'): (
            'permissionType'
        ),
        ('browser', 'permission_setting'): (
            'permissionSetting'
        ),
        ('browser', 'permission_descriptor'): (
            'permissionDescriptor'
        ),
        ('browser', 'browser_command_id'): (
            'browserCommandId'
        ),
        ('browser', 'bucket'): (
            'bucket'
        ),
        ('browser', 'histogram'): (
            'histogram'
        ),
        ('css', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'style_sheet_origin'): (
            'styleSheetOrigin'
        ),
        ('css', 'pseudo_element_matches'): (
            'pseudoElementMatches'
        ),
        ('css', 'inherited_style_entry'): (
            'inheritedStyleEntry'
        ),
        ('css', 'inherited_pseudo_element_matches'): (
            'inheritedPseudoElementMatches'
        ),
        ('css', 'rule_match'): (
            'ruleMatch'
        ),
        ('css', 'value'): (
            'value'
        ),
        ('css', 'specificity'): (
            'specificity'
        ),
        ('css', 'selector_list'): (
            'selectorList'
        ),
        ('css', 'css_style_sheet_header'): (
            'cSSStyleSheetHeader'
        ),
        ('css', 'css_rule'): (
            'cSSRule'
        ),
        ('css', 'css_rule_type'): (
            'cSSRuleType'
        ),
        ('css', 'rule_usage'): (
            'ruleUsage'
        ),
        ('css', 'source_range'): (
            'sourceRange'
        ),
        ('css', 'shorthand_entry'): (
            'shorthandEntry'
        ),
        ('css', 'css_computed_style_property'): (
            'cSSComputedStyleProperty'
        ),
        ('css', 'css_style'): (
            'cSSStyle'
        ),
        ('css', 'css_property'): (
            'cSSProperty'
        ),
        ('css', 'css_media'): (
            'cSSMedia'
        ),
        ('css', 'media_query'): (
            'mediaQuery'
        ),
        ('css', 'media_query_expression'): (
            'mediaQueryExpression'
        ),
        ('css', 'css_container_query'): (
            'cSSContainerQuery'
        ),
        ('css', 'css_supports'): (
            'cSSSupports'
        ),
        ('css', 'css_scope'): (
            'cSSScope'
        ),
        ('css', 'css_layer'): (
            'cSSLayer'
        ),
        ('css', 'css_layer_data'): (
            'cSSLayerData'
        ),
        ('css', 'platform_font_usage'): (
            'platformFontUsage'
        ),
        ('css', 'font_variation_axis'): (
            'fontVariationAxis'
        ),
        ('css', 'font_face'): (
            'fontFace'
        ),
        ('css', 'css_try_rule'): (
            'cSSTryRule'
        ),
        ('css', 'css_position_fallback_rule'): (
            'cSSPositionFallbackRule'
        ),
        ('css', 'css_keyframes_rule'): (
            'cSSKeyframesRule'
        ),
        ('css', 'css_property_registration'): (
            'cSSPropertyRegistration'
        ),
        ('css', 'css_property_rule'): (
            'cSSPropertyRule'
        ),
        ('css', 'css_keyframe_rule'): (
            'cSSKeyframeRule'
        ),
        ('css', 'style_declaration_edit'): (
            'styleDeclarationEdit'
        ),
        ('cache_storage', 'cache_id'): (
            'cacheId'
        ),
        ('cache_storage', 'cached_response_type'): (
            'cachedResponseType'
        ),
        ('cache_storage', 'data_entry'): (
            'dataEntry'
        ),
        ('cache_storage', 'cache'): (
            'cache'
        ),
        ('cache_storage', 'header'): (
            'header'
        ),
        ('cache_storage', 'cached_response'): (
            'cachedResponse'
        ),
        ('cast', 'sink'): (
            'sink'
        ),
        ('dom', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'backend_node'): (
            'backendNode'
        ),
        ('dom', 'pseudo_type'): (
            'pseudoType'
        ),
        ('dom', 'shadow_root_type'): (
            'shadowRootType'
        ),
        ('dom', 'compatibility_mode'): (
            'compatibilityMode'
        ),
        ('dom', 'physical_axes'): (
            'physicalAxes'
        ),
        ('dom', 'logical_axes'): (
            'logicalAxes'
        ),
        ('dom', 'node'): (
            'node'
        ),
        ('dom', 'rgba'): (
            'rGBA'
        ),
        ('dom', 'quad'): (
            'quad'
        ),
        ('dom', 'box_model'): (
            'boxModel'
        ),
        ('dom', 'shape_outside_info'): (
            'shapeOutsideInfo'
        ),
        ('dom', 'rect'): (
            'rect'
        ),
        ('dom', 'css_computed_style_property'): (
            'cSSComputedStyleProperty'
        ),
        ('dom_debugger', 'dom_breakpoint_type'): (
            'dOMBreakpointType'
        ),
        ('dom_debugger', 'csp_violation_type'): (
            'cSPViolationType'
        ),
        ('dom_debugger', 'event_listener'): (
            'eventListener'
        ),
        ('dom_snapshot', 'dom_node'): (
            'dOMNode'
        ),
        ('dom_snapshot', 'inline_text_box'): (
            'inlineTextBox'
        ),
        ('dom_snapshot', 'layout_tree_node'): (
            'layoutTreeNode'
        ),
        ('dom_snapshot', 'computed_style'): (
            'computedStyle'
        ),
        ('dom_snapshot', 'name_value'): (
            'nameValue'
        ),
        ('dom_snapshot', 'string_index'): (
            'stringIndex'
        ),
        ('dom_snapshot', 'array_of_strings'): (
            'arrayOfStrings'
        ),
        ('dom_snapshot', 'rare_string_data'): (
            'rareStringData'
        ),
        ('dom_snapshot', 'rare_boolean_data'): (
            'rareBooleanData'
        ),
        ('dom_snapshot', 'rare_integer_data'): (
            'rareIntegerData'
        ),
        ('dom_snapshot', 'rectangle'): (
            'rectangle'
        ),
        ('dom_snapshot', 'document_snapshot'): (
            'documentSnapshot'
        ),
        ('dom_snapshot', 'node_tree_snapshot'): (
            'nodeTreeSnapshot'
        ),
        ('dom_snapshot', 'layout_tree_snapshot'): (
            'layoutTreeSnapshot'
        ),
        ('dom_snapshot', 'text_box_snapshot'): (
            'textBoxSnapshot'
        ),
        ('dom_storage', 'serialized_storage_key'): (
            'serializedStorageKey'
        ),
        ('dom_storage', 'storage_id'): (
            'storageId'
        ),
        ('dom_storage', 'item'): (
            'item'
        ),
        ('database', 'database_id'): (
            'databaseId'
        ),
        ('database', 'database'): (
            'database'
        ),
        ('database', 'error'): (
            'error'
        ),
        ('emulation', 'screen_orientation'): (
            'screenOrientation'
        ),
        ('emulation', 'display_feature'): (
            'displayFeature'
        ),
        ('emulation', 'media_feature'): (
            'mediaFeature'
        ),
        ('emulation', 'virtual_time_policy'): (
            'virtualTimePolicy'
        ),
        ('emulation', 'user_agent_brand_version'): (
            'userAgentBrandVersion'
        ),
        ('emulation', 'user_agent_metadata'): (
            'userAgentMetadata'
        ),
        ('emulation', 'disabled_image_type'): (
            'disabledImageType'
        ),
        ('headless_experimental', 'screenshot_params'): (
            'screenshotParams'
        ),
        ('io', 'stream_handle'): (
            'streamHandle'
        ),
        ('indexed_db', 'database_with_object_stores'): (
            'databaseWithObjectStores'
        ),
        ('indexed_db', 'object_store'): (
            'objectStore'
        ),
        ('indexed_db', 'object_store_index'): (
            'objectStoreIndex'
        ),
        ('indexed_db', 'key'): (
            'key'
        ),
        ('indexed_db', 'key_range'): (
            'keyRange'
        ),
        ('indexed_db', 'data_entry'): (
            'dataEntry'
        ),
        ('indexed_db', 'key_path'): (
            'keyPath'
        ),
        ('input', 'touch_point'): (
            'touchPoint'
        ),
        ('input', 'gesture_source_type'): (
            'gestureSourceType'
        ),
        ('input', 'mouse_button'): (
            'mouseButton'
        ),
        ('input', 'time_since_epoch'): (
            'timeSinceEpoch'
        ),
        ('input', 'drag_data_item'): (
            'dragDataItem'
        ),
        ('input', 'drag_data'): (
            'dragData'
        ),
        ('layer_tree', 'layer_id'): (
            'layerId'
        ),
        ('layer_tree', 'snapshot_id'): (
            'snapshotId'
        ),
        ('layer_tree', 'scroll_rect'): (
            'scrollRect'
        ),
        ('layer_tree', 'sticky_position_constraint'): (
            'stickyPositionConstraint'
        ),
        ('layer_tree', 'picture_tile'): (
            'pictureTile'
        ),
        ('layer_tree', 'layer'): (
            'layer'
        ),
        ('layer_tree', 'paint_profile'): (
            'paintProfile'
        ),
        ('log', 'log_entry'): (
            'logEntry'
        ),
        ('log', 'violation_setting'): (
            'violationSetting'
        ),
        ('memory', 'pressure_level'): (
            'pressureLevel'
        ),
        ('memory', 'sampling_profile_node'): (
            'samplingProfileNode'
        ),
        ('memory', 'sampling_profile'): (
            'samplingProfile'
        ),
        ('memory', 'module'): (
            'module'
        ),
        ('network', 'resource_type'): (
            'resourceType'
        ),
        ('network', 'loader_id'): (
            'loaderId'
        ),
        ('network', 'request_id'): (
            'requestId'
        ),
        ('network', 'interception_id'): (
            'interceptionId'
        ),
        ('network', 'error_reason'): (
            'errorReason'
        ),
        ('network', 'time_since_epoch'): (
            'timeSinceEpoch'
        ),
        ('network', 'monotonic_time'): (
            'monotonicTime'
        ),
        ('network', 'headers'): (
            'headers'
        ),
        ('network', 'connection_type'): (
            'connectionType'
        ),
        ('network', 'cookie_same_site'): (
            'cookieSameSite'
        ),
        ('network', 'cookie_priority'): (
            'cookiePriority'
        ),
        ('network', 'cookie_source_scheme'): (
            'cookieSourceScheme'
        ),
        ('network', 'resource_timing'): (
            'resourceTiming'
        ),
        ('network', 'resource_priority'): (
            'resourcePriority'
        ),
        ('network', 'post_data_entry'): (
            'postDataEntry'
        ),
        ('network', 'request'): (
            'request'
        ),
        ('network', 'signed_certificate_timestamp'): (
            'signedCertificateTimestamp'
        ),
        ('network', 'security_details'): (
            'securityDetails'
        ),
        ('network', 'certificate_transparency_compliance'): (
            'certificateTransparencyCompliance'
        ),
        ('network', 'blocked_reason'): (
            'blockedReason'
        ),
        ('network', 'cors_error'): (
            'corsError'
        ),
        ('network', 'cors_error_status'): (
            'corsErrorStatus'
        ),
        ('network', 'service_worker_response_source'): (
            'serviceWorkerResponseSource'
        ),
        ('network', 'trust_token_params'): (
            'trustTokenParams'
        ),
        ('network', 'trust_token_operation_type'): (
            'trustTokenOperationType'
        ),
        ('network', 'alternate_protocol_usage'): (
            'alternateProtocolUsage'
        ),
        ('network', 'response'): (
            'response'
        ),
        ('network', 'web_socket_request'): (
            'webSocketRequest'
        ),
        ('network', 'web_socket_response'): (
            'webSocketResponse'
        ),
        ('network', 'web_socket_frame'): (
            'webSocketFrame'
        ),
        ('network', 'cached_resource'): (
            'cachedResource'
        ),
        ('network', 'initiator'): (
            'initiator'
        ),
        ('network', 'cookie'): (
            'cookie'
        ),
        ('network', 'set_cookie_blocked_reason'): (
            'setCookieBlockedReason'
        ),
        ('network', 'cookie_blocked_reason'): (
            'cookieBlockedReason'
        ),
        ('network', 'blocked_set_cookie_with_reason'): (
            'blockedSetCookieWithReason'
        ),
        ('network', 'blocked_cookie_with_reason'): (
            'blockedCookieWithReason'
        ),
        ('network', 'cookie_param'): (
            'cookieParam'
        ),
        ('network', 'auth_challenge'): (
            'authChallenge'
        ),
        ('network', 'auth_challenge_response'): (
            'authChallengeResponse'
        ),
        ('network', 'interception_stage'): (
            'interceptionStage'
        ),
        ('network', 'request_pattern'): (
            'requestPattern'
        ),
        ('network', 'signed_exchange_signature'): (
            'signedExchangeSignature'
        ),
        ('network', 'signed_exchange_header'): (
            'signedExchangeHeader'
        ),
        ('network', 'signed_exchange_error_field'): (
            'signedExchangeErrorField'
        ),
        ('network', 'signed_exchange_error'): (
            'signedExchangeError'
        ),
        ('network', 'signed_exchange_info'): (
            'signedExchangeInfo'
        ),
        ('network', 'content_encoding'): (
            'contentEncoding'
        ),
        ('network', 'private_network_request_policy'): (
            'privateNetworkRequestPolicy'
        ),
        ('network', 'ip_address_space'): (
            'iPAddressSpace'
        ),
        ('network', 'connect_timing'): (
            'connectTiming'
        ),
        ('network', 'client_security_state'): (
            'clientSecurityState'
        ),
        ('network', 'cross_origin_opener_policy_value'): (
            'crossOriginOpenerPolicyValue'
        ),
        ('network', 'cross_origin_opener_policy_status'): (
            'crossOriginOpenerPolicyStatus'
        ),
        ('network', 'cross_origin_embedder_policy_value'): (
            'crossOriginEmbedderPolicyValue'
        ),
        ('network', 'cross_origin_embedder_policy_status'): (
            'crossOriginEmbedderPolicyStatus'
        ),
        ('network', 'content_security_policy_source'): (
            'contentSecurityPolicySource'
        ),
        ('network', 'content_security_policy_status'): (
            'contentSecurityPolicyStatus'
        ),
        ('network', 'security_isolation_status'): (
            'securityIsolationStatus'
        ),
        ('network', 'report_status'): (
            'reportStatus'
        ),
        ('network', 'report_id'): (
            'reportId'
        ),
        ('network', 'reporting_api_report'): (
            'reportingApiReport'
        ),
        ('network', 'reporting_api_endpoint'): (
            'reportingApiEndpoint'
        ),
        ('network', 'load_network_resource_page_result'): (
            'loadNetworkResourcePageResult'
        ),
        ('network', 'load_network_resource_options'): (
            'loadNetworkResourceOptions'
        ),
        ('overlay', 'source_order_config'): (
            'sourceOrderConfig'
        ),
        ('overlay', 'grid_highlight_config'): (
            'gridHighlightConfig'
        ),
        ('overlay', 'flex_container_highlight_config'): (
            'flexContainerHighlightConfig'
        ),
        ('overlay', 'flex_item_highlight_config'): (
            'flexItemHighlightConfig'
        ),
        ('overlay', 'line_style'): (
            'lineStyle'
        ),
        ('overlay', 'box_style'): (
            'boxStyle'
        ),
        ('overlay', 'contrast_algorithm'): (
            'contrastAlgorithm'
        ),
        ('overlay', 'highlight_config'): (
            'highlightConfig'
        ),
        ('overlay', 'color_format'): (
            'colorFormat'
        ),
        ('overlay', 'grid_node_highlight_config'): (
            'gridNodeHighlightConfig'
        ),
        ('overlay', 'flex_node_highlight_config'): (
            'flexNodeHighlightConfig'
        ),
        ('overlay', 'scroll_snap_container_highlight_config'): (
            'scrollSnapContainerHighlightConfig'
        ),
        ('overlay', 'scroll_snap_highlight_config'): (
            'scrollSnapHighlightConfig'
        ),
        ('overlay', 'hinge_config'): (
            'hingeConfig'
        ),
        ('overlay', 'container_query_highlight_config'): (
            'containerQueryHighlightConfig'
        ),
        ('overlay', 'container_query_container_highlight_config'): (
            'containerQueryContainerHighlightConfig'
        ),
        ('overlay', 'isolated_element_highlight_config'): (
            'isolatedElementHighlightConfig'
        ),
        ('overlay', 'isolation_mode_highlight_config'): (
            'isolationModeHighlightConfig'
        ),
        ('overlay', 'inspect_mode'): (
            'inspectMode'
        ),
        ('page', 'frame_id'): (
            'frameId'
        ),
        ('page', 'ad_frame_type'): (
            'adFrameType'
        ),
        ('page', 'ad_frame_explanation'): (
            'adFrameExplanation'
        ),
        ('page', 'ad_frame_status'): (
            'adFrameStatus'
        ),
        ('page', 'ad_script_id'): (
            'adScriptId'
        ),
        ('page', 'secure_context_type'): (
            'secureContextType'
        ),
        ('page', 'cross_origin_isolated_context_type'): (
            'crossOriginIsolatedContextType'
        ),
        ('page', 'gated_api_features'): (
            'gatedAPIFeatures'
        ),
        ('page', 'permissions_policy_feature'): (
            'permissionsPolicyFeature'
        ),
        ('page', 'permissions_policy_block_reason'): (
            'permissionsPolicyBlockReason'
        ),
        ('page', 'permissions_policy_block_locator'): (
            'permissionsPolicyBlockLocator'
        ),
        ('page', 'permissions_policy_feature_state'): (
            'permissionsPolicyFeatureState'
        ),
        ('page', 'origin_trial_token_status'): (
            'originTrialTokenStatus'
        ),
        ('page', 'origin_trial_status'): (
            'originTrialStatus'
        ),
        ('page', 'origin_trial_usage_restriction'): (
            'originTrialUsageRestriction'
        ),
        ('page', 'origin_trial_token'): (
            'originTrialToken'
        ),
        ('page', 'origin_trial_token_with_status'): (
            'originTrialTokenWithStatus'
        ),
        ('page', 'origin_trial'): (
            'originTrial'
        ),
        ('page', 'frame'): (
            'frame'
        ),
        ('page', 'frame_resource'): (
            'frameResource'
        ),
        ('page', 'frame_resource_tree'): (
            'frameResourceTree'
        ),
        ('page', 'frame_tree'): (
            'frameTree'
        ),
        ('page', 'script_identifier'): (
            'scriptIdentifier'
        ),
        ('page', 'transition_type'): (
            'transitionType'
        ),
        ('page', 'navigation_entry'): (
            'navigationEntry'
        ),
        ('page', 'screencast_frame_metadata'): (
            'screencastFrameMetadata'
        ),
        ('page', 'dialog_type'): (
            'dialogType'
        ),
        ('page', 'app_manifest_error'): (
            'appManifestError'
        ),
        ('page', 'app_manifest_parsed_properties'): (
            'appManifestParsedProperties'
        ),
        ('page', 'layout_viewport'): (
            'layoutViewport'
        ),
        ('page', 'visual_viewport'): (
            'visualViewport'
        ),
        ('page', 'viewport'): (
            'viewport'
        ),
        ('page', 'font_families'): (
            'fontFamilies'
        ),
        ('page', 'script_font_families'): (
            'scriptFontFamilies'
        ),
        ('page', 'font_sizes'): (
            'fontSizes'
        ),
        ('page', 'client_navigation_reason'): (
            'clientNavigationReason'
        ),
        ('page', 'client_navigation_disposition'): (
            'clientNavigationDisposition'
        ),
        ('page', 'installability_error_argument'): (
            'installabilityErrorArgument'
        ),
        ('page', 'installability_error'): (
            'installabilityError'
        ),
        ('page', 'referrer_policy'): (
            'referrerPolicy'
        ),
        ('page', 'compilation_cache_params'): (
            'compilationCacheParams'
        ),
        ('page', 'auto_response_mode'): (
            'autoResponseMode'
        ),
        ('page', 'navigation_type'): (
            'navigationType'
        ),
        ('page', 'back_forward_cache_not_restored_reason'): (
            'backForwardCacheNotRestoredReason'
        ),
        ('page', 'back_forward_cache_not_restored_reason_type'): (
            'backForwardCacheNotRestoredReasonType'
        ),
        ('page', 'back_forward_cache_not_restored_explanation'): (
            'backForwardCacheNotRestoredExplanation'
        ),
        ('page', 'back_forward_cache_not_restored_explanation_tree'): (
            'backForwardCacheNotRestoredExplanationTree'
        ),
        ('performance', 'metric'): (
            'metric'
        ),
        ('performance_timeline', 'largest_contentful_paint'): (
            'largestContentfulPaint'
        ),
        ('performance_timeline', 'layout_shift_attribution'): (
            'layoutShiftAttribution'
        ),
        ('performance_timeline', 'layout_shift'): (
            'layoutShift'
        ),
        ('performance_timeline', 'timeline_event'): (
            'timelineEvent'
        ),
        ('security', 'certificate_id'): (
            'certificateId'
        ),
        ('security', 'mixed_content_type'): (
            'mixedContentType'
        ),
        ('security', 'security_state'): (
            'securityState'
        ),
        ('security', 'certificate_security_state'): (
            'certificateSecurityState'
        ),
        ('security', 'safety_tip_status'): (
            'safetyTipStatus'
        ),
        ('security', 'safety_tip_info'): (
            'safetyTipInfo'
        ),
        ('security', 'visible_security_state'): (
            'visibleSecurityState'
        ),
        ('security', 'security_state_explanation'): (
            'securityStateExplanation'
        ),
        ('security', 'insecure_content_status'): (
            'insecureContentStatus'
        ),
        ('security', 'certificate_error_action'): (
            'certificateErrorAction'
        ),
        ('service_worker', 'registration_id'): (
            'registrationID'
        ),
        ('service_worker', 'service_worker_registration'): (
            'serviceWorkerRegistration'
        ),
        ('service_worker', 'service_worker_version_running_status'): (
            'serviceWorkerVersionRunningStatus'
        ),
        ('service_worker', 'service_worker_version_status'): (
            'serviceWorkerVersionStatus'
        ),
        ('service_worker', 'service_worker_version'): (
            'serviceWorkerVersion'
        ),
        ('service_worker', 'service_worker_error_message'): (
            'serviceWorkerErrorMessage'
        ),
        ('storage', 'serialized_storage_key'): (
            'serializedStorageKey'
        ),
        ('storage', 'storage_type'): (
            'storageType'
        ),
        ('storage', 'usage_for_type'): (
            'usageForType'
        ),
        ('storage', 'trust_tokens'): (
            'trustTokens'
        ),
        ('storage', 'interest_group_access_type'): (
            'interestGroupAccessType'
        ),
        ('storage', 'interest_group_ad'): (
            'interestGroupAd'
        ),
        ('storage', 'interest_group_details'): (
            'interestGroupDetails'
        ),
        ('storage', 'shared_storage_access_type'): (
            'sharedStorageAccessType'
        ),
        ('storage', 'shared_storage_entry'): (
            'sharedStorageEntry'
        ),
        ('storage', 'shared_storage_metadata'): (
            'sharedStorageMetadata'
        ),
        ('storage', 'shared_storage_reporting_metadata'): (
            'sharedStorageReportingMetadata'
        ),
        ('storage', 'shared_storage_url_with_metadata'): (
            'sharedStorageUrlWithMetadata'
        ),
        ('storage', 'shared_storage_access_params'): (
            'sharedStorageAccessParams'
        ),
        ('storage', 'storage_buckets_durability'): (
            'storageBucketsDurability'
        ),
        ('storage', 'storage_bucket'): (
            'storageBucket'
        ),
        ('storage', 'storage_bucket_info'): (
            'storageBucketInfo'
        ),
        ('storage', 'attribution_reporting_source_type'): (
            'attributionReportingSourceType'
        ),
        ('storage', 'unsigned_int64_as_base10'): (
            'unsignedInt64AsBase10'
        ),
        ('storage', 'unsigned_int128_as_base16'): (
            'unsignedInt128AsBase16'
        ),
        ('storage', 'signed_int64_as_base10'): (
            'signedInt64AsBase10'
        ),
        ('storage', 'attribution_reporting_filter_data_entry'): (
            'attributionReportingFilterDataEntry'
        ),
        ('storage', 'attribution_reporting_aggregation_keys_entry'): (
            'attributionReportingAggregationKeysEntry'
        ),
        ('storage', 'attribution_reporting_event_report_windows'): (
            'attributionReportingEventReportWindows'
        ),
        ('storage', 'attribution_reporting_source_registration'): (
            'attributionReportingSourceRegistration'
        ),
        ('storage', 'attribution_reporting_source_registration_result'): (
            'attributionReportingSourceRegistrationResult'
        ),
        ('system_info', 'gpu_device'): (
            'gPUDevice'
        ),
        ('system_info', 'size'): (
            'size'
        ),
        ('system_info', 'video_decode_accelerator_capability'): (
            'videoDecodeAcceleratorCapability'
        ),
        ('system_info', 'video_encode_accelerator_capability'): (
            'videoEncodeAcceleratorCapability'
        ),
        ('system_info', 'subsampling_format'): (
            'subsamplingFormat'
        ),
        ('system_info', 'image_type'): (
            'imageType'
        ),
        ('system_info', 'image_decode_accelerator_capability'): (
            'imageDecodeAcceleratorCapability'
        ),
        ('system_info', 'gpu_info'): (
            'gPUInfo'
        ),
        ('system_info', 'process_info'): (
            'processInfo'
        ),
        ('target', 'target_id'): (
            'targetID'
        ),
        ('target', 'session_id'): (
            'sessionID'
        ),
        ('target', 'target_info'): (
            'targetInfo'
        ),
        ('target', 'filter_entry'): (
            'filterEntry'
        ),
        ('target', 'target_filter'): (
            'targetFilter'
        ),
        ('target', 'remote_location'): (
            'remoteLocation'
        ),
        ('tracing', 'memory_dump_config'): (
            'memoryDumpConfig'
        ),
        ('tracing', 'trace_config'): (
            'traceConfig'
        ),
        ('tracing', 'stream_format'): (
            'streamFormat'
        ),
        ('tracing', 'stream_compression'): (
            'streamCompression'
        ),
        ('tracing', 'memory_dump_level_of_detail'): (
            'memoryDumpLevelOfDetail'
        ),
        ('tracing', 'tracing_backend'): (
            'tracingBackend'
        ),
        ('fetch', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'request_stage'): (
            'requestStage'
        ),
        ('fetch', 'request_pattern'): (
            'requestPattern'
        ),
        ('fetch', 'header_entry'): (
            'headerEntry'
        ),
        ('fetch', 'auth_challenge'): (
            'authChallenge'
        ),
        ('fetch', 'auth_challenge_response'): (
            'authChallengeResponse'
        ),
        ('web_audio', 'graph_object_id'): (
            'graphObjectId'
        ),
        ('web_audio', 'context_type'): (
            'contextType'
        ),
        ('web_audio', 'context_state'): (
            'contextState'
        ),
        ('web_audio', 'node_type'): (
            'nodeType'
        ),
        ('web_audio', 'channel_count_mode'): (
            'channelCountMode'
        ),
        ('web_audio', 'channel_interpretation'): (
            'channelInterpretation'
        ),
        ('web_audio', 'param_type'): (
            'paramType'
        ),
        ('web_audio', 'automation_rate'): (
            'automationRate'
        ),
        ('web_audio', 'context_realtime_data'): (
            'contextRealtimeData'
        ),
        ('web_audio', 'base_audio_context'): (
            'baseAudioContext'
        ),
        ('web_audio', 'audio_listener'): (
            'audioListener'
        ),
        ('web_audio', 'audio_node'): (
            'audioNode'
        ),
        ('web_audio', 'audio_param'): (
            'audioParam'
        ),
        ('web_authn', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'authenticator_protocol'): (
            'authenticatorProtocol'
        ),
        ('web_authn', 'ctap2_version'): (
            'ctap2Version'
        ),
        ('web_authn', 'authenticator_transport'): (
            'authenticatorTransport'
        ),
        ('web_authn', 'virtual_authenticator_options'): (
            'virtualAuthenticatorOptions'
        ),
        ('web_authn', 'credential'): (
            'credential'
        ),
        ('media', 'player_id'): (
            'playerId'
        ),
        ('media', 'timestamp'): (
            'timestamp'
        ),
        ('media', 'player_message'): (
            'playerMessage'
        ),
        ('media', 'player_property'): (
            'playerProperty'
        ),
        ('media', 'player_event'): (
            'playerEvent'
        ),
        ('media', 'player_error_source_location'): (
            'playerErrorSourceLocation'
        ),
        ('media', 'player_error'): (
            'playerError'
        ),
        ('device_access', 'request_id'): (
            'requestId'
        ),
        ('device_access', 'device_id'): (
            'deviceId'
        ),
        ('device_access', 'prompt_device'): (
            'promptDevice'
        ),
        ('preload', 'rule_set_id'): (
            'ruleSetId'
        ),
        ('preload', 'rule_set'): (
            'ruleSet'
        ),
        ('preload', 'rule_set_error_type'): (
            'ruleSetErrorType'
        ),
        ('preload', 'speculation_action'): (
            'speculationAction'
        ),
        ('preload', 'speculation_target_hint'): (
            'speculationTargetHint'
        ),
        ('preload', 'preloading_attempt_key'): (
            'preloadingAttemptKey'
        ),
        ('preload', 'preloading_attempt_source'): (
            'preloadingAttemptSource'
        ),
        ('preload', 'prerender_final_status'): (
            'prerenderFinalStatus'
        ),
        ('preload', 'preloading_status'): (
            'preloadingStatus'
        ),
        ('preload', 'prefetch_status'): (
            'prefetchStatus'
        ),
        ('fed_cm', 'login_state'): (
            'loginState'
        ),
        ('fed_cm', 'dialog_type'): (
            'dialogType'
        ),
        ('fed_cm', 'account'): (
            'account'
        ),
        ('console', 'console_message'): (
            'consoleMessage'
        ),
        ('debugger', 'breakpoint_id'): (
            'breakpointId'
        ),
        ('debugger', 'call_frame_id'): (
            'callFrameId'
        ),
        ('debugger', 'location'): (
            'location'
        ),
        ('debugger', 'script_position'): (
            'scriptPosition'
        ),
        ('debugger', 'call_frame'): (
            'callFrame'
        ),
        ('debugger', 'scope'): (
            'scope'
        ),
        ('debugger', 'search_match'): (
            'searchMatch'
        ),
        ('debugger', 'break_location'): (
            'breakLocation'
        ),
        ('heap_profiler', 'heap_snapshot_object_id'): (
            'heapSnapshotObjectId'
        ),
        ('heap_profiler', 'sampling_heap_profile_node'): (
            'samplingHeapProfileNode'
        ),
        ('heap_profiler', 'sampling_heap_profile_sample'): (
            'samplingHeapProfileSample'
        ),
        ('heap_profiler', 'sampling_heap_profile'): (
            'samplingHeapProfile'
        ),
        ('profiler', 'profile_node'): (
            'profileNode'
        ),
        ('profiler', 'profile'): (
            'profile'
        ),
        ('profiler', 'position_tick_info'): (
            'positionTickInfo'
        ),
        ('profiler', 'coverage_range'): (
            'coverageRange'
        ),
        ('profiler', 'function_coverage'): (
            'functionCoverage'
        ),
        ('profiler', 'script_coverage'): (
            'scriptCoverage'
        ),
        ('profiler', 'type_object'): (
            'typeObject'
        ),
        ('profiler', 'type_profile_entry'): (
            'typeProfileEntry'
        ),
        ('profiler', 'script_type_profile'): (
            'scriptTypeProfile'
        ),
        ('runtime', 'script_id'): (
            'scriptId'
        ),
        ('runtime', 'remote_object_id'): (
            'remoteObjectId'
        ),
        ('runtime', 'unserializable_value'): (
            'unserializableValue'
        ),
        ('runtime', 'remote_object'): (
            'remoteObject'
        ),
        ('runtime', 'custom_preview'): (
            'customPreview'
        ),
        ('runtime', 'object_preview'): (
            'objectPreview'
        ),
        ('runtime', 'property_preview'): (
            'propertyPreview'
        ),
        ('runtime', 'entry_preview'): (
            'entryPreview'
        ),
        ('runtime', 'property_descriptor'): (
            'propertyDescriptor'
        ),
        ('runtime', 'internal_property_descriptor'): (
            'internalPropertyDescriptor'
        ),
        ('runtime', 'private_property_descriptor'): (
            'privatePropertyDescriptor'
        ),
        ('runtime', 'call_argument'): (
            'callArgument'
        ),
        ('runtime', 'execution_context_id'): (
            'executionContextId'
        ),
        ('runtime', 'execution_context_description'): (
            'executionContextDescription'
        ),
        ('runtime', 'exception_details'): (
            'exceptionDetails'
        ),
        ('runtime', 'timestamp'): (
            'timestamp'
        ),
        ('runtime', 'time_delta'): (
            'timeDelta'
        ),
        ('runtime', 'call_frame'): (
            'callFrame'
        ),
        ('runtime', 'stack_trace'): (
            'stackTrace'
        ),
        ('runtime', 'unique_debugger_id'): (
            'uniqueDebuggerId'
        ),
        ('runtime', 'stack_trace_id'): (
            'stackTraceId'
        ),
        ('schema', 'domain'): (
            'domain'
        ),
    },
    'camel:snake': {
        ('accessibility', 'aXNodeId'): (
            'ax_node_id'
        ),
        ('accessibility', 'aXValueType'): (
            'ax_value_type'
        ),
        ('accessibility', 'aXValueSourceType'): (
            'ax_value_source_type'
        ),
        ('accessibility', 'aXValueNativeSourceType'): (
            'ax_value_native_source_type'
        ),
        ('accessibility', 'aXValueSource'): (
            'ax_value_source'
        ),
        ('accessibility', 'aXRelatedNode'): (
            'ax_related_node'
        ),
        ('accessibility', 'aXProperty'): (
            'ax_property'
        ),
        ('accessibility', 'aXValue'): (
            'ax_value'
        ),
        ('accessibility', 'aXPropertyName'): (
            'ax_property_name'
        ),
        ('accessibility', 'aXNode'): (
            'ax_node'
        ),
        ('animation', 'animation'): (
            'animation'
        ),
        ('animation', 'animationEffect'): (
            'animation_effect'
        ),
        ('animation', 'keyframesRule'): (
            'keyframes_rule'
        ),
        ('animation', 'keyframeStyle'): (
            'keyframe_style'
        ),
        ('audits', 'affectedCookie'): (
            'affected_cookie'
        ),
        ('audits', 'affectedRequest'): (
            'affected_request'
        ),
        ('audits', 'affectedFrame'): (
            'affected_frame'
        ),
        ('audits', 'cookieExclusionReason'): (
            'cookie_exclusion_reason'
        ),
        ('audits', 'cookieWarningReason'): (
            'cookie_warning_reason'
        ),
        ('audits', 'cookieOperation'): (
            'cookie_operation'
        ),
        ('audits', 'cookieIssueDetails'): (
            'cookie_issue_details'
        ),
        ('audits', 'mixedContentResolutionStatus'): (
            'mixed_content_resolution_status'
        ),
        ('audits', 'mixedContentResourceType'): (
            'mixed_content_resource_type'
        ),
        ('audits', 'mixedContentIssueDetails'): (
            'mixed_content_issue_details'
        ),
        ('audits', 'blockedByResponseReason'): (
            'blocked_by_response_reason'
        ),
        ('audits', 'blockedByResponseIssueDetails'): (
            'blocked_by_response_issue_details'
        ),
        ('audits', 'heavyAdResolutionStatus'): (
            'heavy_ad_resolution_status'
        ),
        ('audits', 'heavyAdReason'): (
            'heavy_ad_reason'
        ),
        ('audits', 'heavyAdIssueDetails'): (
            'heavy_ad_issue_details'
        ),
        ('audits', 'contentSecurityPolicyViolationType'): (
            'content_security_policy_violation_type'
        ),
        ('audits', 'sourceCodeLocation'): (
            'source_code_location'
        ),
        ('audits', 'contentSecurityPolicyIssueDetails'): (
            'content_security_policy_issue_details'
        ),
        ('audits', 'sharedArrayBufferIssueType'): (
            'shared_array_buffer_issue_type'
        ),
        ('audits', 'sharedArrayBufferIssueDetails'): (
            'shared_array_buffer_issue_details'
        ),
        ('audits', 'lowTextContrastIssueDetails'): (
            'low_text_contrast_issue_details'
        ),
        ('audits', 'corsIssueDetails'): (
            'cors_issue_details'
        ),
        ('audits', 'attributionReportingIssueType'): (
            'attribution_reporting_issue_type'
        ),
        ('audits', 'attributionReportingIssueDetails'): (
            'attribution_reporting_issue_details'
        ),
        ('audits', 'quirksModeIssueDetails'): (
            'quirks_mode_issue_details'
        ),
        ('audits', 'navigatorUserAgentIssueDetails'): (
            'navigator_user_agent_issue_details'
        ),
        ('audits', 'genericIssueErrorType'): (
            'generic_issue_error_type'
        ),
        ('audits', 'genericIssueDetails'): (
            'generic_issue_details'
        ),
        ('audits', 'deprecationIssueDetails'): (
            'deprecation_issue_details'
        ),
        ('audits', 'bounceTrackingIssueDetails'): (
            'bounce_tracking_issue_details'
        ),
        ('audits', 'clientHintIssueReason'): (
            'client_hint_issue_reason'
        ),
        ('audits', 'federatedAuthRequestIssueDetails'): (
            'federated_auth_request_issue_details'
        ),
        ('audits', 'federatedAuthRequestIssueReason'): (
            'federated_auth_request_issue_reason'
        ),
        ('audits', 'federatedAuthUserInfoRequestIssueDetails'): (
            'federated_auth_user_info_request_issue_details'
        ),
        ('audits', 'federatedAuthUserInfoRequestIssueReason'): (
            'federated_auth_user_info_request_issue_reason'
        ),
        ('audits', 'clientHintIssueDetails'): (
            'client_hint_issue_details'
        ),
        ('audits', 'failedRequestInfo'): (
            'failed_request_info'
        ),
        ('audits', 'styleSheetLoadingIssueReason'): (
            'style_sheet_loading_issue_reason'
        ),
        ('audits', 'stylesheetLoadingIssueDetails'): (
            'stylesheet_loading_issue_details'
        ),
        ('audits', 'inspectorIssueCode'): (
            'inspector_issue_code'
        ),
        ('audits', 'inspectorIssueDetails'): (
            'inspector_issue_details'
        ),
        ('audits', 'issueId'): (
            'issue_id'
        ),
        ('audits', 'inspectorIssue'): (
            'inspector_issue'
        ),
        ('autofill', 'creditCard'): (
            'credit_card'
        ),
        ('autofill', 'addressField'): (
            'address_field'
        ),
        ('autofill', 'addressFields'): (
            'address_fields'
        ),
        ('autofill', 'address'): (
            'address'
        ),
        ('autofill', 'addressUI'): (
            'address_ui'
        ),
        ('autofill', 'fillingStrategy'): (
            'filling_strategy'
        ),
        ('autofill', 'filledField'): (
            'filled_field'
        ),
        ('backgroundService', 'serviceName'): (
            'service_name'
        ),
        ('backgroundService', 'eventMetadata'): (
            'event_metadata'
        ),
        ('backgroundService', 'backgroundServiceEvent'): (
            'background_service_event'
        ),
        ('browser', 'browserContextID'): (
            'browser_context_id'
        ),
        ('browser', 'windowID'): (
            'window_id'
        ),
        ('browser', 'windowState'): (
            'window_state'
        ),
        ('browser', 'bounds'): (
            'bounds'
        ),
        ('browser', 'permissionType'): (
            'permission_type'
        ),
        ('browser', 'permissionSetting'): (
            'permission_setting'
        ),
        ('browser', 'permissionDescriptor'): (
            'permission_descriptor'
        ),
        ('browser', 'browserCommandId'): (
            'browser_command_id'
        ),
        ('browser', 'bucket'): (
            'bucket'
        ),
        ('browser', 'histogram'): (
            'histogram'
        ),
        ('cSS', 'styleSheetId'): (
            'style_sheet_id'
        ),
        ('cSS', 'styleSheetOrigin'): (
            'style_sheet_origin'
        ),
        ('cSS', 'pseudoElementMatches'): (
            'pseudo_element_matches'
        ),
        ('cSS', 'inheritedStyleEntry'): (
            'inherited_style_entry'
        ),
        ('cSS', 'inheritedPseudoElementMatches'): (
            'inherited_pseudo_element_matches'
        ),
        ('cSS', 'ruleMatch'): (
            'rule_match'
        ),
        ('cSS', 'value'): (
            'value'
        ),
        ('cSS', 'specificity'): (
            'specificity'
        ),
        ('cSS', 'selectorList'): (
            'selector_list'
        ),
        ('cSS', 'cSSStyleSheetHeader'): (
            'css_style_sheet_header'
        ),
        ('cSS', 'cSSRule'): (
            'css_rule'
        ),
        ('cSS', 'cSSRuleType'): (
            'css_rule_type'
        ),
        ('cSS', 'ruleUsage'): (
            'rule_usage'
        ),
        ('cSS', 'sourceRange'): (
            'source_range'
        ),
        ('cSS', 'shorthandEntry'): (
            'shorthand_entry'
        ),
        ('cSS', 'cSSComputedStyleProperty'): (
            'css_computed_style_property'
        ),
        ('cSS', 'cSSStyle'): (
            'css_style'
        ),
        ('cSS', 'cSSProperty'): (
            'css_property'
        ),
        ('cSS', 'cSSMedia'): (
            'css_media'
        ),
        ('cSS', 'mediaQuery'): (
            'media_query'
        ),
        ('cSS', 'mediaQueryExpression'): (
            'media_query_expression'
        ),
        ('cSS', 'cSSContainerQuery'): (
            'css_container_query'
        ),
        ('cSS', 'cSSSupports'): (
            'css_supports'
        ),
        ('cSS', 'cSSScope'): (
            'css_scope'
        ),
        ('cSS', 'cSSLayer'): (
            'css_layer'
        ),
        ('cSS', 'cSSLayerData'): (
            'css_layer_data'
        ),
        ('cSS', 'platformFontUsage'): (
            'platform_font_usage'
        ),
        ('cSS', 'fontVariationAxis'): (
            'font_variation_axis'
        ),
        ('cSS', 'fontFace'): (
            'font_face'
        ),
        ('cSS', 'cSSTryRule'): (
            'css_try_rule'
        ),
        ('cSS', 'cSSPositionFallbackRule'): (
            'css_position_fallback_rule'
        ),
        ('cSS', 'cSSKeyframesRule'): (
            'css_keyframes_rule'
        ),
        ('cSS', 'cSSPropertyRegistration'): (
            'css_property_registration'
        ),
        ('cSS', 'cSSPropertyRule'): (
            'css_property_rule'
        ),
        ('cSS', 'cSSKeyframeRule'): (
            'css_keyframe_rule'
        ),
        ('cSS', 'styleDeclarationEdit'): (
            'style_declaration_edit'
        ),
        ('cacheStorage', 'cacheId'): (
            'cache_id'
        ),
        ('cacheStorage', 'cachedResponseType'): (
            'cached_response_type'
        ),
        ('cacheStorage', 'dataEntry'): (
            'data_entry'
        ),
        ('cacheStorage', 'cache'): (
            'cache'
        ),
        ('cacheStorage', 'header'): (
            'header'
        ),
        ('cacheStorage', 'cachedResponse'): (
            'cached_response'
        ),
        ('cast', 'sink'): (
            'sink'
        ),
        ('dOM', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'backendNodeId'): (
            'backend_node_id'
        ),
        ('dOM', 'backendNode'): (
            'backend_node'
        ),
        ('dOM', 'pseudoType'): (
            'pseudo_type'
        ),
        ('dOM', 'shadowRootType'): (
            'shadow_root_type'
        ),
        ('dOM', 'compatibilityMode'): (
            'compatibility_mode'
        ),
        ('dOM', 'physicalAxes'): (
            'physical_axes'
        ),
        ('dOM', 'logicalAxes'): (
            'logical_axes'
        ),
        ('dOM', 'node'): (
            'node'
        ),
        ('dOM', 'rGBA'): (
            'rgba'
        ),
        ('dOM', 'quad'): (
            'quad'
        ),
        ('dOM', 'boxModel'): (
            'box_model'
        ),
        ('dOM', 'shapeOutsideInfo'): (
            'shape_outside_info'
        ),
        ('dOM', 'rect'): (
            'rect'
        ),
        ('dOM', 'cSSComputedStyleProperty'): (
            'css_computed_style_property'
        ),
        ('dOMDebugger', 'dOMBreakpointType'): (
            'dom_breakpoint_type'
        ),
        ('dOMDebugger', 'cSPViolationType'): (
            'csp_violation_type'
        ),
        ('dOMDebugger', 'eventListener'): (
            'event_listener'
        ),
        ('dOMSnapshot', 'dOMNode'): (
            'dom_node'
        ),
        ('dOMSnapshot', 'inlineTextBox'): (
            'inline_text_box'
        ),
        ('dOMSnapshot', 'layoutTreeNode'): (
            'layout_tree_node'
        ),
        ('dOMSnapshot', 'computedStyle'): (
            'computed_style'
        ),
        ('dOMSnapshot', 'nameValue'): (
            'name_value'
        ),
        ('dOMSnapshot', 'stringIndex'): (
            'string_index'
        ),
        ('dOMSnapshot', 'arrayOfStrings'): (
            'array_of_strings'
        ),
        ('dOMSnapshot', 'rareStringData'): (
            'rare_string_data'
        ),
        ('dOMSnapshot', 'rareBooleanData'): (
            'rare_boolean_data'
        ),
        ('dOMSnapshot', 'rareIntegerData'): (
            'rare_integer_data'
        ),
        ('dOMSnapshot', 'rectangle'): (
            'rectangle'
        ),
        ('dOMSnapshot', 'documentSnapshot'): (
            'document_snapshot'
        ),
        ('dOMSnapshot', 'nodeTreeSnapshot'): (
            'node_tree_snapshot'
        ),
        ('dOMSnapshot', 'layoutTreeSnapshot'): (
            'layout_tree_snapshot'
        ),
        ('dOMSnapshot', 'textBoxSnapshot'): (
            'text_box_snapshot'
        ),
        ('dOMStorage', 'serializedStorageKey'): (
            'serialized_storage_key'
        ),
        ('dOMStorage', 'storageId'): (
            'storage_id'
        ),
        ('dOMStorage', 'item'): (
            'item'
        ),
        ('database', 'databaseId'): (
            'database_id'
        ),
        ('database', 'database'): (
            'database'
        ),
        ('database', 'error'): (
            'error'
        ),
        ('emulation', 'screenOrientation'): (
            'screen_orientation'
        ),
        ('emulation', 'displayFeature'): (
            'display_feature'
        ),
        ('emulation', 'mediaFeature'): (
            'media_feature'
        ),
        ('emulation', 'virtualTimePolicy'): (
            'virtual_time_policy'
        ),
        ('emulation', 'userAgentBrandVersion'): (
            'user_agent_brand_version'
        ),
        ('emulation', 'userAgentMetadata'): (
            'user_agent_metadata'
        ),
        ('emulation', 'disabledImageType'): (
            'disabled_image_type'
        ),
        ('headlessExperimental', 'screenshotParams'): (
            'screenshot_params'
        ),
        ('iO', 'streamHandle'): (
            'stream_handle'
        ),
        ('indexedDB', 'databaseWithObjectStores'): (
            'database_with_object_stores'
        ),
        ('indexedDB', 'objectStore'): (
            'object_store'
        ),
        ('indexedDB', 'objectStoreIndex'): (
            'object_store_index'
        ),
        ('indexedDB', 'key'): (
            'key'
        ),
        ('indexedDB', 'keyRange'): (
            'key_range'
        ),
        ('indexedDB', 'dataEntry'): (
            'data_entry'
        ),
        ('indexedDB', 'keyPath'): (
            'key_path'
        ),
        ('input', 'touchPoint'): (
            'touch_point'
        ),
        ('input', 'gestureSourceType'): (
            'gesture_source_type'
        ),
        ('input', 'mouseButton'): (
            'mouse_button'
        ),
        ('input', 'timeSinceEpoch'): (
            'time_since_epoch'
        ),
        ('input', 'dragDataItem'): (
            'drag_data_item'
        ),
        ('input', 'dragData'): (
            'drag_data'
        ),
        ('layerTree', 'layerId'): (
            'layer_id'
        ),
        ('layerTree', 'snapshotId'): (
            'snapshot_id'
        ),
        ('layerTree', 'scrollRect'): (
            'scroll_rect'
        ),
        ('layerTree', 'stickyPositionConstraint'): (
            'sticky_position_constraint'
        ),
        ('layerTree', 'pictureTile'): (
            'picture_tile'
        ),
        ('layerTree', 'layer'): (
            'layer'
        ),
        ('layerTree', 'paintProfile'): (
            'paint_profile'
        ),
        ('log', 'logEntry'): (
            'log_entry'
        ),
        ('log', 'violationSetting'): (
            'violation_setting'
        ),
        ('memory', 'pressureLevel'): (
            'pressure_level'
        ),
        ('memory', 'samplingProfileNode'): (
            'sampling_profile_node'
        ),
        ('memory', 'samplingProfile'): (
            'sampling_profile'
        ),
        ('memory', 'module'): (
            'module'
        ),
        ('network', 'resourceType'): (
            'resource_type'
        ),
        ('network', 'loaderId'): (
            'loader_id'
        ),
        ('network', 'requestId'): (
            'request_id'
        ),
        ('network', 'interceptionId'): (
            'interception_id'
        ),
        ('network', 'errorReason'): (
            'error_reason'
        ),
        ('network', 'timeSinceEpoch'): (
            'time_since_epoch'
        ),
        ('network', 'monotonicTime'): (
            'monotonic_time'
        ),
        ('network', 'headers'): (
            'headers'
        ),
        ('network', 'connectionType'): (
            'connection_type'
        ),
        ('network', 'cookieSameSite'): (
            'cookie_same_site'
        ),
        ('network', 'cookiePriority'): (
            'cookie_priority'
        ),
        ('network', 'cookieSourceScheme'): (
            'cookie_source_scheme'
        ),
        ('network', 'resourceTiming'): (
            'resource_timing'
        ),
        ('network', 'resourcePriority'): (
            'resource_priority'
        ),
        ('network', 'postDataEntry'): (
            'post_data_entry'
        ),
        ('network', 'request'): (
            'request'
        ),
        ('network', 'signedCertificateTimestamp'): (
            'signed_certificate_timestamp'
        ),
        ('network', 'securityDetails'): (
            'security_details'
        ),
        ('network', 'certificateTransparencyCompliance'): (
            'certificate_transparency_compliance'
        ),
        ('network', 'blockedReason'): (
            'blocked_reason'
        ),
        ('network', 'corsError'): (
            'cors_error'
        ),
        ('network', 'corsErrorStatus'): (
            'cors_error_status'
        ),
        ('network', 'serviceWorkerResponseSource'): (
            'service_worker_response_source'
        ),
        ('network', 'trustTokenParams'): (
            'trust_token_params'
        ),
        ('network', 'trustTokenOperationType'): (
            'trust_token_operation_type'
        ),
        ('network', 'alternateProtocolUsage'): (
            'alternate_protocol_usage'
        ),
        ('network', 'response'): (
            'response'
        ),
        ('network', 'webSocketRequest'): (
            'web_socket_request'
        ),
        ('network', 'webSocketResponse'): (
            'web_socket_response'
        ),
        ('network', 'webSocketFrame'): (
            'web_socket_frame'
        ),
        ('network', 'cachedResource'): (
            'cached_resource'
        ),
        ('network', 'initiator'): (
            'initiator'
        ),
        ('network', 'cookie'): (
            'cookie'
        ),
        ('network', 'setCookieBlockedReason'): (
            'set_cookie_blocked_reason'
        ),
        ('network', 'cookieBlockedReason'): (
            'cookie_blocked_reason'
        ),
        ('network', 'blockedSetCookieWithReason'): (
            'blocked_set_cookie_with_reason'
        ),
        ('network', 'blockedCookieWithReason'): (
            'blocked_cookie_with_reason'
        ),
        ('network', 'cookieParam'): (
            'cookie_param'
        ),
        ('network', 'authChallenge'): (
            'auth_challenge'
        ),
        ('network', 'authChallengeResponse'): (
            'auth_challenge_response'
        ),
        ('network', 'interceptionStage'): (
            'interception_stage'
        ),
        ('network', 'requestPattern'): (
            'request_pattern'
        ),
        ('network', 'signedExchangeSignature'): (
            'signed_exchange_signature'
        ),
        ('network', 'signedExchangeHeader'): (
            'signed_exchange_header'
        ),
        ('network', 'signedExchangeErrorField'): (
            'signed_exchange_error_field'
        ),
        ('network', 'signedExchangeError'): (
            'signed_exchange_error'
        ),
        ('network', 'signedExchangeInfo'): (
            'signed_exchange_info'
        ),
        ('network', 'contentEncoding'): (
            'content_encoding'
        ),
        ('network', 'privateNetworkRequestPolicy'): (
            'private_network_request_policy'
        ),
        ('network', 'iPAddressSpace'): (
            'ip_address_space'
        ),
        ('network', 'connectTiming'): (
            'connect_timing'
        ),
        ('network', 'clientSecurityState'): (
            'client_security_state'
        ),
        ('network', 'crossOriginOpenerPolicyValue'): (
            'cross_origin_opener_policy_value'
        ),
        ('network', 'crossOriginOpenerPolicyStatus'): (
            'cross_origin_opener_policy_status'
        ),
        ('network', 'crossOriginEmbedderPolicyValue'): (
            'cross_origin_embedder_policy_value'
        ),
        ('network', 'crossOriginEmbedderPolicyStatus'): (
            'cross_origin_embedder_policy_status'
        ),
        ('network', 'contentSecurityPolicySource'): (
            'content_security_policy_source'
        ),
        ('network', 'contentSecurityPolicyStatus'): (
            'content_security_policy_status'
        ),
        ('network', 'securityIsolationStatus'): (
            'security_isolation_status'
        ),
        ('network', 'reportStatus'): (
            'report_status'
        ),
        ('network', 'reportId'): (
            'report_id'
        ),
        ('network', 'reportingApiReport'): (
            'reporting_api_report'
        ),
        ('network', 'reportingApiEndpoint'): (
            'reporting_api_endpoint'
        ),
        ('network', 'loadNetworkResourcePageResult'): (
            'load_network_resource_page_result'
        ),
        ('network', 'loadNetworkResourceOptions'): (
            'load_network_resource_options'
        ),
        ('overlay', 'sourceOrderConfig'): (
            'source_order_config'
        ),
        ('overlay', 'gridHighlightConfig'): (
            'grid_highlight_config'
        ),
        ('overlay', 'flexContainerHighlightConfig'): (
            'flex_container_highlight_config'
        ),
        ('overlay', 'flexItemHighlightConfig'): (
            'flex_item_highlight_config'
        ),
        ('overlay', 'lineStyle'): (
            'line_style'
        ),
        ('overlay', 'boxStyle'): (
            'box_style'
        ),
        ('overlay', 'contrastAlgorithm'): (
            'contrast_algorithm'
        ),
        ('overlay', 'highlightConfig'): (
            'highlight_config'
        ),
        ('overlay', 'colorFormat'): (
            'color_format'
        ),
        ('overlay', 'gridNodeHighlightConfig'): (
            'grid_node_highlight_config'
        ),
        ('overlay', 'flexNodeHighlightConfig'): (
            'flex_node_highlight_config'
        ),
        ('overlay', 'scrollSnapContainerHighlightConfig'): (
            'scroll_snap_container_highlight_config'
        ),
        ('overlay', 'scrollSnapHighlightConfig'): (
            'scroll_snap_highlight_config'
        ),
        ('overlay', 'hingeConfig'): (
            'hinge_config'
        ),
        ('overlay', 'containerQueryHighlightConfig'): (
            'container_query_highlight_config'
        ),
        ('overlay', 'containerQueryContainerHighlightConfig'): (
            'container_query_container_highlight_config'
        ),
        ('overlay', 'isolatedElementHighlightConfig'): (
            'isolated_element_highlight_config'
        ),
        ('overlay', 'isolationModeHighlightConfig'): (
            'isolation_mode_highlight_config'
        ),
        ('overlay', 'inspectMode'): (
            'inspect_mode'
        ),
        ('page', 'frameId'): (
            'frame_id'
        ),
        ('page', 'adFrameType'): (
            'ad_frame_type'
        ),
        ('page', 'adFrameExplanation'): (
            'ad_frame_explanation'
        ),
        ('page', 'adFrameStatus'): (
            'ad_frame_status'
        ),
        ('page', 'adScriptId'): (
            'ad_script_id'
        ),
        ('page', 'secureContextType'): (
            'secure_context_type'
        ),
        ('page', 'crossOriginIsolatedContextType'): (
            'cross_origin_isolated_context_type'
        ),
        ('page', 'gatedAPIFeatures'): (
            'gated_api_features'
        ),
        ('page', 'permissionsPolicyFeature'): (
            'permissions_policy_feature'
        ),
        ('page', 'permissionsPolicyBlockReason'): (
            'permissions_policy_block_reason'
        ),
        ('page', 'permissionsPolicyBlockLocator'): (
            'permissions_policy_block_locator'
        ),
        ('page', 'permissionsPolicyFeatureState'): (
            'permissions_policy_feature_state'
        ),
        ('page', 'originTrialTokenStatus'): (
            'origin_trial_token_status'
        ),
        ('page', 'originTrialStatus'): (
            'origin_trial_status'
        ),
        ('page', 'originTrialUsageRestriction'): (
            'origin_trial_usage_restriction'
        ),
        ('page', 'originTrialToken'): (
            'origin_trial_token'
        ),
        ('page', 'originTrialTokenWithStatus'): (
            'origin_trial_token_with_status'
        ),
        ('page', 'originTrial'): (
            'origin_trial'
        ),
        ('page', 'frame'): (
            'frame'
        ),
        ('page', 'frameResource'): (
            'frame_resource'
        ),
        ('page', 'frameResourceTree'): (
            'frame_resource_tree'
        ),
        ('page', 'frameTree'): (
            'frame_tree'
        ),
        ('page', 'scriptIdentifier'): (
            'script_identifier'
        ),
        ('page', 'transitionType'): (
            'transition_type'
        ),
        ('page', 'navigationEntry'): (
            'navigation_entry'
        ),
        ('page', 'screencastFrameMetadata'): (
            'screencast_frame_metadata'
        ),
        ('page', 'dialogType'): (
            'dialog_type'
        ),
        ('page', 'appManifestError'): (
            'app_manifest_error'
        ),
        ('page', 'appManifestParsedProperties'): (
            'app_manifest_parsed_properties'
        ),
        ('page', 'layoutViewport'): (
            'layout_viewport'
        ),
        ('page', 'visualViewport'): (
            'visual_viewport'
        ),
        ('page', 'viewport'): (
            'viewport'
        ),
        ('page', 'fontFamilies'): (
            'font_families'
        ),
        ('page', 'scriptFontFamilies'): (
            'script_font_families'
        ),
        ('page', 'fontSizes'): (
            'font_sizes'
        ),
        ('page', 'clientNavigationReason'): (
            'client_navigation_reason'
        ),
        ('page', 'clientNavigationDisposition'): (
            'client_navigation_disposition'
        ),
        ('page', 'installabilityErrorArgument'): (
            'installability_error_argument'
        ),
        ('page', 'installabilityError'): (
            'installability_error'
        ),
        ('page', 'referrerPolicy'): (
            'referrer_policy'
        ),
        ('page', 'compilationCacheParams'): (
            'compilation_cache_params'
        ),
        ('page', 'autoResponseMode'): (
            'auto_response_mode'
        ),
        ('page', 'navigationType'): (
            'navigation_type'
        ),
        ('page', 'backForwardCacheNotRestoredReason'): (
            'back_forward_cache_not_restored_reason'
        ),
        ('page', 'backForwardCacheNotRestoredReasonType'): (
            'back_forward_cache_not_restored_reason_type'
        ),
        ('page', 'backForwardCacheNotRestoredExplanation'): (
            'back_forward_cache_not_restored_explanation'
        ),
        ('page', 'backForwardCacheNotRestoredExplanationTree'): (
            'back_forward_cache_not_restored_explanation_tree'
        ),
        ('performance', 'metric'): (
            'metric'
        ),
        ('performanceTimeline', 'largestContentfulPaint'): (
            'largest_contentful_paint'
        ),
        ('performanceTimeline', 'layoutShiftAttribution'): (
            'layout_shift_attribution'
        ),
        ('performanceTimeline', 'layoutShift'): (
            'layout_shift'
        ),
        ('performanceTimeline', 'timelineEvent'): (
            'timeline_event'
        ),
        ('security', 'certificateId'): (
            'certificate_id'
        ),
        ('security', 'mixedContentType'): (
            'mixed_content_type'
        ),
        ('security', 'securityState'): (
            'security_state'
        ),
        ('security', 'certificateSecurityState'): (
            'certificate_security_state'
        ),
        ('security', 'safetyTipStatus'): (
            'safety_tip_status'
        ),
        ('security', 'safetyTipInfo'): (
            'safety_tip_info'
        ),
        ('security', 'visibleSecurityState'): (
            'visible_security_state'
        ),
        ('security', 'securityStateExplanation'): (
            'security_state_explanation'
        ),
        ('security', 'insecureContentStatus'): (
            'insecure_content_status'
        ),
        ('security', 'certificateErrorAction'): (
            'certificate_error_action'
        ),
        ('serviceWorker', 'registrationID'): (
            'registration_id'
        ),
        ('serviceWorker', 'serviceWorkerRegistration'): (
            'service_worker_registration'
        ),
        ('serviceWorker', 'serviceWorkerVersionRunningStatus'): (
            'service_worker_version_running_status'
        ),
        ('serviceWorker', 'serviceWorkerVersionStatus'): (
            'service_worker_version_status'
        ),
        ('serviceWorker', 'serviceWorkerVersion'): (
            'service_worker_version'
        ),
        ('serviceWorker', 'serviceWorkerErrorMessage'): (
            'service_worker_error_message'
        ),
        ('storage', 'serializedStorageKey'): (
            'serialized_storage_key'
        ),
        ('storage', 'storageType'): (
            'storage_type'
        ),
        ('storage', 'usageForType'): (
            'usage_for_type'
        ),
        ('storage', 'trustTokens'): (
            'trust_tokens'
        ),
        ('storage', 'interestGroupAccessType'): (
            'interest_group_access_type'
        ),
        ('storage', 'interestGroupAd'): (
            'interest_group_ad'
        ),
        ('storage', 'interestGroupDetails'): (
            'interest_group_details'
        ),
        ('storage', 'sharedStorageAccessType'): (
            'shared_storage_access_type'
        ),
        ('storage', 'sharedStorageEntry'): (
            'shared_storage_entry'
        ),
        ('storage', 'sharedStorageMetadata'): (
            'shared_storage_metadata'
        ),
        ('storage', 'sharedStorageReportingMetadata'): (
            'shared_storage_reporting_metadata'
        ),
        ('storage', 'sharedStorageUrlWithMetadata'): (
            'shared_storage_url_with_metadata'
        ),
        ('storage', 'sharedStorageAccessParams'): (
            'shared_storage_access_params'
        ),
        ('storage', 'storageBucketsDurability'): (
            'storage_buckets_durability'
        ),
        ('storage', 'storageBucket'): (
            'storage_bucket'
        ),
        ('storage', 'storageBucketInfo'): (
            'storage_bucket_info'
        ),
        ('storage', 'attributionReportingSourceType'): (
            'attribution_reporting_source_type'
        ),
        ('storage', 'unsignedInt64AsBase10'): (
            'unsigned_int64_as_base10'
        ),
        ('storage', 'unsignedInt128AsBase16'): (
            'unsigned_int128_as_base16'
        ),
        ('storage', 'signedInt64AsBase10'): (
            'signed_int64_as_base10'
        ),
        ('storage', 'attributionReportingFilterDataEntry'): (
            'attribution_reporting_filter_data_entry'
        ),
        ('storage', 'attributionReportingAggregationKeysEntry'): (
            'attribution_reporting_aggregation_keys_entry'
        ),
        ('storage', 'attributionReportingEventReportWindows'): (
            'attribution_reporting_event_report_windows'
        ),
        ('storage', 'attributionReportingSourceRegistration'): (
            'attribution_reporting_source_registration'
        ),
        ('storage', 'attributionReportingSourceRegistrationResult'): (
            'attribution_reporting_source_registration_result'
        ),
        ('systemInfo', 'gPUDevice'): (
            'gpu_device'
        ),
        ('systemInfo', 'size'): (
            'size'
        ),
        ('systemInfo', 'videoDecodeAcceleratorCapability'): (
            'video_decode_accelerator_capability'
        ),
        ('systemInfo', 'videoEncodeAcceleratorCapability'): (
            'video_encode_accelerator_capability'
        ),
        ('systemInfo', 'subsamplingFormat'): (
            'subsampling_format'
        ),
        ('systemInfo', 'imageType'): (
            'image_type'
        ),
        ('systemInfo', 'imageDecodeAcceleratorCapability'): (
            'image_decode_accelerator_capability'
        ),
        ('systemInfo', 'gPUInfo'): (
            'gpu_info'
        ),
        ('systemInfo', 'processInfo'): (
            'process_info'
        ),
        ('target', 'targetID'): (
            'target_id'
        ),
        ('target', 'sessionID'): (
            'session_id'
        ),
        ('target', 'targetInfo'): (
            'target_info'
        ),
        ('target', 'filterEntry'): (
            'filter_entry'
        ),
        ('target', 'targetFilter'): (
            'target_filter'
        ),
        ('target', 'remoteLocation'): (
            'remote_location'
        ),
        ('tracing', 'memoryDumpConfig'): (
            'memory_dump_config'
        ),
        ('tracing', 'traceConfig'): (
            'trace_config'
        ),
        ('tracing', 'streamFormat'): (
            'stream_format'
        ),
        ('tracing', 'streamCompression'): (
            'stream_compression'
        ),
        ('tracing', 'memoryDumpLevelOfDetail'): (
            'memory_dump_level_of_detail'
        ),
        ('tracing', 'tracingBackend'): (
            'tracing_backend'
        ),
        ('fetch', 'requestId'): (
            'request_id'
        ),
        ('fetch', 'requestStage'): (
            'request_stage'
        ),
        ('fetch', 'requestPattern'): (
            'request_pattern'
        ),
        ('fetch', 'headerEntry'): (
            'header_entry'
        ),
        ('fetch', 'authChallenge'): (
            'auth_challenge'
        ),
        ('fetch', 'authChallengeResponse'): (
            'auth_challenge_response'
        ),
        ('webAudio', 'graphObjectId'): (
            'graph_object_id'
        ),
        ('webAudio', 'contextType'): (
            'context_type'
        ),
        ('webAudio', 'contextState'): (
            'context_state'
        ),
        ('webAudio', 'nodeType'): (
            'node_type'
        ),
        ('webAudio', 'channelCountMode'): (
            'channel_count_mode'
        ),
        ('webAudio', 'channelInterpretation'): (
            'channel_interpretation'
        ),
        ('webAudio', 'paramType'): (
            'param_type'
        ),
        ('webAudio', 'automationRate'): (
            'automation_rate'
        ),
        ('webAudio', 'contextRealtimeData'): (
            'context_realtime_data'
        ),
        ('webAudio', 'baseAudioContext'): (
            'base_audio_context'
        ),
        ('webAudio', 'audioListener'): (
            'audio_listener'
        ),
        ('webAudio', 'audioNode'): (
            'audio_node'
        ),
        ('webAudio', 'audioParam'): (
            'audio_param'
        ),
        ('webAuthn', 'authenticatorId'): (
            'authenticator_id'
        ),
        ('webAuthn', 'authenticatorProtocol'): (
            'authenticator_protocol'
        ),
        ('webAuthn', 'ctap2Version'): (
            'ctap2_version'
        ),
        ('webAuthn', 'authenticatorTransport'): (
            'authenticator_transport'
        ),
        ('webAuthn', 'virtualAuthenticatorOptions'): (
            'virtual_authenticator_options'
        ),
        ('webAuthn', 'credential'): (
            'credential'
        ),
        ('media', 'playerId'): (
            'player_id'
        ),
        ('media', 'timestamp'): (
            'timestamp'
        ),
        ('media', 'playerMessage'): (
            'player_message'
        ),
        ('media', 'playerProperty'): (
            'player_property'
        ),
        ('media', 'playerEvent'): (
            'player_event'
        ),
        ('media', 'playerErrorSourceLocation'): (
            'player_error_source_location'
        ),
        ('media', 'playerError'): (
            'player_error'
        ),
        ('deviceAccess', 'requestId'): (
            'request_id'
        ),
        ('deviceAccess', 'deviceId'): (
            'device_id'
        ),
        ('deviceAccess', 'promptDevice'): (
            'prompt_device'
        ),
        ('preload', 'ruleSetId'): (
            'rule_set_id'
        ),
        ('preload', 'ruleSet'): (
            'rule_set'
        ),
        ('preload', 'ruleSetErrorType'): (
            'rule_set_error_type'
        ),
        ('preload', 'speculationAction'): (
            'speculation_action'
        ),
        ('preload', 'speculationTargetHint'): (
            'speculation_target_hint'
        ),
        ('preload', 'preloadingAttemptKey'): (
            'preloading_attempt_key'
        ),
        ('preload', 'preloadingAttemptSource'): (
            'preloading_attempt_source'
        ),
        ('preload', 'prerenderFinalStatus'): (
            'prerender_final_status'
        ),
        ('preload', 'preloadingStatus'): (
            'preloading_status'
        ),
        ('preload', 'prefetchStatus'): (
            'prefetch_status'
        ),
        ('fedCm', 'loginState'): (
            'login_state'
        ),
        ('fedCm', 'dialogType'): (
            'dialog_type'
        ),
        ('fedCm', 'account'): (
            'account'
        ),
        ('console', 'consoleMessage'): (
            'console_message'
        ),
        ('debugger', 'breakpointId'): (
            'breakpoint_id'
        ),
        ('debugger', 'callFrameId'): (
            'call_frame_id'
        ),
        ('debugger', 'location'): (
            'location'
        ),
        ('debugger', 'scriptPosition'): (
            'script_position'
        ),
        ('debugger', 'callFrame'): (
            'call_frame'
        ),
        ('debugger', 'scope'): (
            'scope'
        ),
        ('debugger', 'searchMatch'): (
            'search_match'
        ),
        ('debugger', 'breakLocation'): (
            'break_location'
        ),
        ('heapProfiler', 'heapSnapshotObjectId'): (
            'heap_snapshot_object_id'
        ),
        ('heapProfiler', 'samplingHeapProfileNode'): (
            'sampling_heap_profile_node'
        ),
        ('heapProfiler', 'samplingHeapProfileSample'): (
            'sampling_heap_profile_sample'
        ),
        ('heapProfiler', 'samplingHeapProfile'): (
            'sampling_heap_profile'
        ),
        ('profiler', 'profileNode'): (
            'profile_node'
        ),
        ('profiler', 'profile'): (
            'profile'
        ),
        ('profiler', 'positionTickInfo'): (
            'position_tick_info'
        ),
        ('profiler', 'coverageRange'): (
            'coverage_range'
        ),
        ('profiler', 'functionCoverage'): (
            'function_coverage'
        ),
        ('profiler', 'scriptCoverage'): (
            'script_coverage'
        ),
        ('profiler', 'typeObject'): (
            'type_object'
        ),
        ('profiler', 'typeProfileEntry'): (
            'type_profile_entry'
        ),
        ('profiler', 'scriptTypeProfile'): (
            'script_type_profile'
        ),
        ('runtime', 'scriptId'): (
            'script_id'
        ),
        ('runtime', 'remoteObjectId'): (
            'remote_object_id'
        ),
        ('runtime', 'unserializableValue'): (
            'unserializable_value'
        ),
        ('runtime', 'remoteObject'): (
            'remote_object'
        ),
        ('runtime', 'customPreview'): (
            'custom_preview'
        ),
        ('runtime', 'objectPreview'): (
            'object_preview'
        ),
        ('runtime', 'propertyPreview'): (
            'property_preview'
        ),
        ('runtime', 'entryPreview'): (
            'entry_preview'
        ),
        ('runtime', 'propertyDescriptor'): (
            'property_descriptor'
        ),
        ('runtime', 'internalPropertyDescriptor'): (
            'internal_property_descriptor'
        ),
        ('runtime', 'privatePropertyDescriptor'): (
            'private_property_descriptor'
        ),
        ('runtime', 'callArgument'): (
            'call_argument'
        ),
        ('runtime', 'executionContextId'): (
            'execution_context_id'
        ),
        ('runtime', 'executionContextDescription'): (
            'execution_context_description'
        ),
        ('runtime', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'timestamp'): (
            'timestamp'
        ),
        ('runtime', 'timeDelta'): (
            'time_delta'
        ),
        ('runtime', 'callFrame'): (
            'call_frame'
        ),
        ('runtime', 'stackTrace'): (
            'stack_trace'
        ),
        ('runtime', 'uniqueDebuggerId'): (
            'unique_debugger_id'
        ),
        ('runtime', 'stackTraceId'): (
            'stack_trace_id'
        ),
        ('schema', 'domain'): (
            'domain'
        ),
    },
}


command_names = {
    'snake:camel': {
        ('accessibility', 'disable'): (
            'disable'
        ),
        ('accessibility', 'enable'): (
            'enable'
        ),
        ('accessibility', 'get_partial_ax_tree'): (
            'getPartialAXTree'
        ),
        ('accessibility', 'get_full_ax_tree'): (
            'getFullAXTree'
        ),
        ('accessibility', 'get_root_ax_node'): (
            'getRootAXNode'
        ),
        ('accessibility', 'get_ax_node_and_ancestors'): (
            'getAXNodeAndAncestors'
        ),
        ('accessibility', 'get_child_ax_nodes'): (
            'getChildAXNodes'
        ),
        ('accessibility', 'query_ax_tree'): (
            'queryAXTree'
        ),
        ('animation', 'disable'): (
            'disable'
        ),
        ('animation', 'enable'): (
            'enable'
        ),
        ('animation', 'get_current_time'): (
            'getCurrentTime'
        ),
        ('animation', 'get_playback_rate'): (
            'getPlaybackRate'
        ),
        ('animation', 'release_animations'): (
            'releaseAnimations'
        ),
        ('animation', 'resolve_animation'): (
            'resolveAnimation'
        ),
        ('animation', 'seek_animations'): (
            'seekAnimations'
        ),
        ('animation', 'set_paused'): (
            'setPaused'
        ),
        ('animation', 'set_playback_rate'): (
            'setPlaybackRate'
        ),
        ('animation', 'set_timing'): (
            'setTiming'
        ),
        ('audits', 'get_encoded_response'): (
            'getEncodedResponse'
        ),
        ('audits', 'disable'): (
            'disable'
        ),
        ('audits', 'enable'): (
            'enable'
        ),
        ('audits', 'check_contrast'): (
            'checkContrast'
        ),
        ('audits', 'check_forms_issues'): (
            'checkFormsIssues'
        ),
        ('autofill', 'trigger'): (
            'trigger'
        ),
        ('autofill', 'set_addresses'): (
            'setAddresses'
        ),
        ('autofill', 'disable'): (
            'disable'
        ),
        ('autofill', 'enable'): (
            'enable'
        ),
        ('background_service', 'start_observing'): (
            'startObserving'
        ),
        ('background_service', 'stop_observing'): (
            'stopObserving'
        ),
        ('background_service', 'set_recording'): (
            'setRecording'
        ),
        ('background_service', 'clear_events'): (
            'clearEvents'
        ),
        ('browser', 'set_permission'): (
            'setPermission'
        ),
        ('browser', 'grant_permissions'): (
            'grantPermissions'
        ),
        ('browser', 'reset_permissions'): (
            'resetPermissions'
        ),
        ('browser', 'set_download_behavior'): (
            'setDownloadBehavior'
        ),
        ('browser', 'cancel_download'): (
            'cancelDownload'
        ),
        ('browser', 'close'): (
            'close'
        ),
        ('browser', 'crash'): (
            'crash'
        ),
        ('browser', 'crash_gpu_process'): (
            'crashGpuProcess'
        ),
        ('browser', 'get_version'): (
            'getVersion'
        ),
        ('browser', 'get_browser_command_line'): (
            'getBrowserCommandLine'
        ),
        ('browser', 'get_histograms'): (
            'getHistograms'
        ),
        ('browser', 'get_histogram'): (
            'getHistogram'
        ),
        ('browser', 'get_window_bounds'): (
            'getWindowBounds'
        ),
        ('browser', 'get_window_for_target'): (
            'getWindowForTarget'
        ),
        ('browser', 'set_window_bounds'): (
            'setWindowBounds'
        ),
        ('browser', 'set_dock_tile'): (
            'setDockTile'
        ),
        ('browser', 'execute_browser_command'): (
            'executeBrowserCommand'
        ),
        ('browser', 'add_privacy_sandbox_enrollment_override'): (
            'addPrivacySandboxEnrollmentOverride'
        ),
        ('css', 'add_rule'): (
            'addRule'
        ),
        ('css', 'collect_class_names'): (
            'collectClassNames'
        ),
        ('css', 'create_style_sheet'): (
            'createStyleSheet'
        ),
        ('css', 'disable'): (
            'disable'
        ),
        ('css', 'enable'): (
            'enable'
        ),
        ('css', 'force_pseudo_state'): (
            'forcePseudoState'
        ),
        ('css', 'get_background_colors'): (
            'getBackgroundColors'
        ),
        ('css', 'get_computed_style_for_node'): (
            'getComputedStyleForNode'
        ),
        ('css', 'get_inline_styles_for_node'): (
            'getInlineStylesForNode'
        ),
        ('css', 'get_matched_styles_for_node'): (
            'getMatchedStylesForNode'
        ),
        ('css', 'get_media_queries'): (
            'getMediaQueries'
        ),
        ('css', 'get_platform_fonts_for_node'): (
            'getPlatformFontsForNode'
        ),
        ('css', 'get_style_sheet_text'): (
            'getStyleSheetText'
        ),
        ('css', 'get_layers_for_node'): (
            'getLayersForNode'
        ),
        ('css', 'track_computed_style_updates'): (
            'trackComputedStyleUpdates'
        ),
        ('css', 'take_computed_style_updates'): (
            'takeComputedStyleUpdates'
        ),
        ('css', 'set_effective_property_value_for_node'): (
            'setEffectivePropertyValueForNode'
        ),
        ('css', 'set_keyframe_key'): (
            'setKeyframeKey'
        ),
        ('css', 'set_media_text'): (
            'setMediaText'
        ),
        ('css', 'set_container_query_text'): (
            'setContainerQueryText'
        ),
        ('css', 'set_supports_text'): (
            'setSupportsText'
        ),
        ('css', 'set_scope_text'): (
            'setScopeText'
        ),
        ('css', 'set_rule_selector'): (
            'setRuleSelector'
        ),
        ('css', 'set_style_sheet_text'): (
            'setStyleSheetText'
        ),
        ('css', 'set_style_texts'): (
            'setStyleTexts'
        ),
        ('css', 'start_rule_usage_tracking'): (
            'startRuleUsageTracking'
        ),
        ('css', 'stop_rule_usage_tracking'): (
            'stopRuleUsageTracking'
        ),
        ('css', 'take_coverage_delta'): (
            'takeCoverageDelta'
        ),
        ('css', 'set_local_fonts_enabled'): (
            'setLocalFontsEnabled'
        ),
        ('cache_storage', 'delete_cache'): (
            'deleteCache'
        ),
        ('cache_storage', 'delete_entry'): (
            'deleteEntry'
        ),
        ('cache_storage', 'request_cache_names'): (
            'requestCacheNames'
        ),
        ('cache_storage', 'request_cached_response'): (
            'requestCachedResponse'
        ),
        ('cache_storage', 'request_entries'): (
            'requestEntries'
        ),
        ('cast', 'enable'): (
            'enable'
        ),
        ('cast', 'disable'): (
            'disable'
        ),
        ('cast', 'set_sink_to_use'): (
            'setSinkToUse'
        ),
        ('cast', 'start_desktop_mirroring'): (
            'startDesktopMirroring'
        ),
        ('cast', 'start_tab_mirroring'): (
            'startTabMirroring'
        ),
        ('cast', 'stop_casting'): (
            'stopCasting'
        ),
        ('dom', 'collect_class_names_from_subtree'): (
            'collectClassNamesFromSubtree'
        ),
        ('dom', 'copy_to'): (
            'copyTo'
        ),
        ('dom', 'describe_node'): (
            'describeNode'
        ),
        ('dom', 'scroll_into_view_if_needed'): (
            'scrollIntoViewIfNeeded'
        ),
        ('dom', 'disable'): (
            'disable'
        ),
        ('dom', 'discard_search_results'): (
            'discardSearchResults'
        ),
        ('dom', 'enable'): (
            'enable'
        ),
        ('dom', 'focus'): (
            'focus'
        ),
        ('dom', 'get_attributes'): (
            'getAttributes'
        ),
        ('dom', 'get_box_model'): (
            'getBoxModel'
        ),
        ('dom', 'get_content_quads'): (
            'getContentQuads'
        ),
        ('dom', 'get_document'): (
            'getDocument'
        ),
        ('dom', 'get_flattened_document'): (
            'getFlattenedDocument'
        ),
        ('dom', 'get_nodes_for_subtree_by_style'): (
            'getNodesForSubtreeByStyle'
        ),
        ('dom', 'get_node_for_location'): (
            'getNodeForLocation'
        ),
        ('dom', 'get_outer_html'): (
            'getOuterHTML'
        ),
        ('dom', 'get_relayout_boundary'): (
            'getRelayoutBoundary'
        ),
        ('dom', 'get_search_results'): (
            'getSearchResults'
        ),
        ('dom', 'hide_highlight'): (
            'hideHighlight'
        ),
        ('dom', 'highlight_node'): (
            'highlightNode'
        ),
        ('dom', 'highlight_rect'): (
            'highlightRect'
        ),
        ('dom', 'mark_undoable_state'): (
            'markUndoableState'
        ),
        ('dom', 'move_to'): (
            'moveTo'
        ),
        ('dom', 'perform_search'): (
            'performSearch'
        ),
        ('dom', 'push_node_by_path_to_frontend'): (
            'pushNodeByPathToFrontend'
        ),
        ('dom', 'push_nodes_by_backend_ids_to_frontend'): (
            'pushNodesByBackendIdsToFrontend'
        ),
        ('dom', 'query_selector'): (
            'querySelector'
        ),
        ('dom', 'query_selector_all'): (
            'querySelectorAll'
        ),
        ('dom', 'get_top_layer_elements'): (
            'getTopLayerElements'
        ),
        ('dom', 'redo'): (
            'redo'
        ),
        ('dom', 'remove_attribute'): (
            'removeAttribute'
        ),
        ('dom', 'remove_node'): (
            'removeNode'
        ),
        ('dom', 'request_child_nodes'): (
            'requestChildNodes'
        ),
        ('dom', 'request_node'): (
            'requestNode'
        ),
        ('dom', 'resolve_node'): (
            'resolveNode'
        ),
        ('dom', 'set_attribute_value'): (
            'setAttributeValue'
        ),
        ('dom', 'set_attributes_as_text'): (
            'setAttributesAsText'
        ),
        ('dom', 'set_file_input_files'): (
            'setFileInputFiles'
        ),
        ('dom', 'set_node_stack_traces_enabled'): (
            'setNodeStackTracesEnabled'
        ),
        ('dom', 'get_node_stack_traces'): (
            'getNodeStackTraces'
        ),
        ('dom', 'get_file_info'): (
            'getFileInfo'
        ),
        ('dom', 'set_inspected_node'): (
            'setInspectedNode'
        ),
        ('dom', 'set_node_name'): (
            'setNodeName'
        ),
        ('dom', 'set_node_value'): (
            'setNodeValue'
        ),
        ('dom', 'set_outer_html'): (
            'setOuterHTML'
        ),
        ('dom', 'undo'): (
            'undo'
        ),
        ('dom', 'get_frame_owner'): (
            'getFrameOwner'
        ),
        ('dom', 'get_container_for_node'): (
            'getContainerForNode'
        ),
        ('dom', 'get_querying_descendants_for_container'): (
            'getQueryingDescendantsForContainer'
        ),
        ('dom_debugger', 'get_event_listeners'): (
            'getEventListeners'
        ),
        ('dom_debugger', 'remove_dom_breakpoint'): (
            'removeDOMBreakpoint'
        ),
        ('dom_debugger', 'remove_event_listener_breakpoint'): (
            'removeEventListenerBreakpoint'
        ),
        ('dom_debugger', 'remove_instrumentation_breakpoint'): (
            'removeInstrumentationBreakpoint'
        ),
        ('dom_debugger', 'remove_xhr_breakpoint'): (
            'removeXHRBreakpoint'
        ),
        ('dom_debugger', 'set_break_on_csp_violation'): (
            'setBreakOnCSPViolation'
        ),
        ('dom_debugger', 'set_dom_breakpoint'): (
            'setDOMBreakpoint'
        ),
        ('dom_debugger', 'set_event_listener_breakpoint'): (
            'setEventListenerBreakpoint'
        ),
        ('dom_debugger', 'set_instrumentation_breakpoint'): (
            'setInstrumentationBreakpoint'
        ),
        ('dom_debugger', 'set_xhr_breakpoint'): (
            'setXHRBreakpoint'
        ),
        ('event_breakpoints', 'set_instrumentation_breakpoint'): (
            'setInstrumentationBreakpoint'
        ),
        ('event_breakpoints', 'remove_instrumentation_breakpoint'): (
            'removeInstrumentationBreakpoint'
        ),
        ('dom_snapshot', 'disable'): (
            'disable'
        ),
        ('dom_snapshot', 'enable'): (
            'enable'
        ),
        ('dom_snapshot', 'get_snapshot'): (
            'getSnapshot'
        ),
        ('dom_snapshot', 'capture_snapshot'): (
            'captureSnapshot'
        ),
        ('dom_storage', 'clear'): (
            'clear'
        ),
        ('dom_storage', 'disable'): (
            'disable'
        ),
        ('dom_storage', 'enable'): (
            'enable'
        ),
        ('dom_storage', 'get_dom_storage_items'): (
            'getDOMStorageItems'
        ),
        ('dom_storage', 'remove_dom_storage_item'): (
            'removeDOMStorageItem'
        ),
        ('dom_storage', 'set_dom_storage_item'): (
            'setDOMStorageItem'
        ),
        ('database', 'disable'): (
            'disable'
        ),
        ('database', 'enable'): (
            'enable'
        ),
        ('database', 'execute_sql'): (
            'executeSQL'
        ),
        ('database', 'get_database_table_names'): (
            'getDatabaseTableNames'
        ),
        ('device_orientation', 'clear_device_orientation_override'): (
            'clearDeviceOrientationOverride'
        ),
        ('device_orientation', 'set_device_orientation_override'): (
            'setDeviceOrientationOverride'
        ),
        ('emulation', 'can_emulate'): (
            'canEmulate'
        ),
        ('emulation', 'clear_device_metrics_override'): (
            'clearDeviceMetricsOverride'
        ),
        ('emulation', 'clear_geolocation_override'): (
            'clearGeolocationOverride'
        ),
        ('emulation', 'reset_page_scale_factor'): (
            'resetPageScaleFactor'
        ),
        ('emulation', 'set_focus_emulation_enabled'): (
            'setFocusEmulationEnabled'
        ),
        ('emulation', 'set_auto_dark_mode_override'): (
            'setAutoDarkModeOverride'
        ),
        ('emulation', 'set_cpu_throttling_rate'): (
            'setCPUThrottlingRate'
        ),
        ('emulation', 'set_default_background_color_override'): (
            'setDefaultBackgroundColorOverride'
        ),
        ('emulation', 'set_device_metrics_override'): (
            'setDeviceMetricsOverride'
        ),
        ('emulation', 'set_scrollbars_hidden'): (
            'setScrollbarsHidden'
        ),
        ('emulation', 'set_document_cookie_disabled'): (
            'setDocumentCookieDisabled'
        ),
        ('emulation', 'set_emit_touch_events_for_mouse'): (
            'setEmitTouchEventsForMouse'
        ),
        ('emulation', 'set_emulated_media'): (
            'setEmulatedMedia'
        ),
        ('emulation', 'set_emulated_vision_deficiency'): (
            'setEmulatedVisionDeficiency'
        ),
        ('emulation', 'set_geolocation_override'): (
            'setGeolocationOverride'
        ),
        ('emulation', 'set_idle_override'): (
            'setIdleOverride'
        ),
        ('emulation', 'clear_idle_override'): (
            'clearIdleOverride'
        ),
        ('emulation', 'set_navigator_overrides'): (
            'setNavigatorOverrides'
        ),
        ('emulation', 'set_page_scale_factor'): (
            'setPageScaleFactor'
        ),
        ('emulation', 'set_script_execution_disabled'): (
            'setScriptExecutionDisabled'
        ),
        ('emulation', 'set_touch_emulation_enabled'): (
            'setTouchEmulationEnabled'
        ),
        ('emulation', 'set_virtual_time_policy'): (
            'setVirtualTimePolicy'
        ),
        ('emulation', 'set_locale_override'): (
            'setLocaleOverride'
        ),
        ('emulation', 'set_timezone_override'): (
            'setTimezoneOverride'
        ),
        ('emulation', 'set_visible_size'): (
            'setVisibleSize'
        ),
        ('emulation', 'set_disabled_image_types'): (
            'setDisabledImageTypes'
        ),
        ('emulation', 'set_hardware_concurrency_override'): (
            'setHardwareConcurrencyOverride'
        ),
        ('emulation', 'set_user_agent_override'): (
            'setUserAgentOverride'
        ),
        ('emulation', 'set_automation_override'): (
            'setAutomationOverride'
        ),
        ('headless_experimental', 'begin_frame'): (
            'beginFrame'
        ),
        ('headless_experimental', 'disable'): (
            'disable'
        ),
        ('headless_experimental', 'enable'): (
            'enable'
        ),
        ('io', 'close'): (
            'close'
        ),
        ('io', 'read'): (
            'read'
        ),
        ('io', 'resolve_blob'): (
            'resolveBlob'
        ),
        ('indexed_db', 'clear_object_store'): (
            'clearObjectStore'
        ),
        ('indexed_db', 'delete_database'): (
            'deleteDatabase'
        ),
        ('indexed_db', 'delete_object_store_entries'): (
            'deleteObjectStoreEntries'
        ),
        ('indexed_db', 'disable'): (
            'disable'
        ),
        ('indexed_db', 'enable'): (
            'enable'
        ),
        ('indexed_db', 'request_data'): (
            'requestData'
        ),
        ('indexed_db', 'get_metadata'): (
            'getMetadata'
        ),
        ('indexed_db', 'request_database'): (
            'requestDatabase'
        ),
        ('indexed_db', 'request_database_names'): (
            'requestDatabaseNames'
        ),
        ('input', 'dispatch_drag_event'): (
            'dispatchDragEvent'
        ),
        ('input', 'dispatch_key_event'): (
            'dispatchKeyEvent'
        ),
        ('input', 'insert_text'): (
            'insertText'
        ),
        ('input', 'ime_set_composition'): (
            'imeSetComposition'
        ),
        ('input', 'dispatch_mouse_event'): (
            'dispatchMouseEvent'
        ),
        ('input', 'dispatch_touch_event'): (
            'dispatchTouchEvent'
        ),
        ('input', 'cancel_dragging'): (
            'cancelDragging'
        ),
        ('input', 'emulate_touch_from_mouse_event'): (
            'emulateTouchFromMouseEvent'
        ),
        ('input', 'set_ignore_input_events'): (
            'setIgnoreInputEvents'
        ),
        ('input', 'set_intercept_drags'): (
            'setInterceptDrags'
        ),
        ('input', 'synthesize_pinch_gesture'): (
            'synthesizePinchGesture'
        ),
        ('input', 'synthesize_scroll_gesture'): (
            'synthesizeScrollGesture'
        ),
        ('input', 'synthesize_tap_gesture'): (
            'synthesizeTapGesture'
        ),
        ('inspector', 'disable'): (
            'disable'
        ),
        ('inspector', 'enable'): (
            'enable'
        ),
        ('layer_tree', 'compositing_reasons'): (
            'compositingReasons'
        ),
        ('layer_tree', 'disable'): (
            'disable'
        ),
        ('layer_tree', 'enable'): (
            'enable'
        ),
        ('layer_tree', 'load_snapshot'): (
            'loadSnapshot'
        ),
        ('layer_tree', 'make_snapshot'): (
            'makeSnapshot'
        ),
        ('layer_tree', 'profile_snapshot'): (
            'profileSnapshot'
        ),
        ('layer_tree', 'release_snapshot'): (
            'releaseSnapshot'
        ),
        ('layer_tree', 'replay_snapshot'): (
            'replaySnapshot'
        ),
        ('layer_tree', 'snapshot_command_log'): (
            'snapshotCommandLog'
        ),
        ('log', 'clear'): (
            'clear'
        ),
        ('log', 'disable'): (
            'disable'
        ),
        ('log', 'enable'): (
            'enable'
        ),
        ('log', 'start_violations_report'): (
            'startViolationsReport'
        ),
        ('log', 'stop_violations_report'): (
            'stopViolationsReport'
        ),
        ('memory', 'get_dom_counters'): (
            'getDOMCounters'
        ),
        ('memory', 'prepare_for_leak_detection'): (
            'prepareForLeakDetection'
        ),
        ('memory', 'forcibly_purge_java_script_memory'): (
            'forciblyPurgeJavaScriptMemory'
        ),
        ('memory', 'set_pressure_notifications_suppressed'): (
            'setPressureNotificationsSuppressed'
        ),
        ('memory', 'simulate_pressure_notification'): (
            'simulatePressureNotification'
        ),
        ('memory', 'start_sampling'): (
            'startSampling'
        ),
        ('memory', 'stop_sampling'): (
            'stopSampling'
        ),
        ('memory', 'get_all_time_sampling_profile'): (
            'getAllTimeSamplingProfile'
        ),
        ('memory', 'get_browser_sampling_profile'): (
            'getBrowserSamplingProfile'
        ),
        ('memory', 'get_sampling_profile'): (
            'getSamplingProfile'
        ),
        ('network', 'set_accepted_encodings'): (
            'setAcceptedEncodings'
        ),
        ('network', 'clear_accepted_encodings_override'): (
            'clearAcceptedEncodingsOverride'
        ),
        ('network', 'can_clear_browser_cache'): (
            'canClearBrowserCache'
        ),
        ('network', 'can_clear_browser_cookies'): (
            'canClearBrowserCookies'
        ),
        ('network', 'can_emulate_network_conditions'): (
            'canEmulateNetworkConditions'
        ),
        ('network', 'clear_browser_cache'): (
            'clearBrowserCache'
        ),
        ('network', 'clear_browser_cookies'): (
            'clearBrowserCookies'
        ),
        ('network', 'continue_intercepted_request'): (
            'continueInterceptedRequest'
        ),
        ('network', 'delete_cookies'): (
            'deleteCookies'
        ),
        ('network', 'disable'): (
            'disable'
        ),
        ('network', 'emulate_network_conditions'): (
            'emulateNetworkConditions'
        ),
        ('network', 'enable'): (
            'enable'
        ),
        ('network', 'get_all_cookies'): (
            'getAllCookies'
        ),
        ('network', 'get_certificate'): (
            'getCertificate'
        ),
        ('network', 'get_cookies'): (
            'getCookies'
        ),
        ('network', 'get_response_body'): (
            'getResponseBody'
        ),
        ('network', 'get_request_post_data'): (
            'getRequestPostData'
        ),
        ('network', 'get_response_body_for_interception'): (
            'getResponseBodyForInterception'
        ),
        ('network', 'take_response_body_for_interception_as_stream'): (
            'takeResponseBodyForInterceptionAsStream'
        ),
        ('network', 'replay_xhr'): (
            'replayXHR'
        ),
        ('network', 'search_in_response_body'): (
            'searchInResponseBody'
        ),
        ('network', 'set_blocked_ur_ls'): (
            'setBlockedURLs'
        ),
        ('network', 'set_bypass_service_worker'): (
            'setBypassServiceWorker'
        ),
        ('network', 'set_cache_disabled'): (
            'setCacheDisabled'
        ),
        ('network', 'set_cookie'): (
            'setCookie'
        ),
        ('network', 'set_cookies'): (
            'setCookies'
        ),
        ('network', 'set_extra_http_headers'): (
            'setExtraHTTPHeaders'
        ),
        ('network', 'set_attach_debug_stack'): (
            'setAttachDebugStack'
        ),
        ('network', 'set_request_interception'): (
            'setRequestInterception'
        ),
        ('network', 'set_user_agent_override'): (
            'setUserAgentOverride'
        ),
        ('network', 'get_security_isolation_status'): (
            'getSecurityIsolationStatus'
        ),
        ('network', 'enable_reporting_api'): (
            'enableReportingApi'
        ),
        ('network', 'load_network_resource'): (
            'loadNetworkResource'
        ),
        ('overlay', 'disable'): (
            'disable'
        ),
        ('overlay', 'enable'): (
            'enable'
        ),
        ('overlay', 'get_highlight_object_for_test'): (
            'getHighlightObjectForTest'
        ),
        ('overlay', 'get_grid_highlight_objects_for_test'): (
            'getGridHighlightObjectsForTest'
        ),
        ('overlay', 'get_source_order_highlight_object_for_test'): (
            'getSourceOrderHighlightObjectForTest'
        ),
        ('overlay', 'hide_highlight'): (
            'hideHighlight'
        ),
        ('overlay', 'highlight_frame'): (
            'highlightFrame'
        ),
        ('overlay', 'highlight_node'): (
            'highlightNode'
        ),
        ('overlay', 'highlight_quad'): (
            'highlightQuad'
        ),
        ('overlay', 'highlight_rect'): (
            'highlightRect'
        ),
        ('overlay', 'highlight_source_order'): (
            'highlightSourceOrder'
        ),
        ('overlay', 'set_inspect_mode'): (
            'setInspectMode'
        ),
        ('overlay', 'set_show_ad_highlights'): (
            'setShowAdHighlights'
        ),
        ('overlay', 'set_paused_in_debugger_message'): (
            'setPausedInDebuggerMessage'
        ),
        ('overlay', 'set_show_debug_borders'): (
            'setShowDebugBorders'
        ),
        ('overlay', 'set_show_fps_counter'): (
            'setShowFPSCounter'
        ),
        ('overlay', 'set_show_grid_overlays'): (
            'setShowGridOverlays'
        ),
        ('overlay', 'set_show_flex_overlays'): (
            'setShowFlexOverlays'
        ),
        ('overlay', 'set_show_scroll_snap_overlays'): (
            'setShowScrollSnapOverlays'
        ),
        ('overlay', 'set_show_container_query_overlays'): (
            'setShowContainerQueryOverlays'
        ),
        ('overlay', 'set_show_paint_rects'): (
            'setShowPaintRects'
        ),
        ('overlay', 'set_show_layout_shift_regions'): (
            'setShowLayoutShiftRegions'
        ),
        ('overlay', 'set_show_scroll_bottleneck_rects'): (
            'setShowScrollBottleneckRects'
        ),
        ('overlay', 'set_show_hit_test_borders'): (
            'setShowHitTestBorders'
        ),
        ('overlay', 'set_show_web_vitals'): (
            'setShowWebVitals'
        ),
        ('overlay', 'set_show_viewport_size_on_resize'): (
            'setShowViewportSizeOnResize'
        ),
        ('overlay', 'set_show_hinge'): (
            'setShowHinge'
        ),
        ('overlay', 'set_show_isolated_elements'): (
            'setShowIsolatedElements'
        ),
        ('page', 'add_script_to_evaluate_on_load'): (
            'addScriptToEvaluateOnLoad'
        ),
        ('page', 'add_script_to_evaluate_on_new_document'): (
            'addScriptToEvaluateOnNewDocument'
        ),
        ('page', 'bring_to_front'): (
            'bringToFront'
        ),
        ('page', 'capture_screenshot'): (
            'captureScreenshot'
        ),
        ('page', 'capture_snapshot'): (
            'captureSnapshot'
        ),
        ('page', 'clear_device_metrics_override'): (
            'clearDeviceMetricsOverride'
        ),
        ('page', 'clear_device_orientation_override'): (
            'clearDeviceOrientationOverride'
        ),
        ('page', 'clear_geolocation_override'): (
            'clearGeolocationOverride'
        ),
        ('page', 'create_isolated_world'): (
            'createIsolatedWorld'
        ),
        ('page', 'delete_cookie'): (
            'deleteCookie'
        ),
        ('page', 'disable'): (
            'disable'
        ),
        ('page', 'enable'): (
            'enable'
        ),
        ('page', 'get_app_manifest'): (
            'getAppManifest'
        ),
        ('page', 'get_installability_errors'): (
            'getInstallabilityErrors'
        ),
        ('page', 'get_manifest_icons'): (
            'getManifestIcons'
        ),
        ('page', 'get_app_id'): (
            'getAppId'
        ),
        ('page', 'get_ad_script_id'): (
            'getAdScriptId'
        ),
        ('page', 'get_cookies'): (
            'getCookies'
        ),
        ('page', 'get_frame_tree'): (
            'getFrameTree'
        ),
        ('page', 'get_layout_metrics'): (
            'getLayoutMetrics'
        ),
        ('page', 'get_navigation_history'): (
            'getNavigationHistory'
        ),
        ('page', 'reset_navigation_history'): (
            'resetNavigationHistory'
        ),
        ('page', 'get_resource_content'): (
            'getResourceContent'
        ),
        ('page', 'get_resource_tree'): (
            'getResourceTree'
        ),
        ('page', 'handle_java_script_dialog'): (
            'handleJavaScriptDialog'
        ),
        ('page', 'navigate'): (
            'navigate'
        ),
        ('page', 'navigate_to_history_entry'): (
            'navigateToHistoryEntry'
        ),
        ('page', 'print_to_pdf'): (
            'printToPDF'
        ),
        ('page', 'reload'): (
            'reload'
        ),
        ('page', 'remove_script_to_evaluate_on_load'): (
            'removeScriptToEvaluateOnLoad'
        ),
        ('page', 'remove_script_to_evaluate_on_new_document'): (
            'removeScriptToEvaluateOnNewDocument'
        ),
        ('page', 'screencast_frame_ack'): (
            'screencastFrameAck'
        ),
        ('page', 'search_in_resource'): (
            'searchInResource'
        ),
        ('page', 'set_ad_blocking_enabled'): (
            'setAdBlockingEnabled'
        ),
        ('page', 'set_bypass_csp'): (
            'setBypassCSP'
        ),
        ('page', 'get_permissions_policy_state'): (
            'getPermissionsPolicyState'
        ),
        ('page', 'get_origin_trials'): (
            'getOriginTrials'
        ),
        ('page', 'set_device_metrics_override'): (
            'setDeviceMetricsOverride'
        ),
        ('page', 'set_device_orientation_override'): (
            'setDeviceOrientationOverride'
        ),
        ('page', 'set_font_families'): (
            'setFontFamilies'
        ),
        ('page', 'set_font_sizes'): (
            'setFontSizes'
        ),
        ('page', 'set_document_content'): (
            'setDocumentContent'
        ),
        ('page', 'set_download_behavior'): (
            'setDownloadBehavior'
        ),
        ('page', 'set_geolocation_override'): (
            'setGeolocationOverride'
        ),
        ('page', 'set_lifecycle_events_enabled'): (
            'setLifecycleEventsEnabled'
        ),
        ('page', 'set_touch_emulation_enabled'): (
            'setTouchEmulationEnabled'
        ),
        ('page', 'start_screencast'): (
            'startScreencast'
        ),
        ('page', 'stop_loading'): (
            'stopLoading'
        ),
        ('page', 'crash'): (
            'crash'
        ),
        ('page', 'close'): (
            'close'
        ),
        ('page', 'set_web_lifecycle_state'): (
            'setWebLifecycleState'
        ),
        ('page', 'stop_screencast'): (
            'stopScreencast'
        ),
        ('page', 'produce_compilation_cache'): (
            'produceCompilationCache'
        ),
        ('page', 'add_compilation_cache'): (
            'addCompilationCache'
        ),
        ('page', 'clear_compilation_cache'): (
            'clearCompilationCache'
        ),
        ('page', 'set_spc_transaction_mode'): (
            'setSPCTransactionMode'
        ),
        ('page', 'set_rph_registration_mode'): (
            'setRPHRegistrationMode'
        ),
        ('page', 'generate_test_report'): (
            'generateTestReport'
        ),
        ('page', 'wait_for_debugger'): (
            'waitForDebugger'
        ),
        ('page', 'set_intercept_file_chooser_dialog'): (
            'setInterceptFileChooserDialog'
        ),
        ('page', 'set_prerendering_allowed'): (
            'setPrerenderingAllowed'
        ),
        ('performance', 'disable'): (
            'disable'
        ),
        ('performance', 'enable'): (
            'enable'
        ),
        ('performance', 'set_time_domain'): (
            'setTimeDomain'
        ),
        ('performance', 'get_metrics'): (
            'getMetrics'
        ),
        ('performance_timeline', 'enable'): (
            'enable'
        ),
        ('security', 'disable'): (
            'disable'
        ),
        ('security', 'enable'): (
            'enable'
        ),
        ('security', 'set_ignore_certificate_errors'): (
            'setIgnoreCertificateErrors'
        ),
        ('security', 'handle_certificate_error'): (
            'handleCertificateError'
        ),
        ('security', 'set_override_certificate_errors'): (
            'setOverrideCertificateErrors'
        ),
        ('service_worker', 'deliver_push_message'): (
            'deliverPushMessage'
        ),
        ('service_worker', 'disable'): (
            'disable'
        ),
        ('service_worker', 'dispatch_sync_event'): (
            'dispatchSyncEvent'
        ),
        ('service_worker', 'dispatch_periodic_sync_event'): (
            'dispatchPeriodicSyncEvent'
        ),
        ('service_worker', 'enable'): (
            'enable'
        ),
        ('service_worker', 'inspect_worker'): (
            'inspectWorker'
        ),
        ('service_worker', 'set_force_update_on_page_load'): (
            'setForceUpdateOnPageLoad'
        ),
        ('service_worker', 'skip_waiting'): (
            'skipWaiting'
        ),
        ('service_worker', 'start_worker'): (
            'startWorker'
        ),
        ('service_worker', 'stop_all_workers'): (
            'stopAllWorkers'
        ),
        ('service_worker', 'stop_worker'): (
            'stopWorker'
        ),
        ('service_worker', 'unregister'): (
            'unregister'
        ),
        ('service_worker', 'update_registration'): (
            'updateRegistration'
        ),
        ('storage', 'get_storage_key_for_frame'): (
            'getStorageKeyForFrame'
        ),
        ('storage', 'clear_data_for_origin'): (
            'clearDataForOrigin'
        ),
        ('storage', 'clear_data_for_storage_key'): (
            'clearDataForStorageKey'
        ),
        ('storage', 'get_cookies'): (
            'getCookies'
        ),
        ('storage', 'set_cookies'): (
            'setCookies'
        ),
        ('storage', 'clear_cookies'): (
            'clearCookies'
        ),
        ('storage', 'get_usage_and_quota'): (
            'getUsageAndQuota'
        ),
        ('storage', 'override_quota_for_origin'): (
            'overrideQuotaForOrigin'
        ),
        ('storage', 'track_cache_storage_for_origin'): (
            'trackCacheStorageForOrigin'
        ),
        ('storage', 'track_cache_storage_for_storage_key'): (
            'trackCacheStorageForStorageKey'
        ),
        ('storage', 'track_indexed_db_for_origin'): (
            'trackIndexedDBForOrigin'
        ),
        ('storage', 'track_indexed_db_for_storage_key'): (
            'trackIndexedDBForStorageKey'
        ),
        ('storage', 'untrack_cache_storage_for_origin'): (
            'untrackCacheStorageForOrigin'
        ),
        ('storage', 'untrack_cache_storage_for_storage_key'): (
            'untrackCacheStorageForStorageKey'
        ),
        ('storage', 'untrack_indexed_db_for_origin'): (
            'untrackIndexedDBForOrigin'
        ),
        ('storage', 'untrack_indexed_db_for_storage_key'): (
            'untrackIndexedDBForStorageKey'
        ),
        ('storage', 'get_trust_tokens'): (
            'getTrustTokens'
        ),
        ('storage', 'clear_trust_tokens'): (
            'clearTrustTokens'
        ),
        ('storage', 'get_interest_group_details'): (
            'getInterestGroupDetails'
        ),
        ('storage', 'set_interest_group_tracking'): (
            'setInterestGroupTracking'
        ),
        ('storage', 'get_shared_storage_metadata'): (
            'getSharedStorageMetadata'
        ),
        ('storage', 'get_shared_storage_entries'): (
            'getSharedStorageEntries'
        ),
        ('storage', 'set_shared_storage_entry'): (
            'setSharedStorageEntry'
        ),
        ('storage', 'delete_shared_storage_entry'): (
            'deleteSharedStorageEntry'
        ),
        ('storage', 'clear_shared_storage_entries'): (
            'clearSharedStorageEntries'
        ),
        ('storage', 'reset_shared_storage_budget'): (
            'resetSharedStorageBudget'
        ),
        ('storage', 'set_shared_storage_tracking'): (
            'setSharedStorageTracking'
        ),
        ('storage', 'set_storage_bucket_tracking'): (
            'setStorageBucketTracking'
        ),
        ('storage', 'delete_storage_bucket'): (
            'deleteStorageBucket'
        ),
        ('storage', 'run_bounce_tracking_mitigations'): (
            'runBounceTrackingMitigations'
        ),
        ('storage', 'set_attribution_reporting_local_testing_mode'): (
            'setAttributionReportingLocalTestingMode'
        ),
        ('storage', 'set_attribution_reporting_tracking'): (
            'setAttributionReportingTracking'
        ),
        ('system_info', 'get_info'): (
            'getInfo'
        ),
        ('system_info', 'get_feature_state'): (
            'getFeatureState'
        ),
        ('system_info', 'get_process_info'): (
            'getProcessInfo'
        ),
        ('target', 'activate_target'): (
            'activateTarget'
        ),
        ('target', 'attach_to_target'): (
            'attachToTarget'
        ),
        ('target', 'attach_to_browser_target'): (
            'attachToBrowserTarget'
        ),
        ('target', 'close_target'): (
            'closeTarget'
        ),
        ('target', 'expose_dev_tools_protocol'): (
            'exposeDevToolsProtocol'
        ),
        ('target', 'create_browser_context'): (
            'createBrowserContext'
        ),
        ('target', 'get_browser_contexts'): (
            'getBrowserContexts'
        ),
        ('target', 'create_target'): (
            'createTarget'
        ),
        ('target', 'detach_from_target'): (
            'detachFromTarget'
        ),
        ('target', 'dispose_browser_context'): (
            'disposeBrowserContext'
        ),
        ('target', 'get_target_info'): (
            'getTargetInfo'
        ),
        ('target', 'get_targets'): (
            'getTargets'
        ),
        ('target', 'send_message_to_target'): (
            'sendMessageToTarget'
        ),
        ('target', 'set_auto_attach'): (
            'setAutoAttach'
        ),
        ('target', 'auto_attach_related'): (
            'autoAttachRelated'
        ),
        ('target', 'set_discover_targets'): (
            'setDiscoverTargets'
        ),
        ('target', 'set_remote_locations'): (
            'setRemoteLocations'
        ),
        ('tethering', 'bind'): (
            'bind'
        ),
        ('tethering', 'unbind'): (
            'unbind'
        ),
        ('tracing', 'end'): (
            'end'
        ),
        ('tracing', 'get_categories'): (
            'getCategories'
        ),
        ('tracing', 'record_clock_sync_marker'): (
            'recordClockSyncMarker'
        ),
        ('tracing', 'request_memory_dump'): (
            'requestMemoryDump'
        ),
        ('tracing', 'start'): (
            'start'
        ),
        ('fetch', 'disable'): (
            'disable'
        ),
        ('fetch', 'enable'): (
            'enable'
        ),
        ('fetch', 'fail_request'): (
            'failRequest'
        ),
        ('fetch', 'fulfill_request'): (
            'fulfillRequest'
        ),
        ('fetch', 'continue_request'): (
            'continueRequest'
        ),
        ('fetch', 'continue_with_auth'): (
            'continueWithAuth'
        ),
        ('fetch', 'continue_response'): (
            'continueResponse'
        ),
        ('fetch', 'get_response_body'): (
            'getResponseBody'
        ),
        ('fetch', 'take_response_body_as_stream'): (
            'takeResponseBodyAsStream'
        ),
        ('web_audio', 'enable'): (
            'enable'
        ),
        ('web_audio', 'disable'): (
            'disable'
        ),
        ('web_audio', 'get_realtime_data'): (
            'getRealtimeData'
        ),
        ('web_authn', 'enable'): (
            'enable'
        ),
        ('web_authn', 'disable'): (
            'disable'
        ),
        ('web_authn', 'add_virtual_authenticator'): (
            'addVirtualAuthenticator'
        ),
        ('web_authn', 'set_response_override_bits'): (
            'setResponseOverrideBits'
        ),
        ('web_authn', 'remove_virtual_authenticator'): (
            'removeVirtualAuthenticator'
        ),
        ('web_authn', 'add_credential'): (
            'addCredential'
        ),
        ('web_authn', 'get_credential'): (
            'getCredential'
        ),
        ('web_authn', 'get_credentials'): (
            'getCredentials'
        ),
        ('web_authn', 'remove_credential'): (
            'removeCredential'
        ),
        ('web_authn', 'clear_credentials'): (
            'clearCredentials'
        ),
        ('web_authn', 'set_user_verified'): (
            'setUserVerified'
        ),
        ('web_authn', 'set_automatic_presence_simulation'): (
            'setAutomaticPresenceSimulation'
        ),
        ('media', 'enable'): (
            'enable'
        ),
        ('media', 'disable'): (
            'disable'
        ),
        ('device_access', 'enable'): (
            'enable'
        ),
        ('device_access', 'disable'): (
            'disable'
        ),
        ('device_access', 'select_prompt'): (
            'selectPrompt'
        ),
        ('device_access', 'cancel_prompt'): (
            'cancelPrompt'
        ),
        ('preload', 'enable'): (
            'enable'
        ),
        ('preload', 'disable'): (
            'disable'
        ),
        ('fed_cm', 'enable'): (
            'enable'
        ),
        ('fed_cm', 'disable'): (
            'disable'
        ),
        ('fed_cm', 'select_account'): (
            'selectAccount'
        ),
        ('fed_cm', 'confirm_idp_signin'): (
            'confirmIdpSignin'
        ),
        ('fed_cm', 'dismiss_dialog'): (
            'dismissDialog'
        ),
        ('fed_cm', 'reset_cooldown'): (
            'resetCooldown'
        ),
        ('console', 'clear_messages'): (
            'clearMessages'
        ),
        ('console', 'disable'): (
            'disable'
        ),
        ('console', 'enable'): (
            'enable'
        ),
        ('debugger', 'continue_to_location'): (
            'continueToLocation'
        ),
        ('debugger', 'disable'): (
            'disable'
        ),
        ('debugger', 'enable'): (
            'enable'
        ),
        ('debugger', 'evaluate_on_call_frame'): (
            'evaluateOnCallFrame'
        ),
        ('debugger', 'get_possible_breakpoints'): (
            'getPossibleBreakpoints'
        ),
        ('debugger', 'get_script_source'): (
            'getScriptSource'
        ),
        ('debugger', 'get_stack_trace'): (
            'getStackTrace'
        ),
        ('debugger', 'pause'): (
            'pause'
        ),
        ('debugger', 'pause_on_async_call'): (
            'pauseOnAsyncCall'
        ),
        ('debugger', 'remove_breakpoint'): (
            'removeBreakpoint'
        ),
        ('debugger', 'restart_frame'): (
            'restartFrame'
        ),
        ('debugger', 'resume'): (
            'resume'
        ),
        ('debugger', 'search_in_content'): (
            'searchInContent'
        ),
        ('debugger', 'set_async_call_stack_depth'): (
            'setAsyncCallStackDepth'
        ),
        ('debugger', 'set_blackbox_patterns'): (
            'setBlackboxPatterns'
        ),
        ('debugger', 'set_blackboxed_ranges'): (
            'setBlackboxedRanges'
        ),
        ('debugger', 'set_breakpoint'): (
            'setBreakpoint'
        ),
        ('debugger', 'set_instrumentation_breakpoint'): (
            'setInstrumentationBreakpoint'
        ),
        ('debugger', 'set_breakpoint_by_url'): (
            'setBreakpointByUrl'
        ),
        ('debugger', 'set_breakpoint_on_function_call'): (
            'setBreakpointOnFunctionCall'
        ),
        ('debugger', 'set_breakpoints_active'): (
            'setBreakpointsActive'
        ),
        ('debugger', 'set_pause_on_exceptions'): (
            'setPauseOnExceptions'
        ),
        ('debugger', 'set_return_value'): (
            'setReturnValue'
        ),
        ('debugger', 'set_script_source'): (
            'setScriptSource'
        ),
        ('debugger', 'set_skip_all_pauses'): (
            'setSkipAllPauses'
        ),
        ('debugger', 'set_variable_value'): (
            'setVariableValue'
        ),
        ('debugger', 'step_into'): (
            'stepInto'
        ),
        ('debugger', 'step_out'): (
            'stepOut'
        ),
        ('debugger', 'step_over'): (
            'stepOver'
        ),
        ('heap_profiler', 'add_inspected_heap_object'): (
            'addInspectedHeapObject'
        ),
        ('heap_profiler', 'collect_garbage'): (
            'collectGarbage'
        ),
        ('heap_profiler', 'disable'): (
            'disable'
        ),
        ('heap_profiler', 'enable'): (
            'enable'
        ),
        ('heap_profiler', 'get_heap_object_id'): (
            'getHeapObjectId'
        ),
        ('heap_profiler', 'get_object_by_heap_object_id'): (
            'getObjectByHeapObjectId'
        ),
        ('heap_profiler', 'get_sampling_profile'): (
            'getSamplingProfile'
        ),
        ('heap_profiler', 'start_sampling'): (
            'startSampling'
        ),
        ('heap_profiler', 'start_tracking_heap_objects'): (
            'startTrackingHeapObjects'
        ),
        ('heap_profiler', 'stop_sampling'): (
            'stopSampling'
        ),
        ('heap_profiler', 'stop_tracking_heap_objects'): (
            'stopTrackingHeapObjects'
        ),
        ('heap_profiler', 'take_heap_snapshot'): (
            'takeHeapSnapshot'
        ),
        ('profiler', 'disable'): (
            'disable'
        ),
        ('profiler', 'enable'): (
            'enable'
        ),
        ('profiler', 'get_best_effort_coverage'): (
            'getBestEffortCoverage'
        ),
        ('profiler', 'set_sampling_interval'): (
            'setSamplingInterval'
        ),
        ('profiler', 'start'): (
            'start'
        ),
        ('profiler', 'start_precise_coverage'): (
            'startPreciseCoverage'
        ),
        ('profiler', 'start_type_profile'): (
            'startTypeProfile'
        ),
        ('profiler', 'stop'): (
            'stop'
        ),
        ('profiler', 'stop_precise_coverage'): (
            'stopPreciseCoverage'
        ),
        ('profiler', 'stop_type_profile'): (
            'stopTypeProfile'
        ),
        ('profiler', 'take_precise_coverage'): (
            'takePreciseCoverage'
        ),
        ('profiler', 'take_type_profile'): (
            'takeTypeProfile'
        ),
        ('runtime', 'await_promise'): (
            'awaitPromise'
        ),
        ('runtime', 'call_function_on'): (
            'callFunctionOn'
        ),
        ('runtime', 'compile_script'): (
            'compileScript'
        ),
        ('runtime', 'disable'): (
            'disable'
        ),
        ('runtime', 'discard_console_entries'): (
            'discardConsoleEntries'
        ),
        ('runtime', 'enable'): (
            'enable'
        ),
        ('runtime', 'evaluate'): (
            'evaluate'
        ),
        ('runtime', 'get_isolate_id'): (
            'getIsolateId'
        ),
        ('runtime', 'get_heap_usage'): (
            'getHeapUsage'
        ),
        ('runtime', 'get_properties'): (
            'getProperties'
        ),
        ('runtime', 'global_lexical_scope_names'): (
            'globalLexicalScopeNames'
        ),
        ('runtime', 'query_objects'): (
            'queryObjects'
        ),
        ('runtime', 'release_object'): (
            'releaseObject'
        ),
        ('runtime', 'release_object_group'): (
            'releaseObjectGroup'
        ),
        ('runtime', 'run_if_waiting_for_debugger'): (
            'runIfWaitingForDebugger'
        ),
        ('runtime', 'run_script'): (
            'runScript'
        ),
        ('runtime', 'set_async_call_stack_depth'): (
            'setAsyncCallStackDepth'
        ),
        ('runtime', 'set_custom_object_formatter_enabled'): (
            'setCustomObjectFormatterEnabled'
        ),
        ('runtime', 'set_max_call_stack_size_to_capture'): (
            'setMaxCallStackSizeToCapture'
        ),
        ('runtime', 'terminate_execution'): (
            'terminateExecution'
        ),
        ('runtime', 'add_binding'): (
            'addBinding'
        ),
        ('runtime', 'remove_binding'): (
            'removeBinding'
        ),
        ('schema', 'get_domains'): (
            'getDomains'
        ),
    },
}


command_params_properties = {
    'snake:camel': {
        ('accessibility', 'get_partial_ax_tree', 'node_id'): (
            'nodeId'
        ),
        ('accessibility', 'get_partial_ax_tree', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('accessibility', 'get_partial_ax_tree', 'object_id'): (
            'objectId'
        ),
        ('accessibility', 'get_partial_ax_tree', 'fetch_relatives'): (
            'fetchRelatives'
        ),
        ('accessibility', 'get_full_ax_tree', 'depth'): (
            'depth'
        ),
        ('accessibility', 'get_full_ax_tree', 'frame_id'): (
            'frameId'
        ),
        ('accessibility', 'get_root_ax_node', 'frame_id'): (
            'frameId'
        ),
        ('accessibility', 'get_ax_node_and_ancestors', 'node_id'): (
            'nodeId'
        ),
        ('accessibility', 'get_ax_node_and_ancestors', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('accessibility', 'get_ax_node_and_ancestors', 'object_id'): (
            'objectId'
        ),
        ('accessibility', 'get_child_ax_nodes', 'id'): (
            'id'
        ),
        ('accessibility', 'get_child_ax_nodes', 'frame_id'): (
            'frameId'
        ),
        ('accessibility', 'query_ax_tree', 'node_id'): (
            'nodeId'
        ),
        ('accessibility', 'query_ax_tree', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('accessibility', 'query_ax_tree', 'object_id'): (
            'objectId'
        ),
        ('accessibility', 'query_ax_tree', 'accessible_name'): (
            'accessibleName'
        ),
        ('accessibility', 'query_ax_tree', 'role'): (
            'role'
        ),
        ('animation', 'get_current_time', 'id'): (
            'id'
        ),
        ('animation', 'release_animations', 'animations'): (
            'animations'
        ),
        ('animation', 'resolve_animation', 'animation_id'): (
            'animationId'
        ),
        ('animation', 'seek_animations', 'animations'): (
            'animations'
        ),
        ('animation', 'seek_animations', 'current_time'): (
            'currentTime'
        ),
        ('animation', 'set_paused', 'animations'): (
            'animations'
        ),
        ('animation', 'set_paused', 'paused'): (
            'paused'
        ),
        ('animation', 'set_playback_rate', 'playback_rate'): (
            'playbackRate'
        ),
        ('animation', 'set_timing', 'animation_id'): (
            'animationId'
        ),
        ('animation', 'set_timing', 'duration'): (
            'duration'
        ),
        ('animation', 'set_timing', 'delay'): (
            'delay'
        ),
        ('audits', 'get_encoded_response', 'request_id'): (
            'requestId'
        ),
        ('audits', 'get_encoded_response', 'encoding'): (
            'encoding'
        ),
        ('audits', 'get_encoded_response', 'quality'): (
            'quality'
        ),
        ('audits', 'get_encoded_response', 'size_only'): (
            'sizeOnly'
        ),
        ('audits', 'check_contrast', 'report_aaa'): (
            'reportAAA'
        ),
        ('autofill', 'trigger', 'field_id'): (
            'fieldId'
        ),
        ('autofill', 'trigger', 'frame_id'): (
            'frameId'
        ),
        ('autofill', 'trigger', 'card'): (
            'card'
        ),
        ('autofill', 'set_addresses', 'addresses'): (
            'addresses'
        ),
        ('background_service', 'start_observing', 'service'): (
            'service'
        ),
        ('background_service', 'stop_observing', 'service'): (
            'service'
        ),
        ('background_service', 'set_recording', 'should_record'): (
            'shouldRecord'
        ),
        ('background_service', 'set_recording', 'service'): (
            'service'
        ),
        ('background_service', 'clear_events', 'service'): (
            'service'
        ),
        ('browser', 'set_permission', 'permission'): (
            'permission'
        ),
        ('browser', 'set_permission', 'setting'): (
            'setting'
        ),
        ('browser', 'set_permission', 'origin'): (
            'origin'
        ),
        ('browser', 'set_permission', 'browser_context_id'): (
            'browserContextId'
        ),
        ('browser', 'grant_permissions', 'permissions'): (
            'permissions'
        ),
        ('browser', 'grant_permissions', 'origin'): (
            'origin'
        ),
        ('browser', 'grant_permissions', 'browser_context_id'): (
            'browserContextId'
        ),
        ('browser', 'reset_permissions', 'browser_context_id'): (
            'browserContextId'
        ),
        ('browser', 'set_download_behavior', 'behavior'): (
            'behavior'
        ),
        ('browser', 'set_download_behavior', 'browser_context_id'): (
            'browserContextId'
        ),
        ('browser', 'set_download_behavior', 'download_path'): (
            'downloadPath'
        ),
        ('browser', 'set_download_behavior', 'events_enabled'): (
            'eventsEnabled'
        ),
        ('browser', 'cancel_download', 'guid'): (
            'guid'
        ),
        ('browser', 'cancel_download', 'browser_context_id'): (
            'browserContextId'
        ),
        ('browser', 'get_histograms', 'query'): (
            'query'
        ),
        ('browser', 'get_histograms', 'delta'): (
            'delta'
        ),
        ('browser', 'get_histogram', 'name'): (
            'name'
        ),
        ('browser', 'get_histogram', 'delta'): (
            'delta'
        ),
        ('browser', 'get_window_bounds', 'window_id'): (
            'windowId'
        ),
        ('browser', 'get_window_for_target', 'target_id'): (
            'targetId'
        ),
        ('browser', 'set_window_bounds', 'window_id'): (
            'windowId'
        ),
        ('browser', 'set_window_bounds', 'bounds'): (
            'bounds'
        ),
        ('browser', 'set_dock_tile', 'badge_label'): (
            'badgeLabel'
        ),
        ('browser', 'set_dock_tile', 'image'): (
            'image'
        ),
        ('browser', 'execute_browser_command', 'command_id'): (
            'commandId'
        ),
        ('browser', 'add_privacy_sandbox_enrollment_override', 'url'): (
            'url'
        ),
        ('css', 'add_rule', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'add_rule', 'rule_text'): (
            'ruleText'
        ),
        ('css', 'add_rule', 'location'): (
            'location'
        ),
        ('css', 'collect_class_names', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'create_style_sheet', 'frame_id'): (
            'frameId'
        ),
        ('css', 'force_pseudo_state', 'node_id'): (
            'nodeId'
        ),
        ('css', 'force_pseudo_state', 'forced_pseudo_classes'): (
            'forcedPseudoClasses'
        ),
        ('css', 'get_background_colors', 'node_id'): (
            'nodeId'
        ),
        ('css', 'get_computed_style_for_node', 'node_id'): (
            'nodeId'
        ),
        ('css', 'get_inline_styles_for_node', 'node_id'): (
            'nodeId'
        ),
        ('css', 'get_matched_styles_for_node', 'node_id'): (
            'nodeId'
        ),
        ('css', 'get_platform_fonts_for_node', 'node_id'): (
            'nodeId'
        ),
        ('css', 'get_style_sheet_text', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'get_layers_for_node', 'node_id'): (
            'nodeId'
        ),
        ('css', 'track_computed_style_updates', 'properties_to_track'): (
            'propertiesToTrack'
        ),
        ('css', 'set_effective_property_value_for_node', 'node_id'): (
            'nodeId'
        ),
        ('css', 'set_effective_property_value_for_node', 'property_name'): (
            'propertyName'
        ),
        ('css', 'set_effective_property_value_for_node', 'value'): (
            'value'
        ),
        ('css', 'set_keyframe_key', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_keyframe_key', 'range'): (
            'range'
        ),
        ('css', 'set_keyframe_key', 'key_text'): (
            'keyText'
        ),
        ('css', 'set_media_text', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_media_text', 'range'): (
            'range'
        ),
        ('css', 'set_media_text', 'text'): (
            'text'
        ),
        ('css', 'set_container_query_text', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_container_query_text', 'range'): (
            'range'
        ),
        ('css', 'set_container_query_text', 'text'): (
            'text'
        ),
        ('css', 'set_supports_text', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_supports_text', 'range'): (
            'range'
        ),
        ('css', 'set_supports_text', 'text'): (
            'text'
        ),
        ('css', 'set_scope_text', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_scope_text', 'range'): (
            'range'
        ),
        ('css', 'set_scope_text', 'text'): (
            'text'
        ),
        ('css', 'set_rule_selector', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_rule_selector', 'range'): (
            'range'
        ),
        ('css', 'set_rule_selector', 'selector'): (
            'selector'
        ),
        ('css', 'set_style_sheet_text', 'style_sheet_id'): (
            'styleSheetId'
        ),
        ('css', 'set_style_sheet_text', 'text'): (
            'text'
        ),
        ('css', 'set_style_texts', 'edits'): (
            'edits'
        ),
        ('css', 'set_local_fonts_enabled', 'enabled'): (
            'enabled'
        ),
        ('cache_storage', 'delete_cache', 'cache_id'): (
            'cacheId'
        ),
        ('cache_storage', 'delete_entry', 'cache_id'): (
            'cacheId'
        ),
        ('cache_storage', 'delete_entry', 'request'): (
            'request'
        ),
        ('cache_storage', 'request_cache_names', 'security_origin'): (
            'securityOrigin'
        ),
        ('cache_storage', 'request_cache_names', 'storage_key'): (
            'storageKey'
        ),
        ('cache_storage', 'request_cache_names', 'storage_bucket'): (
            'storageBucket'
        ),
        ('cache_storage', 'request_cached_response', 'cache_id'): (
            'cacheId'
        ),
        ('cache_storage', 'request_cached_response', 'request_url'): (
            'requestURL'
        ),
        ('cache_storage', 'request_cached_response', 'request_headers'): (
            'requestHeaders'
        ),
        ('cache_storage', 'request_entries', 'cache_id'): (
            'cacheId'
        ),
        ('cache_storage', 'request_entries', 'skip_count'): (
            'skipCount'
        ),
        ('cache_storage', 'request_entries', 'page_size'): (
            'pageSize'
        ),
        ('cache_storage', 'request_entries', 'path_filter'): (
            'pathFilter'
        ),
        ('cast', 'enable', 'presentation_url'): (
            'presentationUrl'
        ),
        ('cast', 'set_sink_to_use', 'sink_name'): (
            'sinkName'
        ),
        ('cast', 'start_desktop_mirroring', 'sink_name'): (
            'sinkName'
        ),
        ('cast', 'start_tab_mirroring', 'sink_name'): (
            'sinkName'
        ),
        ('cast', 'stop_casting', 'sink_name'): (
            'sinkName'
        ),
        ('dom', 'collect_class_names_from_subtree', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'copy_to', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'copy_to', 'target_node_id'): (
            'targetNodeId'
        ),
        ('dom', 'copy_to', 'insert_before_node_id'): (
            'insertBeforeNodeId'
        ),
        ('dom', 'describe_node', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'describe_node', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'describe_node', 'object_id'): (
            'objectId'
        ),
        ('dom', 'describe_node', 'depth'): (
            'depth'
        ),
        ('dom', 'describe_node', 'pierce'): (
            'pierce'
        ),
        ('dom', 'scroll_into_view_if_needed', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'scroll_into_view_if_needed', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'scroll_into_view_if_needed', 'object_id'): (
            'objectId'
        ),
        ('dom', 'scroll_into_view_if_needed', 'rect'): (
            'rect'
        ),
        ('dom', 'discard_search_results', 'search_id'): (
            'searchId'
        ),
        ('dom', 'enable', 'include_whitespace'): (
            'includeWhitespace'
        ),
        ('dom', 'focus', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'focus', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'focus', 'object_id'): (
            'objectId'
        ),
        ('dom', 'get_attributes', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_box_model', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_box_model', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'get_box_model', 'object_id'): (
            'objectId'
        ),
        ('dom', 'get_content_quads', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_content_quads', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'get_content_quads', 'object_id'): (
            'objectId'
        ),
        ('dom', 'get_document', 'depth'): (
            'depth'
        ),
        ('dom', 'get_document', 'pierce'): (
            'pierce'
        ),
        ('dom', 'get_flattened_document', 'depth'): (
            'depth'
        ),
        ('dom', 'get_flattened_document', 'pierce'): (
            'pierce'
        ),
        ('dom', 'get_nodes_for_subtree_by_style', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_nodes_for_subtree_by_style', 'computed_styles'): (
            'computedStyles'
        ),
        ('dom', 'get_nodes_for_subtree_by_style', 'pierce'): (
            'pierce'
        ),
        ('dom', 'get_node_for_location', 'x'): (
            'x'
        ),
        ('dom', 'get_node_for_location', 'y'): (
            'y'
        ),
        ('dom', 'get_node_for_location', 'include_user_agent_shadow_dom'): (
            'includeUserAgentShadowDOM'
        ),
        ('dom', 'get_node_for_location', 'ignore_pointer_events_none'): (
            'ignorePointerEventsNone'
        ),
        ('dom', 'get_outer_html', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_outer_html', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'get_outer_html', 'object_id'): (
            'objectId'
        ),
        ('dom', 'get_relayout_boundary', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_search_results', 'search_id'): (
            'searchId'
        ),
        ('dom', 'get_search_results', 'from_index'): (
            'fromIndex'
        ),
        ('dom', 'get_search_results', 'to_index'): (
            'toIndex'
        ),
        ('dom', 'move_to', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'move_to', 'target_node_id'): (
            'targetNodeId'
        ),
        ('dom', 'move_to', 'insert_before_node_id'): (
            'insertBeforeNodeId'
        ),
        ('dom', 'perform_search', 'query'): (
            'query'
        ),
        ('dom', 'perform_search', 'include_user_agent_shadow_dom'): (
            'includeUserAgentShadowDOM'
        ),
        ('dom', 'push_node_by_path_to_frontend', 'path'): (
            'path'
        ),
        ('dom', 'push_nodes_by_backend_ids_to_frontend', 'backend_node_ids'): (
            'backendNodeIds'
        ),
        ('dom', 'query_selector', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'query_selector', 'selector'): (
            'selector'
        ),
        ('dom', 'query_selector_all', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'query_selector_all', 'selector'): (
            'selector'
        ),
        ('dom', 'remove_attribute', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'remove_attribute', 'name'): (
            'name'
        ),
        ('dom', 'remove_node', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'request_child_nodes', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'request_child_nodes', 'depth'): (
            'depth'
        ),
        ('dom', 'request_child_nodes', 'pierce'): (
            'pierce'
        ),
        ('dom', 'request_node', 'object_id'): (
            'objectId'
        ),
        ('dom', 'resolve_node', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'resolve_node', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'resolve_node', 'object_group'): (
            'objectGroup'
        ),
        ('dom', 'resolve_node', 'execution_context_id'): (
            'executionContextId'
        ),
        ('dom', 'set_attribute_value', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_attribute_value', 'name'): (
            'name'
        ),
        ('dom', 'set_attribute_value', 'value'): (
            'value'
        ),
        ('dom', 'set_attributes_as_text', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_attributes_as_text', 'text'): (
            'text'
        ),
        ('dom', 'set_attributes_as_text', 'name'): (
            'name'
        ),
        ('dom', 'set_file_input_files', 'files'): (
            'files'
        ),
        ('dom', 'set_file_input_files', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_file_input_files', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('dom', 'set_file_input_files', 'object_id'): (
            'objectId'
        ),
        ('dom', 'set_node_stack_traces_enabled', 'enable'): (
            'enable'
        ),
        ('dom', 'get_node_stack_traces', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_file_info', 'object_id'): (
            'objectId'
        ),
        ('dom', 'set_inspected_node', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_node_name', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_node_name', 'name'): (
            'name'
        ),
        ('dom', 'set_node_value', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_node_value', 'value'): (
            'value'
        ),
        ('dom', 'set_outer_html', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'set_outer_html', 'outer_html'): (
            'outerHTML'
        ),
        ('dom', 'get_frame_owner', 'frame_id'): (
            'frameId'
        ),
        ('dom', 'get_container_for_node', 'node_id'): (
            'nodeId'
        ),
        ('dom', 'get_container_for_node', 'container_name'): (
            'containerName'
        ),
        ('dom', 'get_container_for_node', 'physical_axes'): (
            'physicalAxes'
        ),
        ('dom', 'get_container_for_node', 'logical_axes'): (
            'logicalAxes'
        ),
        ('dom', 'get_querying_descendants_for_container', 'node_id'): (
            'nodeId'
        ),
        ('dom_debugger', 'get_event_listeners', 'object_id'): (
            'objectId'
        ),
        ('dom_debugger', 'get_event_listeners', 'depth'): (
            'depth'
        ),
        ('dom_debugger', 'get_event_listeners', 'pierce'): (
            'pierce'
        ),
        ('dom_debugger', 'remove_dom_breakpoint', 'node_id'): (
            'nodeId'
        ),
        ('dom_debugger', 'remove_dom_breakpoint', 'type'): (
            'type'
        ),
        ('dom_debugger', 'remove_event_listener_breakpoint', 'event_name'): (
            'eventName'
        ),
        ('dom_debugger', 'remove_event_listener_breakpoint', 'target_name'): (
            'targetName'
        ),
        ('dom_debugger', 'remove_instrumentation_breakpoint', 'event_name'): (
            'eventName'
        ),
        ('dom_debugger', 'remove_xhr_breakpoint', 'url'): (
            'url'
        ),
        ('dom_debugger', 'set_break_on_csp_violation', 'violation_types'): (
            'violationTypes'
        ),
        ('dom_debugger', 'set_dom_breakpoint', 'node_id'): (
            'nodeId'
        ),
        ('dom_debugger', 'set_dom_breakpoint', 'type'): (
            'type'
        ),
        ('dom_debugger', 'set_event_listener_breakpoint', 'event_name'): (
            'eventName'
        ),
        ('dom_debugger', 'set_event_listener_breakpoint', 'target_name'): (
            'targetName'
        ),
        ('dom_debugger', 'set_instrumentation_breakpoint', 'event_name'): (
            'eventName'
        ),
        ('dom_debugger', 'set_xhr_breakpoint', 'url'): (
            'url'
        ),
        ('event_breakpoints', 'set_instrumentation_breakpoint', 'event_name'): (
            'eventName'
        ),
        ('event_breakpoints', 'remove_instrumentation_breakpoint', 'event_name'): (
            'eventName'
        ),
        ('dom_snapshot', 'get_snapshot', 'computed_style_whitelist'): (
            'computedStyleWhitelist'
        ),
        ('dom_snapshot', 'get_snapshot', 'include_event_listeners'): (
            'includeEventListeners'
        ),
        ('dom_snapshot', 'get_snapshot', 'include_paint_order'): (
            'includePaintOrder'
        ),
        ('dom_snapshot', 'get_snapshot', 'include_user_agent_shadow_tree'): (
            'includeUserAgentShadowTree'
        ),
        ('dom_snapshot', 'capture_snapshot', 'computed_styles'): (
            'computedStyles'
        ),
        ('dom_snapshot', 'capture_snapshot', 'include_paint_order'): (
            'includePaintOrder'
        ),
        ('dom_snapshot', 'capture_snapshot', 'include_dom_rects'): (
            'includeDOMRects'
        ),
        ('dom_snapshot', 'capture_snapshot', 'include_blended_background_colors'): (
            'includeBlendedBackgroundColors'
        ),
        ('dom_snapshot', 'capture_snapshot', 'include_text_color_opacities'): (
            'includeTextColorOpacities'
        ),
        ('dom_storage', 'clear', 'storage_id'): (
            'storageId'
        ),
        ('dom_storage', 'get_dom_storage_items', 'storage_id'): (
            'storageId'
        ),
        ('dom_storage', 'remove_dom_storage_item', 'storage_id'): (
            'storageId'
        ),
        ('dom_storage', 'remove_dom_storage_item', 'key'): (
            'key'
        ),
        ('dom_storage', 'set_dom_storage_item', 'storage_id'): (
            'storageId'
        ),
        ('dom_storage', 'set_dom_storage_item', 'key'): (
            'key'
        ),
        ('dom_storage', 'set_dom_storage_item', 'value'): (
            'value'
        ),
        ('database', 'execute_sql', 'database_id'): (
            'databaseId'
        ),
        ('database', 'execute_sql', 'query'): (
            'query'
        ),
        ('database', 'get_database_table_names', 'database_id'): (
            'databaseId'
        ),
        ('device_orientation', 'set_device_orientation_override', 'alpha'): (
            'alpha'
        ),
        ('device_orientation', 'set_device_orientation_override', 'beta'): (
            'beta'
        ),
        ('device_orientation', 'set_device_orientation_override', 'gamma'): (
            'gamma'
        ),
        ('emulation', 'set_focus_emulation_enabled', 'enabled'): (
            'enabled'
        ),
        ('emulation', 'set_auto_dark_mode_override', 'enabled'): (
            'enabled'
        ),
        ('emulation', 'set_cpu_throttling_rate', 'rate'): (
            'rate'
        ),
        ('emulation', 'set_default_background_color_override', 'color'): (
            'color'
        ),
        ('emulation', 'set_device_metrics_override', 'width'): (
            'width'
        ),
        ('emulation', 'set_device_metrics_override', 'height'): (
            'height'
        ),
        ('emulation', 'set_device_metrics_override', 'device_scale_factor'): (
            'deviceScaleFactor'
        ),
        ('emulation', 'set_device_metrics_override', 'mobile'): (
            'mobile'
        ),
        ('emulation', 'set_device_metrics_override', 'scale'): (
            'scale'
        ),
        ('emulation', 'set_device_metrics_override', 'screen_width'): (
            'screenWidth'
        ),
        ('emulation', 'set_device_metrics_override', 'screen_height'): (
            'screenHeight'
        ),
        ('emulation', 'set_device_metrics_override', 'position_x'): (
            'positionX'
        ),
        ('emulation', 'set_device_metrics_override', 'position_y'): (
            'positionY'
        ),
        ('emulation', 'set_device_metrics_override', 'dont_set_visible_size'): (
            'dontSetVisibleSize'
        ),
        ('emulation', 'set_device_metrics_override', 'screen_orientation'): (
            'screenOrientation'
        ),
        ('emulation', 'set_device_metrics_override', 'viewport'): (
            'viewport'
        ),
        ('emulation', 'set_device_metrics_override', 'display_feature'): (
            'displayFeature'
        ),
        ('emulation', 'set_scrollbars_hidden', 'hidden'): (
            'hidden'
        ),
        ('emulation', 'set_document_cookie_disabled', 'disabled'): (
            'disabled'
        ),
        ('emulation', 'set_emit_touch_events_for_mouse', 'enabled'): (
            'enabled'
        ),
        ('emulation', 'set_emit_touch_events_for_mouse', 'configuration'): (
            'configuration'
        ),
        ('emulation', 'set_emulated_media', 'media'): (
            'media'
        ),
        ('emulation', 'set_emulated_media', 'features'): (
            'features'
        ),
        ('emulation', 'set_emulated_vision_deficiency', 'type'): (
            'type'
        ),
        ('emulation', 'set_geolocation_override', 'latitude'): (
            'latitude'
        ),
        ('emulation', 'set_geolocation_override', 'longitude'): (
            'longitude'
        ),
        ('emulation', 'set_geolocation_override', 'accuracy'): (
            'accuracy'
        ),
        ('emulation', 'set_idle_override', 'is_user_active'): (
            'isUserActive'
        ),
        ('emulation', 'set_idle_override', 'is_screen_unlocked'): (
            'isScreenUnlocked'
        ),
        ('emulation', 'set_navigator_overrides', 'platform'): (
            'platform'
        ),
        ('emulation', 'set_page_scale_factor', 'page_scale_factor'): (
            'pageScaleFactor'
        ),
        ('emulation', 'set_script_execution_disabled', 'value'): (
            'value'
        ),
        ('emulation', 'set_touch_emulation_enabled', 'enabled'): (
            'enabled'
        ),
        ('emulation', 'set_touch_emulation_enabled', 'max_touch_points'): (
            'maxTouchPoints'
        ),
        ('emulation', 'set_virtual_time_policy', 'policy'): (
            'policy'
        ),
        ('emulation', 'set_virtual_time_policy', 'budget'): (
            'budget'
        ),
        ('emulation', 'set_virtual_time_policy', 'max_virtual_time_task_starvation_count'): (
            'maxVirtualTimeTaskStarvationCount'
        ),
        ('emulation', 'set_virtual_time_policy', 'initial_virtual_time'): (
            'initialVirtualTime'
        ),
        ('emulation', 'set_locale_override', 'locale'): (
            'locale'
        ),
        ('emulation', 'set_timezone_override', 'timezone_id'): (
            'timezoneId'
        ),
        ('emulation', 'set_visible_size', 'width'): (
            'width'
        ),
        ('emulation', 'set_visible_size', 'height'): (
            'height'
        ),
        ('emulation', 'set_disabled_image_types', 'image_types'): (
            'imageTypes'
        ),
        ('emulation', 'set_hardware_concurrency_override', 'hardware_concurrency'): (
            'hardwareConcurrency'
        ),
        ('emulation', 'set_user_agent_override', 'user_agent'): (
            'userAgent'
        ),
        ('emulation', 'set_user_agent_override', 'accept_language'): (
            'acceptLanguage'
        ),
        ('emulation', 'set_user_agent_override', 'platform'): (
            'platform'
        ),
        ('emulation', 'set_user_agent_override', 'user_agent_metadata'): (
            'userAgentMetadata'
        ),
        ('emulation', 'set_automation_override', 'enabled'): (
            'enabled'
        ),
        ('headless_experimental', 'begin_frame', 'frame_time_ticks'): (
            'frameTimeTicks'
        ),
        ('headless_experimental', 'begin_frame', 'interval'): (
            'interval'
        ),
        ('headless_experimental', 'begin_frame', 'no_display_updates'): (
            'noDisplayUpdates'
        ),
        ('headless_experimental', 'begin_frame', 'screenshot'): (
            'screenshot'
        ),
        ('io', 'close', 'handle'): (
            'handle'
        ),
        ('io', 'read', 'handle'): (
            'handle'
        ),
        ('io', 'read', 'offset'): (
            'offset'
        ),
        ('io', 'read', 'size'): (
            'size'
        ),
        ('io', 'resolve_blob', 'object_id'): (
            'objectId'
        ),
        ('indexed_db', 'clear_object_store', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'clear_object_store', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'clear_object_store', 'storage_bucket'): (
            'storageBucket'
        ),
        ('indexed_db', 'clear_object_store', 'database_name'): (
            'databaseName'
        ),
        ('indexed_db', 'clear_object_store', 'object_store_name'): (
            'objectStoreName'
        ),
        ('indexed_db', 'delete_database', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'delete_database', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'delete_database', 'storage_bucket'): (
            'storageBucket'
        ),
        ('indexed_db', 'delete_database', 'database_name'): (
            'databaseName'
        ),
        ('indexed_db', 'delete_object_store_entries', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'delete_object_store_entries', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'delete_object_store_entries', 'storage_bucket'): (
            'storageBucket'
        ),
        ('indexed_db', 'delete_object_store_entries', 'database_name'): (
            'databaseName'
        ),
        ('indexed_db', 'delete_object_store_entries', 'object_store_name'): (
            'objectStoreName'
        ),
        ('indexed_db', 'delete_object_store_entries', 'key_range'): (
            'keyRange'
        ),
        ('indexed_db', 'request_data', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'request_data', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'request_data', 'storage_bucket'): (
            'storageBucket'
        ),
        ('indexed_db', 'request_data', 'database_name'): (
            'databaseName'
        ),
        ('indexed_db', 'request_data', 'object_store_name'): (
            'objectStoreName'
        ),
        ('indexed_db', 'request_data', 'index_name'): (
            'indexName'
        ),
        ('indexed_db', 'request_data', 'skip_count'): (
            'skipCount'
        ),
        ('indexed_db', 'request_data', 'page_size'): (
            'pageSize'
        ),
        ('indexed_db', 'request_data', 'key_range'): (
            'keyRange'
        ),
        ('indexed_db', 'get_metadata', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'get_metadata', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'get_metadata', 'storage_bucket'): (
            'storageBucket'
        ),
        ('indexed_db', 'get_metadata', 'database_name'): (
            'databaseName'
        ),
        ('indexed_db', 'get_metadata', 'object_store_name'): (
            'objectStoreName'
        ),
        ('indexed_db', 'request_database', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'request_database', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'request_database', 'storage_bucket'): (
            'storageBucket'
        ),
        ('indexed_db', 'request_database', 'database_name'): (
            'databaseName'
        ),
        ('indexed_db', 'request_database_names', 'security_origin'): (
            'securityOrigin'
        ),
        ('indexed_db', 'request_database_names', 'storage_key'): (
            'storageKey'
        ),
        ('indexed_db', 'request_database_names', 'storage_bucket'): (
            'storageBucket'
        ),
        ('input', 'dispatch_drag_event', 'type'): (
            'type'
        ),
        ('input', 'dispatch_drag_event', 'x'): (
            'x'
        ),
        ('input', 'dispatch_drag_event', 'y'): (
            'y'
        ),
        ('input', 'dispatch_drag_event', 'data'): (
            'data'
        ),
        ('input', 'dispatch_drag_event', 'modifiers'): (
            'modifiers'
        ),
        ('input', 'dispatch_key_event', 'type'): (
            'type'
        ),
        ('input', 'dispatch_key_event', 'modifiers'): (
            'modifiers'
        ),
        ('input', 'dispatch_key_event', 'timestamp'): (
            'timestamp'
        ),
        ('input', 'dispatch_key_event', 'text'): (
            'text'
        ),
        ('input', 'dispatch_key_event', 'unmodified_text'): (
            'unmodifiedText'
        ),
        ('input', 'dispatch_key_event', 'key_identifier'): (
            'keyIdentifier'
        ),
        ('input', 'dispatch_key_event', 'code'): (
            'code'
        ),
        ('input', 'dispatch_key_event', 'key'): (
            'key'
        ),
        ('input', 'dispatch_key_event', 'windows_virtual_key_code'): (
            'windowsVirtualKeyCode'
        ),
        ('input', 'dispatch_key_event', 'native_virtual_key_code'): (
            'nativeVirtualKeyCode'
        ),
        ('input', 'dispatch_key_event', 'auto_repeat'): (
            'autoRepeat'
        ),
        ('input', 'dispatch_key_event', 'is_keypad'): (
            'isKeypad'
        ),
        ('input', 'dispatch_key_event', 'is_system_key'): (
            'isSystemKey'
        ),
        ('input', 'dispatch_key_event', 'location'): (
            'location'
        ),
        ('input', 'dispatch_key_event', 'commands'): (
            'commands'
        ),
        ('input', 'insert_text', 'text'): (
            'text'
        ),
        ('input', 'ime_set_composition', 'text'): (
            'text'
        ),
        ('input', 'ime_set_composition', 'selection_start'): (
            'selectionStart'
        ),
        ('input', 'ime_set_composition', 'selection_end'): (
            'selectionEnd'
        ),
        ('input', 'ime_set_composition', 'replacement_start'): (
            'replacementStart'
        ),
        ('input', 'ime_set_composition', 'replacement_end'): (
            'replacementEnd'
        ),
        ('input', 'dispatch_mouse_event', 'type'): (
            'type'
        ),
        ('input', 'dispatch_mouse_event', 'x'): (
            'x'
        ),
        ('input', 'dispatch_mouse_event', 'y'): (
            'y'
        ),
        ('input', 'dispatch_mouse_event', 'modifiers'): (
            'modifiers'
        ),
        ('input', 'dispatch_mouse_event', 'timestamp'): (
            'timestamp'
        ),
        ('input', 'dispatch_mouse_event', 'button'): (
            'button'
        ),
        ('input', 'dispatch_mouse_event', 'buttons'): (
            'buttons'
        ),
        ('input', 'dispatch_mouse_event', 'click_count'): (
            'clickCount'
        ),
        ('input', 'dispatch_mouse_event', 'force'): (
            'force'
        ),
        ('input', 'dispatch_mouse_event', 'tangential_pressure'): (
            'tangentialPressure'
        ),
        ('input', 'dispatch_mouse_event', 'tilt_x'): (
            'tiltX'
        ),
        ('input', 'dispatch_mouse_event', 'tilt_y'): (
            'tiltY'
        ),
        ('input', 'dispatch_mouse_event', 'twist'): (
            'twist'
        ),
        ('input', 'dispatch_mouse_event', 'delta_x'): (
            'deltaX'
        ),
        ('input', 'dispatch_mouse_event', 'delta_y'): (
            'deltaY'
        ),
        ('input', 'dispatch_mouse_event', 'pointer_type'): (
            'pointerType'
        ),
        ('input', 'dispatch_touch_event', 'type'): (
            'type'
        ),
        ('input', 'dispatch_touch_event', 'touch_points'): (
            'touchPoints'
        ),
        ('input', 'dispatch_touch_event', 'modifiers'): (
            'modifiers'
        ),
        ('input', 'dispatch_touch_event', 'timestamp'): (
            'timestamp'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'type'): (
            'type'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'x'): (
            'x'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'y'): (
            'y'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'button'): (
            'button'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'timestamp'): (
            'timestamp'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'delta_x'): (
            'deltaX'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'delta_y'): (
            'deltaY'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'modifiers'): (
            'modifiers'
        ),
        ('input', 'emulate_touch_from_mouse_event', 'click_count'): (
            'clickCount'
        ),
        ('input', 'set_ignore_input_events', 'ignore'): (
            'ignore'
        ),
        ('input', 'set_intercept_drags', 'enabled'): (
            'enabled'
        ),
        ('input', 'synthesize_pinch_gesture', 'x'): (
            'x'
        ),
        ('input', 'synthesize_pinch_gesture', 'y'): (
            'y'
        ),
        ('input', 'synthesize_pinch_gesture', 'scale_factor'): (
            'scaleFactor'
        ),
        ('input', 'synthesize_pinch_gesture', 'relative_speed'): (
            'relativeSpeed'
        ),
        ('input', 'synthesize_pinch_gesture', 'gesture_source_type'): (
            'gestureSourceType'
        ),
        ('input', 'synthesize_scroll_gesture', 'x'): (
            'x'
        ),
        ('input', 'synthesize_scroll_gesture', 'y'): (
            'y'
        ),
        ('input', 'synthesize_scroll_gesture', 'x_distance'): (
            'xDistance'
        ),
        ('input', 'synthesize_scroll_gesture', 'y_distance'): (
            'yDistance'
        ),
        ('input', 'synthesize_scroll_gesture', 'x_overscroll'): (
            'xOverscroll'
        ),
        ('input', 'synthesize_scroll_gesture', 'y_overscroll'): (
            'yOverscroll'
        ),
        ('input', 'synthesize_scroll_gesture', 'prevent_fling'): (
            'preventFling'
        ),
        ('input', 'synthesize_scroll_gesture', 'speed'): (
            'speed'
        ),
        ('input', 'synthesize_scroll_gesture', 'gesture_source_type'): (
            'gestureSourceType'
        ),
        ('input', 'synthesize_scroll_gesture', 'repeat_count'): (
            'repeatCount'
        ),
        ('input', 'synthesize_scroll_gesture', 'repeat_delay_ms'): (
            'repeatDelayMs'
        ),
        ('input', 'synthesize_scroll_gesture', 'interaction_marker_name'): (
            'interactionMarkerName'
        ),
        ('input', 'synthesize_tap_gesture', 'x'): (
            'x'
        ),
        ('input', 'synthesize_tap_gesture', 'y'): (
            'y'
        ),
        ('input', 'synthesize_tap_gesture', 'duration'): (
            'duration'
        ),
        ('input', 'synthesize_tap_gesture', 'tap_count'): (
            'tapCount'
        ),
        ('input', 'synthesize_tap_gesture', 'gesture_source_type'): (
            'gestureSourceType'
        ),
        ('layer_tree', 'compositing_reasons', 'layer_id'): (
            'layerId'
        ),
        ('layer_tree', 'load_snapshot', 'tiles'): (
            'tiles'
        ),
        ('layer_tree', 'make_snapshot', 'layer_id'): (
            'layerId'
        ),
        ('layer_tree', 'profile_snapshot', 'snapshot_id'): (
            'snapshotId'
        ),
        ('layer_tree', 'profile_snapshot', 'min_repeat_count'): (
            'minRepeatCount'
        ),
        ('layer_tree', 'profile_snapshot', 'min_duration'): (
            'minDuration'
        ),
        ('layer_tree', 'profile_snapshot', 'clip_rect'): (
            'clipRect'
        ),
        ('layer_tree', 'release_snapshot', 'snapshot_id'): (
            'snapshotId'
        ),
        ('layer_tree', 'replay_snapshot', 'snapshot_id'): (
            'snapshotId'
        ),
        ('layer_tree', 'replay_snapshot', 'from_step'): (
            'fromStep'
        ),
        ('layer_tree', 'replay_snapshot', 'to_step'): (
            'toStep'
        ),
        ('layer_tree', 'replay_snapshot', 'scale'): (
            'scale'
        ),
        ('layer_tree', 'snapshot_command_log', 'snapshot_id'): (
            'snapshotId'
        ),
        ('log', 'start_violations_report', 'config'): (
            'config'
        ),
        ('memory', 'set_pressure_notifications_suppressed', 'suppressed'): (
            'suppressed'
        ),
        ('memory', 'simulate_pressure_notification', 'level'): (
            'level'
        ),
        ('memory', 'start_sampling', 'sampling_interval'): (
            'samplingInterval'
        ),
        ('memory', 'start_sampling', 'suppress_randomness'): (
            'suppressRandomness'
        ),
        ('network', 'set_accepted_encodings', 'encodings'): (
            'encodings'
        ),
        ('network', 'continue_intercepted_request', 'interception_id'): (
            'interceptionId'
        ),
        ('network', 'continue_intercepted_request', 'error_reason'): (
            'errorReason'
        ),
        ('network', 'continue_intercepted_request', 'raw_response'): (
            'rawResponse'
        ),
        ('network', 'continue_intercepted_request', 'url'): (
            'url'
        ),
        ('network', 'continue_intercepted_request', 'method'): (
            'method'
        ),
        ('network', 'continue_intercepted_request', 'post_data'): (
            'postData'
        ),
        ('network', 'continue_intercepted_request', 'headers'): (
            'headers'
        ),
        ('network', 'continue_intercepted_request', 'auth_challenge_response'): (
            'authChallengeResponse'
        ),
        ('network', 'delete_cookies', 'name'): (
            'name'
        ),
        ('network', 'delete_cookies', 'url'): (
            'url'
        ),
        ('network', 'delete_cookies', 'domain'): (
            'domain'
        ),
        ('network', 'delete_cookies', 'path'): (
            'path'
        ),
        ('network', 'emulate_network_conditions', 'offline'): (
            'offline'
        ),
        ('network', 'emulate_network_conditions', 'latency'): (
            'latency'
        ),
        ('network', 'emulate_network_conditions', 'download_throughput'): (
            'downloadThroughput'
        ),
        ('network', 'emulate_network_conditions', 'upload_throughput'): (
            'uploadThroughput'
        ),
        ('network', 'emulate_network_conditions', 'connection_type'): (
            'connectionType'
        ),
        ('network', 'enable', 'max_total_buffer_size'): (
            'maxTotalBufferSize'
        ),
        ('network', 'enable', 'max_resource_buffer_size'): (
            'maxResourceBufferSize'
        ),
        ('network', 'enable', 'max_post_data_size'): (
            'maxPostDataSize'
        ),
        ('network', 'get_certificate', 'origin'): (
            'origin'
        ),
        ('network', 'get_cookies', 'urls'): (
            'urls'
        ),
        ('network', 'get_response_body', 'request_id'): (
            'requestId'
        ),
        ('network', 'get_request_post_data', 'request_id'): (
            'requestId'
        ),
        ('network', 'get_response_body_for_interception', 'interception_id'): (
            'interceptionId'
        ),
        ('network', 'take_response_body_for_interception_as_stream', 'interception_id'): (
            'interceptionId'
        ),
        ('network', 'replay_xhr', 'request_id'): (
            'requestId'
        ),
        ('network', 'search_in_response_body', 'request_id'): (
            'requestId'
        ),
        ('network', 'search_in_response_body', 'query'): (
            'query'
        ),
        ('network', 'search_in_response_body', 'case_sensitive'): (
            'caseSensitive'
        ),
        ('network', 'search_in_response_body', 'is_regex'): (
            'isRegex'
        ),
        ('network', 'set_blocked_ur_ls', 'urls'): (
            'urls'
        ),
        ('network', 'set_bypass_service_worker', 'bypass'): (
            'bypass'
        ),
        ('network', 'set_cache_disabled', 'cache_disabled'): (
            'cacheDisabled'
        ),
        ('network', 'set_cookie', 'name'): (
            'name'
        ),
        ('network', 'set_cookie', 'value'): (
            'value'
        ),
        ('network', 'set_cookie', 'url'): (
            'url'
        ),
        ('network', 'set_cookie', 'domain'): (
            'domain'
        ),
        ('network', 'set_cookie', 'path'): (
            'path'
        ),
        ('network', 'set_cookie', 'secure'): (
            'secure'
        ),
        ('network', 'set_cookie', 'http_only'): (
            'httpOnly'
        ),
        ('network', 'set_cookie', 'same_site'): (
            'sameSite'
        ),
        ('network', 'set_cookie', 'expires'): (
            'expires'
        ),
        ('network', 'set_cookie', 'priority'): (
            'priority'
        ),
        ('network', 'set_cookie', 'same_party'): (
            'sameParty'
        ),
        ('network', 'set_cookie', 'source_scheme'): (
            'sourceScheme'
        ),
        ('network', 'set_cookie', 'source_port'): (
            'sourcePort'
        ),
        ('network', 'set_cookie', 'partition_key'): (
            'partitionKey'
        ),
        ('network', 'set_cookies', 'cookies'): (
            'cookies'
        ),
        ('network', 'set_extra_http_headers', 'headers'): (
            'headers'
        ),
        ('network', 'set_attach_debug_stack', 'enabled'): (
            'enabled'
        ),
        ('network', 'set_request_interception', 'patterns'): (
            'patterns'
        ),
        ('network', 'set_user_agent_override', 'user_agent'): (
            'userAgent'
        ),
        ('network', 'set_user_agent_override', 'accept_language'): (
            'acceptLanguage'
        ),
        ('network', 'set_user_agent_override', 'platform'): (
            'platform'
        ),
        ('network', 'set_user_agent_override', 'user_agent_metadata'): (
            'userAgentMetadata'
        ),
        ('network', 'get_security_isolation_status', 'frame_id'): (
            'frameId'
        ),
        ('network', 'enable_reporting_api', 'enable'): (
            'enable'
        ),
        ('network', 'load_network_resource', 'frame_id'): (
            'frameId'
        ),
        ('network', 'load_network_resource', 'url'): (
            'url'
        ),
        ('network', 'load_network_resource', 'options'): (
            'options'
        ),
        ('overlay', 'get_highlight_object_for_test', 'node_id'): (
            'nodeId'
        ),
        ('overlay', 'get_highlight_object_for_test', 'include_distance'): (
            'includeDistance'
        ),
        ('overlay', 'get_highlight_object_for_test', 'include_style'): (
            'includeStyle'
        ),
        ('overlay', 'get_highlight_object_for_test', 'color_format'): (
            'colorFormat'
        ),
        ('overlay', 'get_highlight_object_for_test', 'show_accessibility_info'): (
            'showAccessibilityInfo'
        ),
        ('overlay', 'get_grid_highlight_objects_for_test', 'node_ids'): (
            'nodeIds'
        ),
        ('overlay', 'get_source_order_highlight_object_for_test', 'node_id'): (
            'nodeId'
        ),
        ('overlay', 'highlight_frame', 'frame_id'): (
            'frameId'
        ),
        ('overlay', 'highlight_frame', 'content_color'): (
            'contentColor'
        ),
        ('overlay', 'highlight_frame', 'content_outline_color'): (
            'contentOutlineColor'
        ),
        ('overlay', 'highlight_node', 'highlight_config'): (
            'highlightConfig'
        ),
        ('overlay', 'highlight_node', 'node_id'): (
            'nodeId'
        ),
        ('overlay', 'highlight_node', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('overlay', 'highlight_node', 'object_id'): (
            'objectId'
        ),
        ('overlay', 'highlight_node', 'selector'): (
            'selector'
        ),
        ('overlay', 'highlight_quad', 'quad'): (
            'quad'
        ),
        ('overlay', 'highlight_quad', 'color'): (
            'color'
        ),
        ('overlay', 'highlight_quad', 'outline_color'): (
            'outlineColor'
        ),
        ('overlay', 'highlight_rect', 'x'): (
            'x'
        ),
        ('overlay', 'highlight_rect', 'y'): (
            'y'
        ),
        ('overlay', 'highlight_rect', 'width'): (
            'width'
        ),
        ('overlay', 'highlight_rect', 'height'): (
            'height'
        ),
        ('overlay', 'highlight_rect', 'color'): (
            'color'
        ),
        ('overlay', 'highlight_rect', 'outline_color'): (
            'outlineColor'
        ),
        ('overlay', 'highlight_source_order', 'source_order_config'): (
            'sourceOrderConfig'
        ),
        ('overlay', 'highlight_source_order', 'node_id'): (
            'nodeId'
        ),
        ('overlay', 'highlight_source_order', 'backend_node_id'): (
            'backendNodeId'
        ),
        ('overlay', 'highlight_source_order', 'object_id'): (
            'objectId'
        ),
        ('overlay', 'set_inspect_mode', 'mode'): (
            'mode'
        ),
        ('overlay', 'set_inspect_mode', 'highlight_config'): (
            'highlightConfig'
        ),
        ('overlay', 'set_show_ad_highlights', 'show'): (
            'show'
        ),
        ('overlay', 'set_paused_in_debugger_message', 'message'): (
            'message'
        ),
        ('overlay', 'set_show_debug_borders', 'show'): (
            'show'
        ),
        ('overlay', 'set_show_fps_counter', 'show'): (
            'show'
        ),
        ('overlay', 'set_show_grid_overlays', 'grid_node_highlight_configs'): (
            'gridNodeHighlightConfigs'
        ),
        ('overlay', 'set_show_flex_overlays', 'flex_node_highlight_configs'): (
            'flexNodeHighlightConfigs'
        ),
        ('overlay', 'set_show_scroll_snap_overlays', 'scroll_snap_highlight_configs'): (
            'scrollSnapHighlightConfigs'
        ),
        ('overlay', 'set_show_container_query_overlays', 'container_query_highlight_configs'): (
            'containerQueryHighlightConfigs'
        ),
        ('overlay', 'set_show_paint_rects', 'result'): (
            'result'
        ),
        ('overlay', 'set_show_layout_shift_regions', 'result'): (
            'result'
        ),
        ('overlay', 'set_show_scroll_bottleneck_rects', 'show'): (
            'show'
        ),
        ('overlay', 'set_show_hit_test_borders', 'show'): (
            'show'
        ),
        ('overlay', 'set_show_web_vitals', 'show'): (
            'show'
        ),
        ('overlay', 'set_show_viewport_size_on_resize', 'show'): (
            'show'
        ),
        ('overlay', 'set_show_hinge', 'hinge_config'): (
            'hingeConfig'
        ),
        ('overlay', 'set_show_isolated_elements', 'isolated_element_highlight_configs'): (
            'isolatedElementHighlightConfigs'
        ),
        ('page', 'add_script_to_evaluate_on_load', 'script_source'): (
            'scriptSource'
        ),
        ('page', 'add_script_to_evaluate_on_new_document', 'source'): (
            'source'
        ),
        ('page', 'add_script_to_evaluate_on_new_document', 'world_name'): (
            'worldName'
        ),
        ('page', 'add_script_to_evaluate_on_new_document', 'include_command_line_api'): (
            'includeCommandLineAPI'
        ),
        ('page', 'add_script_to_evaluate_on_new_document', 'run_immediately'): (
            'runImmediately'
        ),
        ('page', 'capture_screenshot', 'format'): (
            'format'
        ),
        ('page', 'capture_screenshot', 'quality'): (
            'quality'
        ),
        ('page', 'capture_screenshot', 'clip'): (
            'clip'
        ),
        ('page', 'capture_screenshot', 'from_surface'): (
            'fromSurface'
        ),
        ('page', 'capture_screenshot', 'capture_beyond_viewport'): (
            'captureBeyondViewport'
        ),
        ('page', 'capture_screenshot', 'optimize_for_speed'): (
            'optimizeForSpeed'
        ),
        ('page', 'capture_snapshot', 'format'): (
            'format'
        ),
        ('page', 'create_isolated_world', 'frame_id'): (
            'frameId'
        ),
        ('page', 'create_isolated_world', 'world_name'): (
            'worldName'
        ),
        ('page', 'create_isolated_world', 'grant_univeral_access'): (
            'grantUniveralAccess'
        ),
        ('page', 'delete_cookie', 'cookie_name'): (
            'cookieName'
        ),
        ('page', 'delete_cookie', 'url'): (
            'url'
        ),
        ('page', 'get_ad_script_id', 'frame_id'): (
            'frameId'
        ),
        ('page', 'get_resource_content', 'frame_id'): (
            'frameId'
        ),
        ('page', 'get_resource_content', 'url'): (
            'url'
        ),
        ('page', 'handle_java_script_dialog', 'accept'): (
            'accept'
        ),
        ('page', 'handle_java_script_dialog', 'prompt_text'): (
            'promptText'
        ),
        ('page', 'navigate', 'url'): (
            'url'
        ),
        ('page', 'navigate', 'referrer'): (
            'referrer'
        ),
        ('page', 'navigate', 'transition_type'): (
            'transitionType'
        ),
        ('page', 'navigate', 'frame_id'): (
            'frameId'
        ),
        ('page', 'navigate', 'referrer_policy'): (
            'referrerPolicy'
        ),
        ('page', 'navigate_to_history_entry', 'entry_id'): (
            'entryId'
        ),
        ('page', 'print_to_pdf', 'landscape'): (
            'landscape'
        ),
        ('page', 'print_to_pdf', 'display_header_footer'): (
            'displayHeaderFooter'
        ),
        ('page', 'print_to_pdf', 'print_background'): (
            'printBackground'
        ),
        ('page', 'print_to_pdf', 'scale'): (
            'scale'
        ),
        ('page', 'print_to_pdf', 'paper_width'): (
            'paperWidth'
        ),
        ('page', 'print_to_pdf', 'paper_height'): (
            'paperHeight'
        ),
        ('page', 'print_to_pdf', 'margin_top'): (
            'marginTop'
        ),
        ('page', 'print_to_pdf', 'margin_bottom'): (
            'marginBottom'
        ),
        ('page', 'print_to_pdf', 'margin_left'): (
            'marginLeft'
        ),
        ('page', 'print_to_pdf', 'margin_right'): (
            'marginRight'
        ),
        ('page', 'print_to_pdf', 'page_ranges'): (
            'pageRanges'
        ),
        ('page', 'print_to_pdf', 'header_template'): (
            'headerTemplate'
        ),
        ('page', 'print_to_pdf', 'footer_template'): (
            'footerTemplate'
        ),
        ('page', 'print_to_pdf', 'prefer_css_page_size'): (
            'preferCSSPageSize'
        ),
        ('page', 'print_to_pdf', 'transfer_mode'): (
            'transferMode'
        ),
        ('page', 'print_to_pdf', 'generate_tagged_pdf'): (
            'generateTaggedPDF'
        ),
        ('page', 'reload', 'ignore_cache'): (
            'ignoreCache'
        ),
        ('page', 'reload', 'script_to_evaluate_on_load'): (
            'scriptToEvaluateOnLoad'
        ),
        ('page', 'remove_script_to_evaluate_on_load', 'identifier'): (
            'identifier'
        ),
        ('page', 'remove_script_to_evaluate_on_new_document', 'identifier'): (
            'identifier'
        ),
        ('page', 'screencast_frame_ack', 'session_id'): (
            'sessionId'
        ),
        ('page', 'search_in_resource', 'frame_id'): (
            'frameId'
        ),
        ('page', 'search_in_resource', 'url'): (
            'url'
        ),
        ('page', 'search_in_resource', 'query'): (
            'query'
        ),
        ('page', 'search_in_resource', 'case_sensitive'): (
            'caseSensitive'
        ),
        ('page', 'search_in_resource', 'is_regex'): (
            'isRegex'
        ),
        ('page', 'set_ad_blocking_enabled', 'enabled'): (
            'enabled'
        ),
        ('page', 'set_bypass_csp', 'enabled'): (
            'enabled'
        ),
        ('page', 'get_permissions_policy_state', 'frame_id'): (
            'frameId'
        ),
        ('page', 'get_origin_trials', 'frame_id'): (
            'frameId'
        ),
        ('page', 'set_device_metrics_override', 'width'): (
            'width'
        ),
        ('page', 'set_device_metrics_override', 'height'): (
            'height'
        ),
        ('page', 'set_device_metrics_override', 'device_scale_factor'): (
            'deviceScaleFactor'
        ),
        ('page', 'set_device_metrics_override', 'mobile'): (
            'mobile'
        ),
        ('page', 'set_device_metrics_override', 'scale'): (
            'scale'
        ),
        ('page', 'set_device_metrics_override', 'screen_width'): (
            'screenWidth'
        ),
        ('page', 'set_device_metrics_override', 'screen_height'): (
            'screenHeight'
        ),
        ('page', 'set_device_metrics_override', 'position_x'): (
            'positionX'
        ),
        ('page', 'set_device_metrics_override', 'position_y'): (
            'positionY'
        ),
        ('page', 'set_device_metrics_override', 'dont_set_visible_size'): (
            'dontSetVisibleSize'
        ),
        ('page', 'set_device_metrics_override', 'screen_orientation'): (
            'screenOrientation'
        ),
        ('page', 'set_device_metrics_override', 'viewport'): (
            'viewport'
        ),
        ('page', 'set_device_orientation_override', 'alpha'): (
            'alpha'
        ),
        ('page', 'set_device_orientation_override', 'beta'): (
            'beta'
        ),
        ('page', 'set_device_orientation_override', 'gamma'): (
            'gamma'
        ),
        ('page', 'set_font_families', 'font_families'): (
            'fontFamilies'
        ),
        ('page', 'set_font_families', 'for_scripts'): (
            'forScripts'
        ),
        ('page', 'set_font_sizes', 'font_sizes'): (
            'fontSizes'
        ),
        ('page', 'set_document_content', 'frame_id'): (
            'frameId'
        ),
        ('page', 'set_document_content', 'html'): (
            'html'
        ),
        ('page', 'set_download_behavior', 'behavior'): (
            'behavior'
        ),
        ('page', 'set_download_behavior', 'download_path'): (
            'downloadPath'
        ),
        ('page', 'set_geolocation_override', 'latitude'): (
            'latitude'
        ),
        ('page', 'set_geolocation_override', 'longitude'): (
            'longitude'
        ),
        ('page', 'set_geolocation_override', 'accuracy'): (
            'accuracy'
        ),
        ('page', 'set_lifecycle_events_enabled', 'enabled'): (
            'enabled'
        ),
        ('page', 'set_touch_emulation_enabled', 'enabled'): (
            'enabled'
        ),
        ('page', 'set_touch_emulation_enabled', 'configuration'): (
            'configuration'
        ),
        ('page', 'start_screencast', 'format'): (
            'format'
        ),
        ('page', 'start_screencast', 'quality'): (
            'quality'
        ),
        ('page', 'start_screencast', 'max_width'): (
            'maxWidth'
        ),
        ('page', 'start_screencast', 'max_height'): (
            'maxHeight'
        ),
        ('page', 'start_screencast', 'every_nth_frame'): (
            'everyNthFrame'
        ),
        ('page', 'set_web_lifecycle_state', 'state'): (
            'state'
        ),
        ('page', 'produce_compilation_cache', 'scripts'): (
            'scripts'
        ),
        ('page', 'add_compilation_cache', 'url'): (
            'url'
        ),
        ('page', 'add_compilation_cache', 'data'): (
            'data'
        ),
        ('page', 'set_spc_transaction_mode', 'mode'): (
            'mode'
        ),
        ('page', 'set_rph_registration_mode', 'mode'): (
            'mode'
        ),
        ('page', 'generate_test_report', 'message'): (
            'message'
        ),
        ('page', 'generate_test_report', 'group'): (
            'group'
        ),
        ('page', 'set_intercept_file_chooser_dialog', 'enabled'): (
            'enabled'
        ),
        ('page', 'set_prerendering_allowed', 'is_allowed'): (
            'isAllowed'
        ),
        ('performance', 'enable', 'time_domain'): (
            'timeDomain'
        ),
        ('performance', 'set_time_domain', 'time_domain'): (
            'timeDomain'
        ),
        ('performance_timeline', 'enable', 'event_types'): (
            'eventTypes'
        ),
        ('security', 'set_ignore_certificate_errors', 'ignore'): (
            'ignore'
        ),
        ('security', 'handle_certificate_error', 'event_id'): (
            'eventId'
        ),
        ('security', 'handle_certificate_error', 'action'): (
            'action'
        ),
        ('security', 'set_override_certificate_errors', 'override'): (
            'override'
        ),
        ('service_worker', 'deliver_push_message', 'origin'): (
            'origin'
        ),
        ('service_worker', 'deliver_push_message', 'registration_id'): (
            'registrationId'
        ),
        ('service_worker', 'deliver_push_message', 'data'): (
            'data'
        ),
        ('service_worker', 'dispatch_sync_event', 'origin'): (
            'origin'
        ),
        ('service_worker', 'dispatch_sync_event', 'registration_id'): (
            'registrationId'
        ),
        ('service_worker', 'dispatch_sync_event', 'tag'): (
            'tag'
        ),
        ('service_worker', 'dispatch_sync_event', 'last_chance'): (
            'lastChance'
        ),
        ('service_worker', 'dispatch_periodic_sync_event', 'origin'): (
            'origin'
        ),
        ('service_worker', 'dispatch_periodic_sync_event', 'registration_id'): (
            'registrationId'
        ),
        ('service_worker', 'dispatch_periodic_sync_event', 'tag'): (
            'tag'
        ),
        ('service_worker', 'inspect_worker', 'version_id'): (
            'versionId'
        ),
        ('service_worker', 'set_force_update_on_page_load', 'force_update_on_page_load'): (
            'forceUpdateOnPageLoad'
        ),
        ('service_worker', 'skip_waiting', 'scope_url'): (
            'scopeURL'
        ),
        ('service_worker', 'start_worker', 'scope_url'): (
            'scopeURL'
        ),
        ('service_worker', 'stop_worker', 'version_id'): (
            'versionId'
        ),
        ('service_worker', 'unregister', 'scope_url'): (
            'scopeURL'
        ),
        ('service_worker', 'update_registration', 'scope_url'): (
            'scopeURL'
        ),
        ('storage', 'get_storage_key_for_frame', 'frame_id'): (
            'frameId'
        ),
        ('storage', 'clear_data_for_origin', 'origin'): (
            'origin'
        ),
        ('storage', 'clear_data_for_origin', 'storage_types'): (
            'storageTypes'
        ),
        ('storage', 'clear_data_for_storage_key', 'storage_key'): (
            'storageKey'
        ),
        ('storage', 'clear_data_for_storage_key', 'storage_types'): (
            'storageTypes'
        ),
        ('storage', 'get_cookies', 'browser_context_id'): (
            'browserContextId'
        ),
        ('storage', 'set_cookies', 'cookies'): (
            'cookies'
        ),
        ('storage', 'set_cookies', 'browser_context_id'): (
            'browserContextId'
        ),
        ('storage', 'clear_cookies', 'browser_context_id'): (
            'browserContextId'
        ),
        ('storage', 'get_usage_and_quota', 'origin'): (
            'origin'
        ),
        ('storage', 'override_quota_for_origin', 'origin'): (
            'origin'
        ),
        ('storage', 'override_quota_for_origin', 'quota_size'): (
            'quotaSize'
        ),
        ('storage', 'track_cache_storage_for_origin', 'origin'): (
            'origin'
        ),
        ('storage', 'track_cache_storage_for_storage_key', 'storage_key'): (
            'storageKey'
        ),
        ('storage', 'track_indexed_db_for_origin', 'origin'): (
            'origin'
        ),
        ('storage', 'track_indexed_db_for_storage_key', 'storage_key'): (
            'storageKey'
        ),
        ('storage', 'untrack_cache_storage_for_origin', 'origin'): (
            'origin'
        ),
        ('storage', 'untrack_cache_storage_for_storage_key', 'storage_key'): (
            'storageKey'
        ),
        ('storage', 'untrack_indexed_db_for_origin', 'origin'): (
            'origin'
        ),
        ('storage', 'untrack_indexed_db_for_storage_key', 'storage_key'): (
            'storageKey'
        ),
        ('storage', 'clear_trust_tokens', 'issuer_origin'): (
            'issuerOrigin'
        ),
        ('storage', 'get_interest_group_details', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'get_interest_group_details', 'name'): (
            'name'
        ),
        ('storage', 'set_interest_group_tracking', 'enable'): (
            'enable'
        ),
        ('storage', 'get_shared_storage_metadata', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'get_shared_storage_entries', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'set_shared_storage_entry', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'set_shared_storage_entry', 'key'): (
            'key'
        ),
        ('storage', 'set_shared_storage_entry', 'value'): (
            'value'
        ),
        ('storage', 'set_shared_storage_entry', 'ignore_if_present'): (
            'ignoreIfPresent'
        ),
        ('storage', 'delete_shared_storage_entry', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'delete_shared_storage_entry', 'key'): (
            'key'
        ),
        ('storage', 'clear_shared_storage_entries', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'reset_shared_storage_budget', 'owner_origin'): (
            'ownerOrigin'
        ),
        ('storage', 'set_shared_storage_tracking', 'enable'): (
            'enable'
        ),
        ('storage', 'set_storage_bucket_tracking', 'storage_key'): (
            'storageKey'
        ),
        ('storage', 'set_storage_bucket_tracking', 'enable'): (
            'enable'
        ),
        ('storage', 'delete_storage_bucket', 'bucket'): (
            'bucket'
        ),
        ('storage', 'set_attribution_reporting_local_testing_mode', 'enabled'): (
            'enabled'
        ),
        ('storage', 'set_attribution_reporting_tracking', 'enable'): (
            'enable'
        ),
        ('system_info', 'get_feature_state', 'feature_state'): (
            'featureState'
        ),
        ('target', 'activate_target', 'target_id'): (
            'targetId'
        ),
        ('target', 'attach_to_target', 'target_id'): (
            'targetId'
        ),
        ('target', 'attach_to_target', 'flatten'): (
            'flatten'
        ),
        ('target', 'close_target', 'target_id'): (
            'targetId'
        ),
        ('target', 'expose_dev_tools_protocol', 'target_id'): (
            'targetId'
        ),
        ('target', 'expose_dev_tools_protocol', 'binding_name'): (
            'bindingName'
        ),
        ('target', 'create_browser_context', 'dispose_on_detach'): (
            'disposeOnDetach'
        ),
        ('target', 'create_browser_context', 'proxy_server'): (
            'proxyServer'
        ),
        ('target', 'create_browser_context', 'proxy_bypass_list'): (
            'proxyBypassList'
        ),
        ('target', 'create_browser_context', 'origins_with_universal_network_access'): (
            'originsWithUniversalNetworkAccess'
        ),
        ('target', 'create_target', 'url'): (
            'url'
        ),
        ('target', 'create_target', 'width'): (
            'width'
        ),
        ('target', 'create_target', 'height'): (
            'height'
        ),
        ('target', 'create_target', 'browser_context_id'): (
            'browserContextId'
        ),
        ('target', 'create_target', 'enable_begin_frame_control'): (
            'enableBeginFrameControl'
        ),
        ('target', 'create_target', 'new_window'): (
            'newWindow'
        ),
        ('target', 'create_target', 'background'): (
            'background'
        ),
        ('target', 'create_target', 'for_tab'): (
            'forTab'
        ),
        ('target', 'detach_from_target', 'session_id'): (
            'sessionId'
        ),
        ('target', 'detach_from_target', 'target_id'): (
            'targetId'
        ),
        ('target', 'dispose_browser_context', 'browser_context_id'): (
            'browserContextId'
        ),
        ('target', 'get_target_info', 'target_id'): (
            'targetId'
        ),
        ('target', 'get_targets', 'filter'): (
            'filter'
        ),
        ('target', 'send_message_to_target', 'message'): (
            'message'
        ),
        ('target', 'send_message_to_target', 'session_id'): (
            'sessionId'
        ),
        ('target', 'send_message_to_target', 'target_id'): (
            'targetId'
        ),
        ('target', 'set_auto_attach', 'auto_attach'): (
            'autoAttach'
        ),
        ('target', 'set_auto_attach', 'wait_for_debugger_on_start'): (
            'waitForDebuggerOnStart'
        ),
        ('target', 'set_auto_attach', 'flatten'): (
            'flatten'
        ),
        ('target', 'set_auto_attach', 'filter'): (
            'filter'
        ),
        ('target', 'auto_attach_related', 'target_id'): (
            'targetId'
        ),
        ('target', 'auto_attach_related', 'wait_for_debugger_on_start'): (
            'waitForDebuggerOnStart'
        ),
        ('target', 'auto_attach_related', 'filter'): (
            'filter'
        ),
        ('target', 'set_discover_targets', 'discover'): (
            'discover'
        ),
        ('target', 'set_discover_targets', 'filter'): (
            'filter'
        ),
        ('target', 'set_remote_locations', 'locations'): (
            'locations'
        ),
        ('tethering', 'bind', 'port'): (
            'port'
        ),
        ('tethering', 'unbind', 'port'): (
            'port'
        ),
        ('tracing', 'record_clock_sync_marker', 'sync_id'): (
            'syncId'
        ),
        ('tracing', 'request_memory_dump', 'deterministic'): (
            'deterministic'
        ),
        ('tracing', 'request_memory_dump', 'level_of_detail'): (
            'levelOfDetail'
        ),
        ('tracing', 'start', 'categories'): (
            'categories'
        ),
        ('tracing', 'start', 'options'): (
            'options'
        ),
        ('tracing', 'start', 'buffer_usage_reporting_interval'): (
            'bufferUsageReportingInterval'
        ),
        ('tracing', 'start', 'transfer_mode'): (
            'transferMode'
        ),
        ('tracing', 'start', 'stream_format'): (
            'streamFormat'
        ),
        ('tracing', 'start', 'stream_compression'): (
            'streamCompression'
        ),
        ('tracing', 'start', 'trace_config'): (
            'traceConfig'
        ),
        ('tracing', 'start', 'perfetto_config'): (
            'perfettoConfig'
        ),
        ('tracing', 'start', 'tracing_backend'): (
            'tracingBackend'
        ),
        ('fetch', 'enable', 'patterns'): (
            'patterns'
        ),
        ('fetch', 'enable', 'handle_auth_requests'): (
            'handleAuthRequests'
        ),
        ('fetch', 'fail_request', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'fail_request', 'error_reason'): (
            'errorReason'
        ),
        ('fetch', 'fulfill_request', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'fulfill_request', 'response_code'): (
            'responseCode'
        ),
        ('fetch', 'fulfill_request', 'response_headers'): (
            'responseHeaders'
        ),
        ('fetch', 'fulfill_request', 'binary_response_headers'): (
            'binaryResponseHeaders'
        ),
        ('fetch', 'fulfill_request', 'body'): (
            'body'
        ),
        ('fetch', 'fulfill_request', 'response_phrase'): (
            'responsePhrase'
        ),
        ('fetch', 'continue_request', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'continue_request', 'url'): (
            'url'
        ),
        ('fetch', 'continue_request', 'method'): (
            'method'
        ),
        ('fetch', 'continue_request', 'post_data'): (
            'postData'
        ),
        ('fetch', 'continue_request', 'headers'): (
            'headers'
        ),
        ('fetch', 'continue_request', 'intercept_response'): (
            'interceptResponse'
        ),
        ('fetch', 'continue_with_auth', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'continue_with_auth', 'auth_challenge_response'): (
            'authChallengeResponse'
        ),
        ('fetch', 'continue_response', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'continue_response', 'response_code'): (
            'responseCode'
        ),
        ('fetch', 'continue_response', 'response_phrase'): (
            'responsePhrase'
        ),
        ('fetch', 'continue_response', 'response_headers'): (
            'responseHeaders'
        ),
        ('fetch', 'continue_response', 'binary_response_headers'): (
            'binaryResponseHeaders'
        ),
        ('fetch', 'get_response_body', 'request_id'): (
            'requestId'
        ),
        ('fetch', 'take_response_body_as_stream', 'request_id'): (
            'requestId'
        ),
        ('web_audio', 'get_realtime_data', 'context_id'): (
            'contextId'
        ),
        ('web_authn', 'enable', 'enable_ui'): (
            'enableUI'
        ),
        ('web_authn', 'add_virtual_authenticator', 'options'): (
            'options'
        ),
        ('web_authn', 'set_response_override_bits', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'set_response_override_bits', 'is_bogus_signature'): (
            'isBogusSignature'
        ),
        ('web_authn', 'set_response_override_bits', 'is_bad_uv'): (
            'isBadUV'
        ),
        ('web_authn', 'set_response_override_bits', 'is_bad_up'): (
            'isBadUP'
        ),
        ('web_authn', 'remove_virtual_authenticator', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'add_credential', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'add_credential', 'credential'): (
            'credential'
        ),
        ('web_authn', 'get_credential', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'get_credential', 'credential_id'): (
            'credentialId'
        ),
        ('web_authn', 'get_credentials', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'remove_credential', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'remove_credential', 'credential_id'): (
            'credentialId'
        ),
        ('web_authn', 'clear_credentials', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'set_user_verified', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'set_user_verified', 'is_user_verified'): (
            'isUserVerified'
        ),
        ('web_authn', 'set_automatic_presence_simulation', 'authenticator_id'): (
            'authenticatorId'
        ),
        ('web_authn', 'set_automatic_presence_simulation', 'enabled'): (
            'enabled'
        ),
        ('device_access', 'select_prompt', 'id'): (
            'id'
        ),
        ('device_access', 'select_prompt', 'device_id'): (
            'deviceId'
        ),
        ('device_access', 'cancel_prompt', 'id'): (
            'id'
        ),
        ('fed_cm', 'enable', 'disable_rejection_delay'): (
            'disableRejectionDelay'
        ),
        ('fed_cm', 'select_account', 'dialog_id'): (
            'dialogId'
        ),
        ('fed_cm', 'select_account', 'account_index'): (
            'accountIndex'
        ),
        ('fed_cm', 'confirm_idp_signin', 'dialog_id'): (
            'dialogId'
        ),
        ('fed_cm', 'dismiss_dialog', 'dialog_id'): (
            'dialogId'
        ),
        ('fed_cm', 'dismiss_dialog', 'trigger_cooldown'): (
            'triggerCooldown'
        ),
        ('debugger', 'continue_to_location', 'location'): (
            'location'
        ),
        ('debugger', 'continue_to_location', 'target_call_frames'): (
            'targetCallFrames'
        ),
        ('debugger', 'enable', 'max_scripts_cache_size'): (
            'maxScriptsCacheSize'
        ),
        ('debugger', 'evaluate_on_call_frame', 'call_frame_id'): (
            'callFrameId'
        ),
        ('debugger', 'evaluate_on_call_frame', 'expression'): (
            'expression'
        ),
        ('debugger', 'evaluate_on_call_frame', 'object_group'): (
            'objectGroup'
        ),
        ('debugger', 'evaluate_on_call_frame', 'include_command_line_api'): (
            'includeCommandLineAPI'
        ),
        ('debugger', 'evaluate_on_call_frame', 'silent'): (
            'silent'
        ),
        ('debugger', 'evaluate_on_call_frame', 'return_by_value'): (
            'returnByValue'
        ),
        ('debugger', 'evaluate_on_call_frame', 'generate_preview'): (
            'generatePreview'
        ),
        ('debugger', 'evaluate_on_call_frame', 'throw_on_side_effect'): (
            'throwOnSideEffect'
        ),
        ('debugger', 'evaluate_on_call_frame', 'timeout'): (
            'timeout'
        ),
        ('debugger', 'get_possible_breakpoints', 'start'): (
            'start'
        ),
        ('debugger', 'get_possible_breakpoints', 'end'): (
            'end'
        ),
        ('debugger', 'get_possible_breakpoints', 'restrict_to_function'): (
            'restrictToFunction'
        ),
        ('debugger', 'get_script_source', 'script_id'): (
            'scriptId'
        ),
        ('debugger', 'get_stack_trace', 'stack_trace_id'): (
            'stackTraceId'
        ),
        ('debugger', 'pause_on_async_call', 'parent_stack_trace_id'): (
            'parentStackTraceId'
        ),
        ('debugger', 'remove_breakpoint', 'breakpoint_id'): (
            'breakpointId'
        ),
        ('debugger', 'restart_frame', 'call_frame_id'): (
            'callFrameId'
        ),
        ('debugger', 'search_in_content', 'script_id'): (
            'scriptId'
        ),
        ('debugger', 'search_in_content', 'query'): (
            'query'
        ),
        ('debugger', 'search_in_content', 'case_sensitive'): (
            'caseSensitive'
        ),
        ('debugger', 'search_in_content', 'is_regex'): (
            'isRegex'
        ),
        ('debugger', 'set_async_call_stack_depth', 'max_depth'): (
            'maxDepth'
        ),
        ('debugger', 'set_blackbox_patterns', 'patterns'): (
            'patterns'
        ),
        ('debugger', 'set_blackboxed_ranges', 'script_id'): (
            'scriptId'
        ),
        ('debugger', 'set_blackboxed_ranges', 'positions'): (
            'positions'
        ),
        ('debugger', 'set_breakpoint', 'location'): (
            'location'
        ),
        ('debugger', 'set_breakpoint', 'condition'): (
            'condition'
        ),
        ('debugger', 'set_instrumentation_breakpoint', 'instrumentation'): (
            'instrumentation'
        ),
        ('debugger', 'set_breakpoint_by_url', 'line_number'): (
            'lineNumber'
        ),
        ('debugger', 'set_breakpoint_by_url', 'url'): (
            'url'
        ),
        ('debugger', 'set_breakpoint_by_url', 'url_regex'): (
            'urlRegex'
        ),
        ('debugger', 'set_breakpoint_by_url', 'script_hash'): (
            'scriptHash'
        ),
        ('debugger', 'set_breakpoint_by_url', 'column_number'): (
            'columnNumber'
        ),
        ('debugger', 'set_breakpoint_by_url', 'condition'): (
            'condition'
        ),
        ('debugger', 'set_breakpoint_on_function_call', 'object_id'): (
            'objectId'
        ),
        ('debugger', 'set_breakpoint_on_function_call', 'condition'): (
            'condition'
        ),
        ('debugger', 'set_breakpoints_active', 'active'): (
            'active'
        ),
        ('debugger', 'set_pause_on_exceptions', 'state'): (
            'state'
        ),
        ('debugger', 'set_return_value', 'new_value'): (
            'newValue'
        ),
        ('debugger', 'set_script_source', 'script_id'): (
            'scriptId'
        ),
        ('debugger', 'set_script_source', 'script_source'): (
            'scriptSource'
        ),
        ('debugger', 'set_script_source', 'dry_run'): (
            'dryRun'
        ),
        ('debugger', 'set_skip_all_pauses', 'skip'): (
            'skip'
        ),
        ('debugger', 'set_variable_value', 'scope_number'): (
            'scopeNumber'
        ),
        ('debugger', 'set_variable_value', 'variable_name'): (
            'variableName'
        ),
        ('debugger', 'set_variable_value', 'new_value'): (
            'newValue'
        ),
        ('debugger', 'set_variable_value', 'call_frame_id'): (
            'callFrameId'
        ),
        ('debugger', 'step_into', 'break_on_async_call'): (
            'breakOnAsyncCall'
        ),
        ('heap_profiler', 'add_inspected_heap_object', 'heap_object_id'): (
            'heapObjectId'
        ),
        ('heap_profiler', 'get_heap_object_id', 'object_id'): (
            'objectId'
        ),
        ('heap_profiler', 'get_object_by_heap_object_id', 'object_id'): (
            'objectId'
        ),
        ('heap_profiler', 'get_object_by_heap_object_id', 'object_group'): (
            'objectGroup'
        ),
        ('heap_profiler', 'start_sampling', 'sampling_interval'): (
            'samplingInterval'
        ),
        ('heap_profiler', 'start_tracking_heap_objects', 'track_allocations'): (
            'trackAllocations'
        ),
        ('heap_profiler', 'stop_tracking_heap_objects', 'report_progress'): (
            'reportProgress'
        ),
        ('heap_profiler', 'take_heap_snapshot', 'report_progress'): (
            'reportProgress'
        ),
        ('profiler', 'set_sampling_interval', 'interval'): (
            'interval'
        ),
        ('profiler', 'start_precise_coverage', 'call_count'): (
            'callCount'
        ),
        ('profiler', 'start_precise_coverage', 'detailed'): (
            'detailed'
        ),
        ('runtime', 'await_promise', 'promise_object_id'): (
            'promiseObjectId'
        ),
        ('runtime', 'await_promise', 'return_by_value'): (
            'returnByValue'
        ),
        ('runtime', 'await_promise', 'generate_preview'): (
            'generatePreview'
        ),
        ('runtime', 'call_function_on', 'function_declaration'): (
            'functionDeclaration'
        ),
        ('runtime', 'call_function_on', 'object_id'): (
            'objectId'
        ),
        ('runtime', 'call_function_on', 'arguments'): (
            'arguments'
        ),
        ('runtime', 'call_function_on', 'silent'): (
            'silent'
        ),
        ('runtime', 'call_function_on', 'return_by_value'): (
            'returnByValue'
        ),
        ('runtime', 'call_function_on', 'generate_preview'): (
            'generatePreview'
        ),
        ('runtime', 'call_function_on', 'user_gesture'): (
            'userGesture'
        ),
        ('runtime', 'call_function_on', 'await_promise'): (
            'awaitPromise'
        ),
        ('runtime', 'call_function_on', 'execution_context_id'): (
            'executionContextId'
        ),
        ('runtime', 'call_function_on', 'object_group'): (
            'objectGroup'
        ),
        ('runtime', 'compile_script', 'expression'): (
            'expression'
        ),
        ('runtime', 'compile_script', 'source_url'): (
            'sourceURL'
        ),
        ('runtime', 'compile_script', 'persist_script'): (
            'persistScript'
        ),
        ('runtime', 'compile_script', 'execution_context_id'): (
            'executionContextId'
        ),
        ('runtime', 'evaluate', 'expression'): (
            'expression'
        ),
        ('runtime', 'evaluate', 'object_group'): (
            'objectGroup'
        ),
        ('runtime', 'evaluate', 'include_command_line_api'): (
            'includeCommandLineAPI'
        ),
        ('runtime', 'evaluate', 'silent'): (
            'silent'
        ),
        ('runtime', 'evaluate', 'context_id'): (
            'contextId'
        ),
        ('runtime', 'evaluate', 'return_by_value'): (
            'returnByValue'
        ),
        ('runtime', 'evaluate', 'generate_preview'): (
            'generatePreview'
        ),
        ('runtime', 'evaluate', 'user_gesture'): (
            'userGesture'
        ),
        ('runtime', 'evaluate', 'await_promise'): (
            'awaitPromise'
        ),
        ('runtime', 'evaluate', 'throw_on_side_effect'): (
            'throwOnSideEffect'
        ),
        ('runtime', 'evaluate', 'timeout'): (
            'timeout'
        ),
        ('runtime', 'get_properties', 'object_id'): (
            'objectId'
        ),
        ('runtime', 'get_properties', 'own_properties'): (
            'ownProperties'
        ),
        ('runtime', 'get_properties', 'accessor_properties_only'): (
            'accessorPropertiesOnly'
        ),
        ('runtime', 'get_properties', 'generate_preview'): (
            'generatePreview'
        ),
        ('runtime', 'global_lexical_scope_names', 'execution_context_id'): (
            'executionContextId'
        ),
        ('runtime', 'query_objects', 'prototype_object_id'): (
            'prototypeObjectId'
        ),
        ('runtime', 'query_objects', 'object_group'): (
            'objectGroup'
        ),
        ('runtime', 'release_object', 'object_id'): (
            'objectId'
        ),
        ('runtime', 'release_object_group', 'object_group'): (
            'objectGroup'
        ),
        ('runtime', 'run_script', 'script_id'): (
            'scriptId'
        ),
        ('runtime', 'run_script', 'execution_context_id'): (
            'executionContextId'
        ),
        ('runtime', 'run_script', 'object_group'): (
            'objectGroup'
        ),
        ('runtime', 'run_script', 'silent'): (
            'silent'
        ),
        ('runtime', 'run_script', 'include_command_line_api'): (
            'includeCommandLineAPI'
        ),
        ('runtime', 'run_script', 'return_by_value'): (
            'returnByValue'
        ),
        ('runtime', 'run_script', 'generate_preview'): (
            'generatePreview'
        ),
        ('runtime', 'run_script', 'await_promise'): (
            'awaitPromise'
        ),
        ('runtime', 'set_async_call_stack_depth', 'max_depth'): (
            'maxDepth'
        ),
        ('runtime', 'set_custom_object_formatter_enabled', 'enabled'): (
            'enabled'
        ),
        ('runtime', 'set_max_call_stack_size_to_capture', 'size'): (
            'size'
        ),
        ('runtime', 'add_binding', 'name'): (
            'name'
        ),
        ('runtime', 'add_binding', 'execution_context_id'): (
            'executionContextId'
        ),
        ('runtime', 'remove_binding', 'name'): (
            'name'
        ),
    },
}


command_return_properties = {
    'camel:snake': {
        ('accessibility', 'getPartialAXTree', 'nodes'): (
            'nodes'
        ),
        ('accessibility', 'getFullAXTree', 'nodes'): (
            'nodes'
        ),
        ('accessibility', 'getRootAXNode', 'node'): (
            'node'
        ),
        ('accessibility', 'getAXNodeAndAncestors', 'nodes'): (
            'nodes'
        ),
        ('accessibility', 'getChildAXNodes', 'nodes'): (
            'nodes'
        ),
        ('accessibility', 'queryAXTree', 'nodes'): (
            'nodes'
        ),
        ('animation', 'getCurrentTime', 'currentTime'): (
            'current_time'
        ),
        ('animation', 'getPlaybackRate', 'playbackRate'): (
            'playback_rate'
        ),
        ('animation', 'resolveAnimation', 'remoteObject'): (
            'remote_object'
        ),
        ('audits', 'getEncodedResponse', 'body'): (
            'body'
        ),
        ('audits', 'getEncodedResponse', 'originalSize'): (
            'original_size'
        ),
        ('audits', 'getEncodedResponse', 'encodedSize'): (
            'encoded_size'
        ),
        ('audits', 'checkFormsIssues', 'formIssues'): (
            'form_issues'
        ),
        ('browser', 'getVersion', 'protocolVersion'): (
            'protocol_version'
        ),
        ('browser', 'getVersion', 'product'): (
            'product'
        ),
        ('browser', 'getVersion', 'revision'): (
            'revision'
        ),
        ('browser', 'getVersion', 'userAgent'): (
            'user_agent'
        ),
        ('browser', 'getVersion', 'jsVersion'): (
            'js_version'
        ),
        ('browser', 'getBrowserCommandLine', 'arguments'): (
            'arguments'
        ),
        ('browser', 'getHistograms', 'histograms'): (
            'histograms'
        ),
        ('browser', 'getHistogram', 'histogram'): (
            'histogram'
        ),
        ('browser', 'getWindowBounds', 'bounds'): (
            'bounds'
        ),
        ('browser', 'getWindowForTarget', 'windowId'): (
            'window_id'
        ),
        ('browser', 'getWindowForTarget', 'bounds'): (
            'bounds'
        ),
        ('cSS', 'addRule', 'rule'): (
            'rule'
        ),
        ('cSS', 'collectClassNames', 'classNames'): (
            'class_names'
        ),
        ('cSS', 'createStyleSheet', 'styleSheetId'): (
            'style_sheet_id'
        ),
        ('cSS', 'getBackgroundColors', 'backgroundColors'): (
            'background_colors'
        ),
        ('cSS', 'getBackgroundColors', 'computedFontSize'): (
            'computed_font_size'
        ),
        ('cSS', 'getBackgroundColors', 'computedFontWeight'): (
            'computed_font_weight'
        ),
        ('cSS', 'getComputedStyleForNode', 'computedStyle'): (
            'computed_style'
        ),
        ('cSS', 'getInlineStylesForNode', 'inlineStyle'): (
            'inline_style'
        ),
        ('cSS', 'getInlineStylesForNode', 'attributesStyle'): (
            'attributes_style'
        ),
        ('cSS', 'getMatchedStylesForNode', 'inlineStyle'): (
            'inline_style'
        ),
        ('cSS', 'getMatchedStylesForNode', 'attributesStyle'): (
            'attributes_style'
        ),
        ('cSS', 'getMatchedStylesForNode', 'matchedCSSRules'): (
            'matched_css_rules'
        ),
        ('cSS', 'getMatchedStylesForNode', 'pseudoElements'): (
            'pseudo_elements'
        ),
        ('cSS', 'getMatchedStylesForNode', 'inherited'): (
            'inherited'
        ),
        ('cSS', 'getMatchedStylesForNode', 'inheritedPseudoElements'): (
            'inherited_pseudo_elements'
        ),
        ('cSS', 'getMatchedStylesForNode', 'cssKeyframesRules'): (
            'css_keyframes_rules'
        ),
        ('cSS', 'getMatchedStylesForNode', 'cssPositionFallbackRules'): (
            'css_position_fallback_rules'
        ),
        ('cSS', 'getMatchedStylesForNode', 'cssPropertyRules'): (
            'css_property_rules'
        ),
        ('cSS', 'getMatchedStylesForNode', 'cssPropertyRegistrations'): (
            'css_property_registrations'
        ),
        ('cSS', 'getMatchedStylesForNode', 'parentLayoutNodeId'): (
            'parent_layout_node_id'
        ),
        ('cSS', 'getMediaQueries', 'medias'): (
            'medias'
        ),
        ('cSS', 'getPlatformFontsForNode', 'fonts'): (
            'fonts'
        ),
        ('cSS', 'getStyleSheetText', 'text'): (
            'text'
        ),
        ('cSS', 'getLayersForNode', 'rootLayer'): (
            'root_layer'
        ),
        ('cSS', 'takeComputedStyleUpdates', 'nodeIds'): (
            'node_ids'
        ),
        ('cSS', 'setKeyframeKey', 'keyText'): (
            'key_text'
        ),
        ('cSS', 'setMediaText', 'media'): (
            'media'
        ),
        ('cSS', 'setContainerQueryText', 'containerQuery'): (
            'container_query'
        ),
        ('cSS', 'setSupportsText', 'supports'): (
            'supports'
        ),
        ('cSS', 'setScopeText', 'scope'): (
            'scope'
        ),
        ('cSS', 'setRuleSelector', 'selectorList'): (
            'selector_list'
        ),
        ('cSS', 'setStyleSheetText', 'sourceMapURL'): (
            'source_map_url'
        ),
        ('cSS', 'setStyleTexts', 'styles'): (
            'styles'
        ),
        ('cSS', 'stopRuleUsageTracking', 'ruleUsage'): (
            'rule_usage'
        ),
        ('cSS', 'takeCoverageDelta', 'coverage'): (
            'coverage'
        ),
        ('cSS', 'takeCoverageDelta', 'timestamp'): (
            'timestamp'
        ),
        ('cacheStorage', 'requestCacheNames', 'caches'): (
            'caches'
        ),
        ('cacheStorage', 'requestCachedResponse', 'response'): (
            'response'
        ),
        ('cacheStorage', 'requestEntries', 'cacheDataEntries'): (
            'cache_data_entries'
        ),
        ('cacheStorage', 'requestEntries', 'returnCount'): (
            'return_count'
        ),
        ('dOM', 'collectClassNamesFromSubtree', 'classNames'): (
            'class_names'
        ),
        ('dOM', 'copyTo', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'describeNode', 'node'): (
            'node'
        ),
        ('dOM', 'getAttributes', 'attributes'): (
            'attributes'
        ),
        ('dOM', 'getBoxModel', 'model'): (
            'model'
        ),
        ('dOM', 'getContentQuads', 'quads'): (
            'quads'
        ),
        ('dOM', 'getDocument', 'root'): (
            'root'
        ),
        ('dOM', 'getFlattenedDocument', 'nodes'): (
            'nodes'
        ),
        ('dOM', 'getNodesForSubtreeByStyle', 'nodeIds'): (
            'node_ids'
        ),
        ('dOM', 'getNodeForLocation', 'backendNodeId'): (
            'backend_node_id'
        ),
        ('dOM', 'getNodeForLocation', 'frameId'): (
            'frame_id'
        ),
        ('dOM', 'getNodeForLocation', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'getOuterHTML', 'outerHTML'): (
            'outer_html'
        ),
        ('dOM', 'getRelayoutBoundary', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'getSearchResults', 'nodeIds'): (
            'node_ids'
        ),
        ('dOM', 'moveTo', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'performSearch', 'searchId'): (
            'search_id'
        ),
        ('dOM', 'performSearch', 'resultCount'): (
            'result_count'
        ),
        ('dOM', 'pushNodeByPathToFrontend', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'pushNodesByBackendIdsToFrontend', 'nodeIds'): (
            'node_ids'
        ),
        ('dOM', 'querySelector', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'querySelectorAll', 'nodeIds'): (
            'node_ids'
        ),
        ('dOM', 'getTopLayerElements', 'nodeIds'): (
            'node_ids'
        ),
        ('dOM', 'requestNode', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'resolveNode', 'object'): (
            'object'
        ),
        ('dOM', 'getNodeStackTraces', 'creation'): (
            'creation'
        ),
        ('dOM', 'getFileInfo', 'path'): (
            'path'
        ),
        ('dOM', 'setNodeName', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'getFrameOwner', 'backendNodeId'): (
            'backend_node_id'
        ),
        ('dOM', 'getFrameOwner', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'getContainerForNode', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'getQueryingDescendantsForContainer', 'nodeIds'): (
            'node_ids'
        ),
        ('dOMDebugger', 'getEventListeners', 'listeners'): (
            'listeners'
        ),
        ('dOMSnapshot', 'getSnapshot', 'domNodes'): (
            'dom_nodes'
        ),
        ('dOMSnapshot', 'getSnapshot', 'layoutTreeNodes'): (
            'layout_tree_nodes'
        ),
        ('dOMSnapshot', 'getSnapshot', 'computedStyles'): (
            'computed_styles'
        ),
        ('dOMSnapshot', 'captureSnapshot', 'documents'): (
            'documents'
        ),
        ('dOMSnapshot', 'captureSnapshot', 'strings'): (
            'strings'
        ),
        ('dOMStorage', 'getDOMStorageItems', 'entries'): (
            'entries'
        ),
        ('database', 'executeSQL', 'columnNames'): (
            'column_names'
        ),
        ('database', 'executeSQL', 'values'): (
            'values'
        ),
        ('database', 'executeSQL', 'sqlError'): (
            'sql_error'
        ),
        ('database', 'getDatabaseTableNames', 'tableNames'): (
            'table_names'
        ),
        ('emulation', 'canEmulate', 'result'): (
            'result'
        ),
        ('emulation', 'setVirtualTimePolicy', 'virtualTimeTicksBase'): (
            'virtual_time_ticks_base'
        ),
        ('headlessExperimental', 'beginFrame', 'hasDamage'): (
            'has_damage'
        ),
        ('headlessExperimental', 'beginFrame', 'screenshotData'): (
            'screenshot_data'
        ),
        ('iO', 'read', 'base64Encoded'): (
            'base64_encoded'
        ),
        ('iO', 'read', 'data'): (
            'data'
        ),
        ('iO', 'read', 'eof'): (
            'eof'
        ),
        ('iO', 'resolveBlob', 'uuid'): (
            'uuid'
        ),
        ('indexedDB', 'requestData', 'objectStoreDataEntries'): (
            'object_store_data_entries'
        ),
        ('indexedDB', 'requestData', 'hasMore'): (
            'has_more'
        ),
        ('indexedDB', 'getMetadata', 'entriesCount'): (
            'entries_count'
        ),
        ('indexedDB', 'getMetadata', 'keyGeneratorValue'): (
            'key_generator_value'
        ),
        ('indexedDB', 'requestDatabase', 'databaseWithObjectStores'): (
            'database_with_object_stores'
        ),
        ('indexedDB', 'requestDatabaseNames', 'databaseNames'): (
            'database_names'
        ),
        ('layerTree', 'compositingReasons', 'compositingReasons'): (
            'compositing_reasons'
        ),
        ('layerTree', 'compositingReasons', 'compositingReasonIds'): (
            'compositing_reason_ids'
        ),
        ('layerTree', 'loadSnapshot', 'snapshotId'): (
            'snapshot_id'
        ),
        ('layerTree', 'makeSnapshot', 'snapshotId'): (
            'snapshot_id'
        ),
        ('layerTree', 'profileSnapshot', 'timings'): (
            'timings'
        ),
        ('layerTree', 'replaySnapshot', 'dataURL'): (
            'data_url'
        ),
        ('layerTree', 'snapshotCommandLog', 'commandLog'): (
            'command_log'
        ),
        ('memory', 'getDOMCounters', 'documents'): (
            'documents'
        ),
        ('memory', 'getDOMCounters', 'nodes'): (
            'nodes'
        ),
        ('memory', 'getDOMCounters', 'jsEventListeners'): (
            'js_event_listeners'
        ),
        ('memory', 'getAllTimeSamplingProfile', 'profile'): (
            'profile'
        ),
        ('memory', 'getBrowserSamplingProfile', 'profile'): (
            'profile'
        ),
        ('memory', 'getSamplingProfile', 'profile'): (
            'profile'
        ),
        ('network', 'canClearBrowserCache', 'result'): (
            'result'
        ),
        ('network', 'canClearBrowserCookies', 'result'): (
            'result'
        ),
        ('network', 'canEmulateNetworkConditions', 'result'): (
            'result'
        ),
        ('network', 'getAllCookies', 'cookies'): (
            'cookies'
        ),
        ('network', 'getCertificate', 'tableNames'): (
            'table_names'
        ),
        ('network', 'getCookies', 'cookies'): (
            'cookies'
        ),
        ('network', 'getResponseBody', 'body'): (
            'body'
        ),
        ('network', 'getResponseBody', 'base64Encoded'): (
            'base64_encoded'
        ),
        ('network', 'getRequestPostData', 'postData'): (
            'post_data'
        ),
        ('network', 'getResponseBodyForInterception', 'body'): (
            'body'
        ),
        ('network', 'getResponseBodyForInterception', 'base64Encoded'): (
            'base64_encoded'
        ),
        ('network', 'takeResponseBodyForInterceptionAsStream', 'stream'): (
            'stream'
        ),
        ('network', 'searchInResponseBody', 'result'): (
            'result'
        ),
        ('network', 'setCookie', 'success'): (
            'success'
        ),
        ('network', 'getSecurityIsolationStatus', 'status'): (
            'status'
        ),
        ('network', 'loadNetworkResource', 'resource'): (
            'resource'
        ),
        ('overlay', 'getHighlightObjectForTest', 'highlight'): (
            'highlight'
        ),
        ('overlay', 'getGridHighlightObjectsForTest', 'highlights'): (
            'highlights'
        ),
        ('overlay', 'getSourceOrderHighlightObjectForTest', 'highlight'): (
            'highlight'
        ),
        ('page', 'addScriptToEvaluateOnLoad', 'identifier'): (
            'identifier'
        ),
        ('page', 'addScriptToEvaluateOnNewDocument', 'identifier'): (
            'identifier'
        ),
        ('page', 'captureScreenshot', 'data'): (
            'data'
        ),
        ('page', 'captureSnapshot', 'data'): (
            'data'
        ),
        ('page', 'createIsolatedWorld', 'executionContextId'): (
            'execution_context_id'
        ),
        ('page', 'getAppManifest', 'url'): (
            'url'
        ),
        ('page', 'getAppManifest', 'errors'): (
            'errors'
        ),
        ('page', 'getAppManifest', 'data'): (
            'data'
        ),
        ('page', 'getAppManifest', 'parsed'): (
            'parsed'
        ),
        ('page', 'getInstallabilityErrors', 'installabilityErrors'): (
            'installability_errors'
        ),
        ('page', 'getManifestIcons', 'primaryIcon'): (
            'primary_icon'
        ),
        ('page', 'getAppId', 'appId'): (
            'app_id'
        ),
        ('page', 'getAppId', 'recommendedId'): (
            'recommended_id'
        ),
        ('page', 'getAdScriptId', 'adScriptId'): (
            'ad_script_id'
        ),
        ('page', 'getCookies', 'cookies'): (
            'cookies'
        ),
        ('page', 'getFrameTree', 'frameTree'): (
            'frame_tree'
        ),
        ('page', 'getLayoutMetrics', 'layoutViewport'): (
            'layout_viewport'
        ),
        ('page', 'getLayoutMetrics', 'visualViewport'): (
            'visual_viewport'
        ),
        ('page', 'getLayoutMetrics', 'contentSize'): (
            'content_size'
        ),
        ('page', 'getLayoutMetrics', 'cssLayoutViewport'): (
            'css_layout_viewport'
        ),
        ('page', 'getLayoutMetrics', 'cssVisualViewport'): (
            'css_visual_viewport'
        ),
        ('page', 'getLayoutMetrics', 'cssContentSize'): (
            'css_content_size'
        ),
        ('page', 'getNavigationHistory', 'currentIndex'): (
            'current_index'
        ),
        ('page', 'getNavigationHistory', 'entries'): (
            'entries'
        ),
        ('page', 'getResourceContent', 'content'): (
            'content'
        ),
        ('page', 'getResourceContent', 'base64Encoded'): (
            'base64_encoded'
        ),
        ('page', 'getResourceTree', 'frameTree'): (
            'frame_tree'
        ),
        ('page', 'navigate', 'frameId'): (
            'frame_id'
        ),
        ('page', 'navigate', 'loaderId'): (
            'loader_id'
        ),
        ('page', 'navigate', 'errorText'): (
            'error_text'
        ),
        ('page', 'printToPDF', 'data'): (
            'data'
        ),
        ('page', 'printToPDF', 'stream'): (
            'stream'
        ),
        ('page', 'searchInResource', 'result'): (
            'result'
        ),
        ('page', 'getPermissionsPolicyState', 'states'): (
            'states'
        ),
        ('page', 'getOriginTrials', 'originTrials'): (
            'origin_trials'
        ),
        ('performance', 'getMetrics', 'metrics'): (
            'metrics'
        ),
        ('storage', 'getStorageKeyForFrame', 'storageKey'): (
            'storage_key'
        ),
        ('storage', 'getCookies', 'cookies'): (
            'cookies'
        ),
        ('storage', 'getUsageAndQuota', 'usage'): (
            'usage'
        ),
        ('storage', 'getUsageAndQuota', 'quota'): (
            'quota'
        ),
        ('storage', 'getUsageAndQuota', 'overrideActive'): (
            'override_active'
        ),
        ('storage', 'getUsageAndQuota', 'usageBreakdown'): (
            'usage_breakdown'
        ),
        ('storage', 'getTrustTokens', 'tokens'): (
            'tokens'
        ),
        ('storage', 'clearTrustTokens', 'didDeleteTokens'): (
            'did_delete_tokens'
        ),
        ('storage', 'getInterestGroupDetails', 'details'): (
            'details'
        ),
        ('storage', 'getSharedStorageMetadata', 'metadata'): (
            'metadata'
        ),
        ('storage', 'getSharedStorageEntries', 'entries'): (
            'entries'
        ),
        ('storage', 'runBounceTrackingMitigations', 'deletedSites'): (
            'deleted_sites'
        ),
        ('systemInfo', 'getInfo', 'gpu'): (
            'gpu'
        ),
        ('systemInfo', 'getInfo', 'modelName'): (
            'model_name'
        ),
        ('systemInfo', 'getInfo', 'modelVersion'): (
            'model_version'
        ),
        ('systemInfo', 'getInfo', 'commandLine'): (
            'command_line'
        ),
        ('systemInfo', 'getFeatureState', 'featureEnabled'): (
            'feature_enabled'
        ),
        ('systemInfo', 'getProcessInfo', 'processInfo'): (
            'process_info'
        ),
        ('target', 'attachToTarget', 'sessionId'): (
            'session_id'
        ),
        ('target', 'attachToBrowserTarget', 'sessionId'): (
            'session_id'
        ),
        ('target', 'closeTarget', 'success'): (
            'success'
        ),
        ('target', 'createBrowserContext', 'browserContextId'): (
            'browser_context_id'
        ),
        ('target', 'getBrowserContexts', 'browserContextIds'): (
            'browser_context_ids'
        ),
        ('target', 'createTarget', 'targetId'): (
            'target_id'
        ),
        ('target', 'getTargetInfo', 'targetInfo'): (
            'target_info'
        ),
        ('target', 'getTargets', 'targetInfos'): (
            'target_infos'
        ),
        ('tracing', 'getCategories', 'categories'): (
            'categories'
        ),
        ('tracing', 'requestMemoryDump', 'dumpGuid'): (
            'dump_guid'
        ),
        ('tracing', 'requestMemoryDump', 'success'): (
            'success'
        ),
        ('fetch', 'getResponseBody', 'body'): (
            'body'
        ),
        ('fetch', 'getResponseBody', 'base64Encoded'): (
            'base64_encoded'
        ),
        ('fetch', 'takeResponseBodyAsStream', 'stream'): (
            'stream'
        ),
        ('webAudio', 'getRealtimeData', 'realtimeData'): (
            'realtime_data'
        ),
        ('webAuthn', 'addVirtualAuthenticator', 'authenticatorId'): (
            'authenticator_id'
        ),
        ('webAuthn', 'getCredential', 'credential'): (
            'credential'
        ),
        ('webAuthn', 'getCredentials', 'credentials'): (
            'credentials'
        ),
        ('debugger', 'enable', 'debuggerId'): (
            'debugger_id'
        ),
        ('debugger', 'evaluateOnCallFrame', 'result'): (
            'result'
        ),
        ('debugger', 'evaluateOnCallFrame', 'exceptionDetails'): (
            'exception_details'
        ),
        ('debugger', 'getPossibleBreakpoints', 'locations'): (
            'locations'
        ),
        ('debugger', 'getScriptSource', 'scriptSource'): (
            'script_source'
        ),
        ('debugger', 'getStackTrace', 'stackTrace'): (
            'stack_trace'
        ),
        ('debugger', 'restartFrame', 'callFrames'): (
            'call_frames'
        ),
        ('debugger', 'restartFrame', 'asyncStackTrace'): (
            'async_stack_trace'
        ),
        ('debugger', 'restartFrame', 'asyncStackTraceId'): (
            'async_stack_trace_id'
        ),
        ('debugger', 'searchInContent', 'result'): (
            'result'
        ),
        ('debugger', 'setBreakpoint', 'breakpointId'): (
            'breakpoint_id'
        ),
        ('debugger', 'setBreakpoint', 'actualLocation'): (
            'actual_location'
        ),
        ('debugger', 'setInstrumentationBreakpoint', 'breakpointId'): (
            'breakpoint_id'
        ),
        ('debugger', 'setBreakpointByUrl', 'breakpointId'): (
            'breakpoint_id'
        ),
        ('debugger', 'setBreakpointByUrl', 'locations'): (
            'locations'
        ),
        ('debugger', 'setBreakpointOnFunctionCall', 'breakpointId'): (
            'breakpoint_id'
        ),
        ('debugger', 'setScriptSource', 'callFrames'): (
            'call_frames'
        ),
        ('debugger', 'setScriptSource', 'stackChanged'): (
            'stack_changed'
        ),
        ('debugger', 'setScriptSource', 'asyncStackTrace'): (
            'async_stack_trace'
        ),
        ('debugger', 'setScriptSource', 'asyncStackTraceId'): (
            'async_stack_trace_id'
        ),
        ('debugger', 'setScriptSource', 'exceptionDetails'): (
            'exception_details'
        ),
        ('heapProfiler', 'getHeapObjectId', 'heapSnapshotObjectId'): (
            'heap_snapshot_object_id'
        ),
        ('heapProfiler', 'getObjectByHeapObjectId', 'result'): (
            'result'
        ),
        ('heapProfiler', 'getSamplingProfile', 'profile'): (
            'profile'
        ),
        ('heapProfiler', 'stopSampling', 'profile'): (
            'profile'
        ),
        ('profiler', 'getBestEffortCoverage', 'result'): (
            'result'
        ),
        ('profiler', 'stop', 'profile'): (
            'profile'
        ),
        ('profiler', 'takePreciseCoverage', 'result'): (
            'result'
        ),
        ('profiler', 'takeTypeProfile', 'result'): (
            'result'
        ),
        ('runtime', 'awaitPromise', 'result'): (
            'result'
        ),
        ('runtime', 'awaitPromise', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'callFunctionOn', 'result'): (
            'result'
        ),
        ('runtime', 'callFunctionOn', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'compileScript', 'scriptId'): (
            'script_id'
        ),
        ('runtime', 'compileScript', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'evaluate', 'result'): (
            'result'
        ),
        ('runtime', 'evaluate', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'getIsolateId', 'id'): (
            'id'
        ),
        ('runtime', 'getHeapUsage', 'usedSize'): (
            'used_size'
        ),
        ('runtime', 'getHeapUsage', 'totalSize'): (
            'total_size'
        ),
        ('runtime', 'getProperties', 'result'): (
            'result'
        ),
        ('runtime', 'getProperties', 'internalProperties'): (
            'internal_properties'
        ),
        ('runtime', 'getProperties', 'privateProperties'): (
            'private_properties'
        ),
        ('runtime', 'getProperties', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'globalLexicalScopeNames', 'names'): (
            'names'
        ),
        ('runtime', 'queryObjects', 'objects'): (
            'objects'
        ),
        ('runtime', 'runScript', 'result'): (
            'result'
        ),
        ('runtime', 'runScript', 'exceptionDetails'): (
            'exception_details'
        ),
        ('schema', 'getDomains', 'domains'): (
            'domains'
        ),
    },
}


event_names = {
    'camel:snake': {
        ('accessibility', 'loadComplete'): (
            'load_complete'
        ),
        ('accessibility', 'nodesUpdated'): (
            'nodes_updated'
        ),
        ('animation', 'animationCanceled'): (
            'animation_canceled'
        ),
        ('animation', 'animationCreated'): (
            'animation_created'
        ),
        ('animation', 'animationStarted'): (
            'animation_started'
        ),
        ('audits', 'issueAdded'): (
            'issue_added'
        ),
        ('autofill', 'addressFormFilled'): (
            'address_form_filled'
        ),
        ('backgroundService', 'recordingStateChanged'): (
            'recording_state_changed'
        ),
        ('backgroundService', 'backgroundServiceEventReceived'): (
            'background_service_event_received'
        ),
        ('browser', 'downloadWillBegin'): (
            'download_will_begin'
        ),
        ('browser', 'downloadProgress'): (
            'download_progress'
        ),
        ('cSS', 'fontsUpdated'): (
            'fonts_updated'
        ),
        ('cSS', 'mediaQueryResultChanged'): (
            'media_query_result_changed'
        ),
        ('cSS', 'styleSheetAdded'): (
            'style_sheet_added'
        ),
        ('cSS', 'styleSheetChanged'): (
            'style_sheet_changed'
        ),
        ('cSS', 'styleSheetRemoved'): (
            'style_sheet_removed'
        ),
        ('cast', 'sinksUpdated'): (
            'sinks_updated'
        ),
        ('cast', 'issueUpdated'): (
            'issue_updated'
        ),
        ('dOM', 'attributeModified'): (
            'attribute_modified'
        ),
        ('dOM', 'attributeRemoved'): (
            'attribute_removed'
        ),
        ('dOM', 'characterDataModified'): (
            'character_data_modified'
        ),
        ('dOM', 'childNodeCountUpdated'): (
            'child_node_count_updated'
        ),
        ('dOM', 'childNodeInserted'): (
            'child_node_inserted'
        ),
        ('dOM', 'childNodeRemoved'): (
            'child_node_removed'
        ),
        ('dOM', 'distributedNodesUpdated'): (
            'distributed_nodes_updated'
        ),
        ('dOM', 'documentUpdated'): (
            'document_updated'
        ),
        ('dOM', 'inlineStyleInvalidated'): (
            'inline_style_invalidated'
        ),
        ('dOM', 'pseudoElementAdded'): (
            'pseudo_element_added'
        ),
        ('dOM', 'topLayerElementsUpdated'): (
            'top_layer_elements_updated'
        ),
        ('dOM', 'pseudoElementRemoved'): (
            'pseudo_element_removed'
        ),
        ('dOM', 'setChildNodes'): (
            'set_child_nodes'
        ),
        ('dOM', 'shadowRootPopped'): (
            'shadow_root_popped'
        ),
        ('dOM', 'shadowRootPushed'): (
            'shadow_root_pushed'
        ),
        ('dOMStorage', 'domStorageItemAdded'): (
            'dom_storage_item_added'
        ),
        ('dOMStorage', 'domStorageItemRemoved'): (
            'dom_storage_item_removed'
        ),
        ('dOMStorage', 'domStorageItemUpdated'): (
            'dom_storage_item_updated'
        ),
        ('dOMStorage', 'domStorageItemsCleared'): (
            'dom_storage_items_cleared'
        ),
        ('database', 'addDatabase'): (
            'add_database'
        ),
        ('emulation', 'virtualTimeBudgetExpired'): (
            'virtual_time_budget_expired'
        ),
        ('input', 'dragIntercepted'): (
            'drag_intercepted'
        ),
        ('inspector', 'detached'): (
            'detached'
        ),
        ('inspector', 'targetCrashed'): (
            'target_crashed'
        ),
        ('inspector', 'targetReloadedAfterCrash'): (
            'target_reloaded_after_crash'
        ),
        ('layerTree', 'layerPainted'): (
            'layer_painted'
        ),
        ('layerTree', 'layerTreeDidChange'): (
            'layer_tree_did_change'
        ),
        ('log', 'entryAdded'): (
            'entry_added'
        ),
        ('network', 'dataReceived'): (
            'data_received'
        ),
        ('network', 'eventSourceMessageReceived'): (
            'event_source_message_received'
        ),
        ('network', 'loadingFailed'): (
            'loading_failed'
        ),
        ('network', 'loadingFinished'): (
            'loading_finished'
        ),
        ('network', 'requestIntercepted'): (
            'request_intercepted'
        ),
        ('network', 'requestServedFromCache'): (
            'request_served_from_cache'
        ),
        ('network', 'requestWillBeSent'): (
            'request_will_be_sent'
        ),
        ('network', 'resourceChangedPriority'): (
            'resource_changed_priority'
        ),
        ('network', 'signedExchangeReceived'): (
            'signed_exchange_received'
        ),
        ('network', 'responseReceived'): (
            'response_received'
        ),
        ('network', 'webSocketClosed'): (
            'web_socket_closed'
        ),
        ('network', 'webSocketCreated'): (
            'web_socket_created'
        ),
        ('network', 'webSocketFrameError'): (
            'web_socket_frame_error'
        ),
        ('network', 'webSocketFrameReceived'): (
            'web_socket_frame_received'
        ),
        ('network', 'webSocketFrameSent'): (
            'web_socket_frame_sent'
        ),
        ('network', 'webSocketHandshakeResponseReceived'): (
            'web_socket_handshake_response_received'
        ),
        ('network', 'webSocketWillSendHandshakeRequest'): (
            'web_socket_will_send_handshake_request'
        ),
        ('network', 'webTransportCreated'): (
            'web_transport_created'
        ),
        ('network', 'webTransportConnectionEstablished'): (
            'web_transport_connection_established'
        ),
        ('network', 'webTransportClosed'): (
            'web_transport_closed'
        ),
        ('network', 'requestWillBeSentExtraInfo'): (
            'request_will_be_sent_extra_info'
        ),
        ('network', 'responseReceivedExtraInfo'): (
            'response_received_extra_info'
        ),
        ('network', 'trustTokenOperationDone'): (
            'trust_token_operation_done'
        ),
        ('network', 'subresourceWebBundleMetadataReceived'): (
            'subresource_web_bundle_metadata_received'
        ),
        ('network', 'subresourceWebBundleMetadataError'): (
            'subresource_web_bundle_metadata_error'
        ),
        ('network', 'subresourceWebBundleInnerResponseParsed'): (
            'subresource_web_bundle_inner_response_parsed'
        ),
        ('network', 'subresourceWebBundleInnerResponseError'): (
            'subresource_web_bundle_inner_response_error'
        ),
        ('network', 'reportingApiReportAdded'): (
            'reporting_api_report_added'
        ),
        ('network', 'reportingApiReportUpdated'): (
            'reporting_api_report_updated'
        ),
        ('network', 'reportingApiEndpointsChangedForOrigin'): (
            'reporting_api_endpoints_changed_for_origin'
        ),
        ('overlay', 'inspectNodeRequested'): (
            'inspect_node_requested'
        ),
        ('overlay', 'nodeHighlightRequested'): (
            'node_highlight_requested'
        ),
        ('overlay', 'screenshotRequested'): (
            'screenshot_requested'
        ),
        ('overlay', 'inspectModeCanceled'): (
            'inspect_mode_canceled'
        ),
        ('page', 'domContentEventFired'): (
            'dom_content_event_fired'
        ),
        ('page', 'fileChooserOpened'): (
            'file_chooser_opened'
        ),
        ('page', 'frameAttached'): (
            'frame_attached'
        ),
        ('page', 'frameClearedScheduledNavigation'): (
            'frame_cleared_scheduled_navigation'
        ),
        ('page', 'frameDetached'): (
            'frame_detached'
        ),
        ('page', 'frameNavigated'): (
            'frame_navigated'
        ),
        ('page', 'documentOpened'): (
            'document_opened'
        ),
        ('page', 'frameResized'): (
            'frame_resized'
        ),
        ('page', 'frameRequestedNavigation'): (
            'frame_requested_navigation'
        ),
        ('page', 'frameScheduledNavigation'): (
            'frame_scheduled_navigation'
        ),
        ('page', 'frameStartedLoading'): (
            'frame_started_loading'
        ),
        ('page', 'frameStoppedLoading'): (
            'frame_stopped_loading'
        ),
        ('page', 'downloadWillBegin'): (
            'download_will_begin'
        ),
        ('page', 'downloadProgress'): (
            'download_progress'
        ),
        ('page', 'interstitialHidden'): (
            'interstitial_hidden'
        ),
        ('page', 'interstitialShown'): (
            'interstitial_shown'
        ),
        ('page', 'javascriptDialogClosed'): (
            'javascript_dialog_closed'
        ),
        ('page', 'javascriptDialogOpening'): (
            'javascript_dialog_opening'
        ),
        ('page', 'lifecycleEvent'): (
            'lifecycle_event'
        ),
        ('page', 'backForwardCacheNotUsed'): (
            'back_forward_cache_not_used'
        ),
        ('page', 'loadEventFired'): (
            'load_event_fired'
        ),
        ('page', 'navigatedWithinDocument'): (
            'navigated_within_document'
        ),
        ('page', 'screencastFrame'): (
            'screencast_frame'
        ),
        ('page', 'screencastVisibilityChanged'): (
            'screencast_visibility_changed'
        ),
        ('page', 'windowOpen'): (
            'window_open'
        ),
        ('page', 'compilationCacheProduced'): (
            'compilation_cache_produced'
        ),
        ('performance', 'metrics'): (
            'metrics'
        ),
        ('performanceTimeline', 'timelineEventAdded'): (
            'timeline_event_added'
        ),
        ('security', 'certificateError'): (
            'certificate_error'
        ),
        ('security', 'visibleSecurityStateChanged'): (
            'visible_security_state_changed'
        ),
        ('security', 'securityStateChanged'): (
            'security_state_changed'
        ),
        ('serviceWorker', 'workerErrorReported'): (
            'worker_error_reported'
        ),
        ('serviceWorker', 'workerRegistrationUpdated'): (
            'worker_registration_updated'
        ),
        ('serviceWorker', 'workerVersionUpdated'): (
            'worker_version_updated'
        ),
        ('storage', 'cacheStorageContentUpdated'): (
            'cache_storage_content_updated'
        ),
        ('storage', 'cacheStorageListUpdated'): (
            'cache_storage_list_updated'
        ),
        ('storage', 'indexedDBContentUpdated'): (
            'indexed_db_content_updated'
        ),
        ('storage', 'indexedDBListUpdated'): (
            'indexed_db_list_updated'
        ),
        ('storage', 'interestGroupAccessed'): (
            'interest_group_accessed'
        ),
        ('storage', 'sharedStorageAccessed'): (
            'shared_storage_accessed'
        ),
        ('storage', 'storageBucketCreatedOrUpdated'): (
            'storage_bucket_created_or_updated'
        ),
        ('storage', 'storageBucketDeleted'): (
            'storage_bucket_deleted'
        ),
        ('storage', 'attributionReportingSourceRegistered'): (
            'attribution_reporting_source_registered'
        ),
        ('target', 'attachedToTarget'): (
            'attached_to_target'
        ),
        ('target', 'detachedFromTarget'): (
            'detached_from_target'
        ),
        ('target', 'receivedMessageFromTarget'): (
            'received_message_from_target'
        ),
        ('target', 'targetCreated'): (
            'target_created'
        ),
        ('target', 'targetDestroyed'): (
            'target_destroyed'
        ),
        ('target', 'targetCrashed'): (
            'target_crashed'
        ),
        ('target', 'targetInfoChanged'): (
            'target_info_changed'
        ),
        ('tethering', 'accepted'): (
            'accepted'
        ),
        ('tracing', 'bufferUsage'): (
            'buffer_usage'
        ),
        ('tracing', 'dataCollected'): (
            'data_collected'
        ),
        ('tracing', 'tracingComplete'): (
            'tracing_complete'
        ),
        ('fetch', 'requestPaused'): (
            'request_paused'
        ),
        ('fetch', 'authRequired'): (
            'auth_required'
        ),
        ('webAudio', 'contextCreated'): (
            'context_created'
        ),
        ('webAudio', 'contextWillBeDestroyed'): (
            'context_will_be_destroyed'
        ),
        ('webAudio', 'contextChanged'): (
            'context_changed'
        ),
        ('webAudio', 'audioListenerCreated'): (
            'audio_listener_created'
        ),
        ('webAudio', 'audioListenerWillBeDestroyed'): (
            'audio_listener_will_be_destroyed'
        ),
        ('webAudio', 'audioNodeCreated'): (
            'audio_node_created'
        ),
        ('webAudio', 'audioNodeWillBeDestroyed'): (
            'audio_node_will_be_destroyed'
        ),
        ('webAudio', 'audioParamCreated'): (
            'audio_param_created'
        ),
        ('webAudio', 'audioParamWillBeDestroyed'): (
            'audio_param_will_be_destroyed'
        ),
        ('webAudio', 'nodesConnected'): (
            'nodes_connected'
        ),
        ('webAudio', 'nodesDisconnected'): (
            'nodes_disconnected'
        ),
        ('webAudio', 'nodeParamConnected'): (
            'node_param_connected'
        ),
        ('webAudio', 'nodeParamDisconnected'): (
            'node_param_disconnected'
        ),
        ('webAuthn', 'credentialAdded'): (
            'credential_added'
        ),
        ('webAuthn', 'credentialAsserted'): (
            'credential_asserted'
        ),
        ('media', 'playerPropertiesChanged'): (
            'player_properties_changed'
        ),
        ('media', 'playerEventsAdded'): (
            'player_events_added'
        ),
        ('media', 'playerMessagesLogged'): (
            'player_messages_logged'
        ),
        ('media', 'playerErrorsRaised'): (
            'player_errors_raised'
        ),
        ('media', 'playersCreated'): (
            'players_created'
        ),
        ('deviceAccess', 'deviceRequestPrompted'): (
            'device_request_prompted'
        ),
        ('preload', 'ruleSetUpdated'): (
            'rule_set_updated'
        ),
        ('preload', 'ruleSetRemoved'): (
            'rule_set_removed'
        ),
        ('preload', 'prerenderAttemptCompleted'): (
            'prerender_attempt_completed'
        ),
        ('preload', 'preloadEnabledStateUpdated'): (
            'preload_enabled_state_updated'
        ),
        ('preload', 'prefetchStatusUpdated'): (
            'prefetch_status_updated'
        ),
        ('preload', 'prerenderStatusUpdated'): (
            'prerender_status_updated'
        ),
        ('preload', 'preloadingAttemptSourcesUpdated'): (
            'preloading_attempt_sources_updated'
        ),
        ('fedCm', 'dialogShown'): (
            'dialog_shown'
        ),
        ('console', 'messageAdded'): (
            'message_added'
        ),
        ('debugger', 'breakpointResolved'): (
            'breakpoint_resolved'
        ),
        ('debugger', 'paused'): (
            'paused'
        ),
        ('debugger', 'resumed'): (
            'resumed'
        ),
        ('debugger', 'scriptFailedToParse'): (
            'script_failed_to_parse'
        ),
        ('debugger', 'scriptParsed'): (
            'script_parsed'
        ),
        ('heapProfiler', 'addHeapSnapshotChunk'): (
            'add_heap_snapshot_chunk'
        ),
        ('heapProfiler', 'heapStatsUpdate'): (
            'heap_stats_update'
        ),
        ('heapProfiler', 'lastSeenObjectId'): (
            'last_seen_object_id'
        ),
        ('heapProfiler', 'reportHeapSnapshotProgress'): (
            'report_heap_snapshot_progress'
        ),
        ('heapProfiler', 'resetProfiles'): (
            'reset_profiles'
        ),
        ('profiler', 'consoleProfileFinished'): (
            'console_profile_finished'
        ),
        ('profiler', 'consoleProfileStarted'): (
            'console_profile_started'
        ),
        ('runtime', 'bindingCalled'): (
            'binding_called'
        ),
        ('runtime', 'consoleAPICalled'): (
            'console_api_called'
        ),
        ('runtime', 'exceptionRevoked'): (
            'exception_revoked'
        ),
        ('runtime', 'exceptionThrown'): (
            'exception_thrown'
        ),
        ('runtime', 'executionContextCreated'): (
            'execution_context_created'
        ),
        ('runtime', 'executionContextDestroyed'): (
            'execution_context_destroyed'
        ),
        ('runtime', 'executionContextsCleared'): (
            'execution_contexts_cleared'
        ),
        ('runtime', 'inspectRequested'): (
            'inspect_requested'
        ),
    },
    'snake:camel': {
        ('accessibility', 'load_complete'): (
            'loadComplete'
        ),
        ('accessibility', 'nodes_updated'): (
            'nodesUpdated'
        ),
        ('animation', 'animation_canceled'): (
            'animationCanceled'
        ),
        ('animation', 'animation_created'): (
            'animationCreated'
        ),
        ('animation', 'animation_started'): (
            'animationStarted'
        ),
        ('audits', 'issue_added'): (
            'issueAdded'
        ),
        ('autofill', 'address_form_filled'): (
            'addressFormFilled'
        ),
        ('background_service', 'recording_state_changed'): (
            'recordingStateChanged'
        ),
        ('background_service', 'background_service_event_received'): (
            'backgroundServiceEventReceived'
        ),
        ('browser', 'download_will_begin'): (
            'downloadWillBegin'
        ),
        ('browser', 'download_progress'): (
            'downloadProgress'
        ),
        ('css', 'fonts_updated'): (
            'fontsUpdated'
        ),
        ('css', 'media_query_result_changed'): (
            'mediaQueryResultChanged'
        ),
        ('css', 'style_sheet_added'): (
            'styleSheetAdded'
        ),
        ('css', 'style_sheet_changed'): (
            'styleSheetChanged'
        ),
        ('css', 'style_sheet_removed'): (
            'styleSheetRemoved'
        ),
        ('cast', 'sinks_updated'): (
            'sinksUpdated'
        ),
        ('cast', 'issue_updated'): (
            'issueUpdated'
        ),
        ('dom', 'attribute_modified'): (
            'attributeModified'
        ),
        ('dom', 'attribute_removed'): (
            'attributeRemoved'
        ),
        ('dom', 'character_data_modified'): (
            'characterDataModified'
        ),
        ('dom', 'child_node_count_updated'): (
            'childNodeCountUpdated'
        ),
        ('dom', 'child_node_inserted'): (
            'childNodeInserted'
        ),
        ('dom', 'child_node_removed'): (
            'childNodeRemoved'
        ),
        ('dom', 'distributed_nodes_updated'): (
            'distributedNodesUpdated'
        ),
        ('dom', 'document_updated'): (
            'documentUpdated'
        ),
        ('dom', 'inline_style_invalidated'): (
            'inlineStyleInvalidated'
        ),
        ('dom', 'pseudo_element_added'): (
            'pseudoElementAdded'
        ),
        ('dom', 'top_layer_elements_updated'): (
            'topLayerElementsUpdated'
        ),
        ('dom', 'pseudo_element_removed'): (
            'pseudoElementRemoved'
        ),
        ('dom', 'set_child_nodes'): (
            'setChildNodes'
        ),
        ('dom', 'shadow_root_popped'): (
            'shadowRootPopped'
        ),
        ('dom', 'shadow_root_pushed'): (
            'shadowRootPushed'
        ),
        ('dom_storage', 'dom_storage_item_added'): (
            'domStorageItemAdded'
        ),
        ('dom_storage', 'dom_storage_item_removed'): (
            'domStorageItemRemoved'
        ),
        ('dom_storage', 'dom_storage_item_updated'): (
            'domStorageItemUpdated'
        ),
        ('dom_storage', 'dom_storage_items_cleared'): (
            'domStorageItemsCleared'
        ),
        ('database', 'add_database'): (
            'addDatabase'
        ),
        ('emulation', 'virtual_time_budget_expired'): (
            'virtualTimeBudgetExpired'
        ),
        ('input', 'drag_intercepted'): (
            'dragIntercepted'
        ),
        ('inspector', 'detached'): (
            'detached'
        ),
        ('inspector', 'target_crashed'): (
            'targetCrashed'
        ),
        ('inspector', 'target_reloaded_after_crash'): (
            'targetReloadedAfterCrash'
        ),
        ('layer_tree', 'layer_painted'): (
            'layerPainted'
        ),
        ('layer_tree', 'layer_tree_did_change'): (
            'layerTreeDidChange'
        ),
        ('log', 'entry_added'): (
            'entryAdded'
        ),
        ('network', 'data_received'): (
            'dataReceived'
        ),
        ('network', 'event_source_message_received'): (
            'eventSourceMessageReceived'
        ),
        ('network', 'loading_failed'): (
            'loadingFailed'
        ),
        ('network', 'loading_finished'): (
            'loadingFinished'
        ),
        ('network', 'request_intercepted'): (
            'requestIntercepted'
        ),
        ('network', 'request_served_from_cache'): (
            'requestServedFromCache'
        ),
        ('network', 'request_will_be_sent'): (
            'requestWillBeSent'
        ),
        ('network', 'resource_changed_priority'): (
            'resourceChangedPriority'
        ),
        ('network', 'signed_exchange_received'): (
            'signedExchangeReceived'
        ),
        ('network', 'response_received'): (
            'responseReceived'
        ),
        ('network', 'web_socket_closed'): (
            'webSocketClosed'
        ),
        ('network', 'web_socket_created'): (
            'webSocketCreated'
        ),
        ('network', 'web_socket_frame_error'): (
            'webSocketFrameError'
        ),
        ('network', 'web_socket_frame_received'): (
            'webSocketFrameReceived'
        ),
        ('network', 'web_socket_frame_sent'): (
            'webSocketFrameSent'
        ),
        ('network', 'web_socket_handshake_response_received'): (
            'webSocketHandshakeResponseReceived'
        ),
        ('network', 'web_socket_will_send_handshake_request'): (
            'webSocketWillSendHandshakeRequest'
        ),
        ('network', 'web_transport_created'): (
            'webTransportCreated'
        ),
        ('network', 'web_transport_connection_established'): (
            'webTransportConnectionEstablished'
        ),
        ('network', 'web_transport_closed'): (
            'webTransportClosed'
        ),
        ('network', 'request_will_be_sent_extra_info'): (
            'requestWillBeSentExtraInfo'
        ),
        ('network', 'response_received_extra_info'): (
            'responseReceivedExtraInfo'
        ),
        ('network', 'trust_token_operation_done'): (
            'trustTokenOperationDone'
        ),
        ('network', 'subresource_web_bundle_metadata_received'): (
            'subresourceWebBundleMetadataReceived'
        ),
        ('network', 'subresource_web_bundle_metadata_error'): (
            'subresourceWebBundleMetadataError'
        ),
        ('network', 'subresource_web_bundle_inner_response_parsed'): (
            'subresourceWebBundleInnerResponseParsed'
        ),
        ('network', 'subresource_web_bundle_inner_response_error'): (
            'subresourceWebBundleInnerResponseError'
        ),
        ('network', 'reporting_api_report_added'): (
            'reportingApiReportAdded'
        ),
        ('network', 'reporting_api_report_updated'): (
            'reportingApiReportUpdated'
        ),
        ('network', 'reporting_api_endpoints_changed_for_origin'): (
            'reportingApiEndpointsChangedForOrigin'
        ),
        ('overlay', 'inspect_node_requested'): (
            'inspectNodeRequested'
        ),
        ('overlay', 'node_highlight_requested'): (
            'nodeHighlightRequested'
        ),
        ('overlay', 'screenshot_requested'): (
            'screenshotRequested'
        ),
        ('overlay', 'inspect_mode_canceled'): (
            'inspectModeCanceled'
        ),
        ('page', 'dom_content_event_fired'): (
            'domContentEventFired'
        ),
        ('page', 'file_chooser_opened'): (
            'fileChooserOpened'
        ),
        ('page', 'frame_attached'): (
            'frameAttached'
        ),
        ('page', 'frame_cleared_scheduled_navigation'): (
            'frameClearedScheduledNavigation'
        ),
        ('page', 'frame_detached'): (
            'frameDetached'
        ),
        ('page', 'frame_navigated'): (
            'frameNavigated'
        ),
        ('page', 'document_opened'): (
            'documentOpened'
        ),
        ('page', 'frame_resized'): (
            'frameResized'
        ),
        ('page', 'frame_requested_navigation'): (
            'frameRequestedNavigation'
        ),
        ('page', 'frame_scheduled_navigation'): (
            'frameScheduledNavigation'
        ),
        ('page', 'frame_started_loading'): (
            'frameStartedLoading'
        ),
        ('page', 'frame_stopped_loading'): (
            'frameStoppedLoading'
        ),
        ('page', 'download_will_begin'): (
            'downloadWillBegin'
        ),
        ('page', 'download_progress'): (
            'downloadProgress'
        ),
        ('page', 'interstitial_hidden'): (
            'interstitialHidden'
        ),
        ('page', 'interstitial_shown'): (
            'interstitialShown'
        ),
        ('page', 'javascript_dialog_closed'): (
            'javascriptDialogClosed'
        ),
        ('page', 'javascript_dialog_opening'): (
            'javascriptDialogOpening'
        ),
        ('page', 'lifecycle_event'): (
            'lifecycleEvent'
        ),
        ('page', 'back_forward_cache_not_used'): (
            'backForwardCacheNotUsed'
        ),
        ('page', 'load_event_fired'): (
            'loadEventFired'
        ),
        ('page', 'navigated_within_document'): (
            'navigatedWithinDocument'
        ),
        ('page', 'screencast_frame'): (
            'screencastFrame'
        ),
        ('page', 'screencast_visibility_changed'): (
            'screencastVisibilityChanged'
        ),
        ('page', 'window_open'): (
            'windowOpen'
        ),
        ('page', 'compilation_cache_produced'): (
            'compilationCacheProduced'
        ),
        ('performance', 'metrics'): (
            'metrics'
        ),
        ('performance_timeline', 'timeline_event_added'): (
            'timelineEventAdded'
        ),
        ('security', 'certificate_error'): (
            'certificateError'
        ),
        ('security', 'visible_security_state_changed'): (
            'visibleSecurityStateChanged'
        ),
        ('security', 'security_state_changed'): (
            'securityStateChanged'
        ),
        ('service_worker', 'worker_error_reported'): (
            'workerErrorReported'
        ),
        ('service_worker', 'worker_registration_updated'): (
            'workerRegistrationUpdated'
        ),
        ('service_worker', 'worker_version_updated'): (
            'workerVersionUpdated'
        ),
        ('storage', 'cache_storage_content_updated'): (
            'cacheStorageContentUpdated'
        ),
        ('storage', 'cache_storage_list_updated'): (
            'cacheStorageListUpdated'
        ),
        ('storage', 'indexed_db_content_updated'): (
            'indexedDBContentUpdated'
        ),
        ('storage', 'indexed_db_list_updated'): (
            'indexedDBListUpdated'
        ),
        ('storage', 'interest_group_accessed'): (
            'interestGroupAccessed'
        ),
        ('storage', 'shared_storage_accessed'): (
            'sharedStorageAccessed'
        ),
        ('storage', 'storage_bucket_created_or_updated'): (
            'storageBucketCreatedOrUpdated'
        ),
        ('storage', 'storage_bucket_deleted'): (
            'storageBucketDeleted'
        ),
        ('storage', 'attribution_reporting_source_registered'): (
            'attributionReportingSourceRegistered'
        ),
        ('target', 'attached_to_target'): (
            'attachedToTarget'
        ),
        ('target', 'detached_from_target'): (
            'detachedFromTarget'
        ),
        ('target', 'received_message_from_target'): (
            'receivedMessageFromTarget'
        ),
        ('target', 'target_created'): (
            'targetCreated'
        ),
        ('target', 'target_destroyed'): (
            'targetDestroyed'
        ),
        ('target', 'target_crashed'): (
            'targetCrashed'
        ),
        ('target', 'target_info_changed'): (
            'targetInfoChanged'
        ),
        ('tethering', 'accepted'): (
            'accepted'
        ),
        ('tracing', 'buffer_usage'): (
            'bufferUsage'
        ),
        ('tracing', 'data_collected'): (
            'dataCollected'
        ),
        ('tracing', 'tracing_complete'): (
            'tracingComplete'
        ),
        ('fetch', 'request_paused'): (
            'requestPaused'
        ),
        ('fetch', 'auth_required'): (
            'authRequired'
        ),
        ('web_audio', 'context_created'): (
            'contextCreated'
        ),
        ('web_audio', 'context_will_be_destroyed'): (
            'contextWillBeDestroyed'
        ),
        ('web_audio', 'context_changed'): (
            'contextChanged'
        ),
        ('web_audio', 'audio_listener_created'): (
            'audioListenerCreated'
        ),
        ('web_audio', 'audio_listener_will_be_destroyed'): (
            'audioListenerWillBeDestroyed'
        ),
        ('web_audio', 'audio_node_created'): (
            'audioNodeCreated'
        ),
        ('web_audio', 'audio_node_will_be_destroyed'): (
            'audioNodeWillBeDestroyed'
        ),
        ('web_audio', 'audio_param_created'): (
            'audioParamCreated'
        ),
        ('web_audio', 'audio_param_will_be_destroyed'): (
            'audioParamWillBeDestroyed'
        ),
        ('web_audio', 'nodes_connected'): (
            'nodesConnected'
        ),
        ('web_audio', 'nodes_disconnected'): (
            'nodesDisconnected'
        ),
        ('web_audio', 'node_param_connected'): (
            'nodeParamConnected'
        ),
        ('web_audio', 'node_param_disconnected'): (
            'nodeParamDisconnected'
        ),
        ('web_authn', 'credential_added'): (
            'credentialAdded'
        ),
        ('web_authn', 'credential_asserted'): (
            'credentialAsserted'
        ),
        ('media', 'player_properties_changed'): (
            'playerPropertiesChanged'
        ),
        ('media', 'player_events_added'): (
            'playerEventsAdded'
        ),
        ('media', 'player_messages_logged'): (
            'playerMessagesLogged'
        ),
        ('media', 'player_errors_raised'): (
            'playerErrorsRaised'
        ),
        ('media', 'players_created'): (
            'playersCreated'
        ),
        ('device_access', 'device_request_prompted'): (
            'deviceRequestPrompted'
        ),
        ('preload', 'rule_set_updated'): (
            'ruleSetUpdated'
        ),
        ('preload', 'rule_set_removed'): (
            'ruleSetRemoved'
        ),
        ('preload', 'prerender_attempt_completed'): (
            'prerenderAttemptCompleted'
        ),
        ('preload', 'preload_enabled_state_updated'): (
            'preloadEnabledStateUpdated'
        ),
        ('preload', 'prefetch_status_updated'): (
            'prefetchStatusUpdated'
        ),
        ('preload', 'prerender_status_updated'): (
            'prerenderStatusUpdated'
        ),
        ('preload', 'preloading_attempt_sources_updated'): (
            'preloadingAttemptSourcesUpdated'
        ),
        ('fed_cm', 'dialog_shown'): (
            'dialogShown'
        ),
        ('console', 'message_added'): (
            'messageAdded'
        ),
        ('debugger', 'breakpoint_resolved'): (
            'breakpointResolved'
        ),
        ('debugger', 'paused'): (
            'paused'
        ),
        ('debugger', 'resumed'): (
            'resumed'
        ),
        ('debugger', 'script_failed_to_parse'): (
            'scriptFailedToParse'
        ),
        ('debugger', 'script_parsed'): (
            'scriptParsed'
        ),
        ('heap_profiler', 'add_heap_snapshot_chunk'): (
            'addHeapSnapshotChunk'
        ),
        ('heap_profiler', 'heap_stats_update'): (
            'heapStatsUpdate'
        ),
        ('heap_profiler', 'last_seen_object_id'): (
            'lastSeenObjectId'
        ),
        ('heap_profiler', 'report_heap_snapshot_progress'): (
            'reportHeapSnapshotProgress'
        ),
        ('heap_profiler', 'reset_profiles'): (
            'resetProfiles'
        ),
        ('profiler', 'console_profile_finished'): (
            'consoleProfileFinished'
        ),
        ('profiler', 'console_profile_started'): (
            'consoleProfileStarted'
        ),
        ('runtime', 'binding_called'): (
            'bindingCalled'
        ),
        ('runtime', 'console_api_called'): (
            'consoleAPICalled'
        ),
        ('runtime', 'exception_revoked'): (
            'exceptionRevoked'
        ),
        ('runtime', 'exception_thrown'): (
            'exceptionThrown'
        ),
        ('runtime', 'execution_context_created'): (
            'executionContextCreated'
        ),
        ('runtime', 'execution_context_destroyed'): (
            'executionContextDestroyed'
        ),
        ('runtime', 'execution_contexts_cleared'): (
            'executionContextsCleared'
        ),
        ('runtime', 'inspect_requested'): (
            'inspectRequested'
        ),
    },
}


event_params_properties = {
    'camel:snake': {
        ('accessibility', 'loadComplete', 'root'): (
            'root'
        ),
        ('accessibility', 'nodesUpdated', 'nodes'): (
            'nodes'
        ),
        ('animation', 'animationCanceled', 'id'): (
            'id'
        ),
        ('animation', 'animationCreated', 'id'): (
            'id'
        ),
        ('animation', 'animationStarted', 'animation'): (
            'animation'
        ),
        ('audits', 'issueAdded', 'issue'): (
            'issue'
        ),
        ('autofill', 'addressFormFilled', 'filledFields'): (
            'filled_fields'
        ),
        ('autofill', 'addressFormFilled', 'addressUi'): (
            'address_ui'
        ),
        ('backgroundService', 'recordingStateChanged', 'isRecording'): (
            'is_recording'
        ),
        ('backgroundService', 'recordingStateChanged', 'service'): (
            'service'
        ),
        ('backgroundService', 'backgroundServiceEventReceived', 'backgroundServiceEvent'): (
            'background_service_event'
        ),
        ('browser', 'downloadWillBegin', 'frameId'): (
            'frame_id'
        ),
        ('browser', 'downloadWillBegin', 'guid'): (
            'guid'
        ),
        ('browser', 'downloadWillBegin', 'url'): (
            'url'
        ),
        ('browser', 'downloadWillBegin', 'suggestedFilename'): (
            'suggested_filename'
        ),
        ('browser', 'downloadProgress', 'guid'): (
            'guid'
        ),
        ('browser', 'downloadProgress', 'totalBytes'): (
            'total_bytes'
        ),
        ('browser', 'downloadProgress', 'receivedBytes'): (
            'received_bytes'
        ),
        ('browser', 'downloadProgress', 'state'): (
            'state'
        ),
        ('cSS', 'fontsUpdated', 'font'): (
            'font'
        ),
        ('cSS', 'styleSheetAdded', 'header'): (
            'header'
        ),
        ('cSS', 'styleSheetChanged', 'styleSheetId'): (
            'style_sheet_id'
        ),
        ('cSS', 'styleSheetRemoved', 'styleSheetId'): (
            'style_sheet_id'
        ),
        ('cast', 'sinksUpdated', 'sinks'): (
            'sinks'
        ),
        ('cast', 'issueUpdated', 'issueMessage'): (
            'issue_message'
        ),
        ('dOM', 'attributeModified', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'attributeModified', 'name'): (
            'name'
        ),
        ('dOM', 'attributeModified', 'value'): (
            'value'
        ),
        ('dOM', 'attributeRemoved', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'attributeRemoved', 'name'): (
            'name'
        ),
        ('dOM', 'characterDataModified', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'characterDataModified', 'characterData'): (
            'character_data'
        ),
        ('dOM', 'childNodeCountUpdated', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'childNodeCountUpdated', 'childNodeCount'): (
            'child_node_count'
        ),
        ('dOM', 'childNodeInserted', 'parentNodeId'): (
            'parent_node_id'
        ),
        ('dOM', 'childNodeInserted', 'previousNodeId'): (
            'previous_node_id'
        ),
        ('dOM', 'childNodeInserted', 'node'): (
            'node'
        ),
        ('dOM', 'childNodeRemoved', 'parentNodeId'): (
            'parent_node_id'
        ),
        ('dOM', 'childNodeRemoved', 'nodeId'): (
            'node_id'
        ),
        ('dOM', 'distributedNodesUpdated', 'insertionPointId'): (
            'insertion_point_id'
        ),
        ('dOM', 'distributedNodesUpdated', 'distributedNodes'): (
            'distributed_nodes'
        ),
        ('dOM', 'inlineStyleInvalidated', 'nodeIds'): (
            'node_ids'
        ),
        ('dOM', 'pseudoElementAdded', 'parentId'): (
            'parent_id'
        ),
        ('dOM', 'pseudoElementAdded', 'pseudoElement'): (
            'pseudo_element'
        ),
        ('dOM', 'pseudoElementRemoved', 'parentId'): (
            'parent_id'
        ),
        ('dOM', 'pseudoElementRemoved', 'pseudoElementId'): (
            'pseudo_element_id'
        ),
        ('dOM', 'setChildNodes', 'parentId'): (
            'parent_id'
        ),
        ('dOM', 'setChildNodes', 'nodes'): (
            'nodes'
        ),
        ('dOM', 'shadowRootPopped', 'hostId'): (
            'host_id'
        ),
        ('dOM', 'shadowRootPopped', 'rootId'): (
            'root_id'
        ),
        ('dOM', 'shadowRootPushed', 'hostId'): (
            'host_id'
        ),
        ('dOM', 'shadowRootPushed', 'root'): (
            'root'
        ),
        ('dOMStorage', 'domStorageItemAdded', 'storageId'): (
            'storage_id'
        ),
        ('dOMStorage', 'domStorageItemAdded', 'key'): (
            'key'
        ),
        ('dOMStorage', 'domStorageItemAdded', 'newValue'): (
            'new_value'
        ),
        ('dOMStorage', 'domStorageItemRemoved', 'storageId'): (
            'storage_id'
        ),
        ('dOMStorage', 'domStorageItemRemoved', 'key'): (
            'key'
        ),
        ('dOMStorage', 'domStorageItemUpdated', 'storageId'): (
            'storage_id'
        ),
        ('dOMStorage', 'domStorageItemUpdated', 'key'): (
            'key'
        ),
        ('dOMStorage', 'domStorageItemUpdated', 'oldValue'): (
            'old_value'
        ),
        ('dOMStorage', 'domStorageItemUpdated', 'newValue'): (
            'new_value'
        ),
        ('dOMStorage', 'domStorageItemsCleared', 'storageId'): (
            'storage_id'
        ),
        ('database', 'addDatabase', 'database'): (
            'database'
        ),
        ('input', 'dragIntercepted', 'data'): (
            'data'
        ),
        ('inspector', 'detached', 'reason'): (
            'reason'
        ),
        ('layerTree', 'layerPainted', 'layerId'): (
            'layer_id'
        ),
        ('layerTree', 'layerPainted', 'clip'): (
            'clip'
        ),
        ('layerTree', 'layerTreeDidChange', 'layers'): (
            'layers'
        ),
        ('log', 'entryAdded', 'entry'): (
            'entry'
        ),
        ('network', 'dataReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'dataReceived', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'dataReceived', 'dataLength'): (
            'data_length'
        ),
        ('network', 'dataReceived', 'encodedDataLength'): (
            'encoded_data_length'
        ),
        ('network', 'eventSourceMessageReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'eventSourceMessageReceived', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'eventSourceMessageReceived', 'eventName'): (
            'event_name'
        ),
        ('network', 'eventSourceMessageReceived', 'eventId'): (
            'event_id'
        ),
        ('network', 'eventSourceMessageReceived', 'data'): (
            'data'
        ),
        ('network', 'loadingFailed', 'requestId'): (
            'request_id'
        ),
        ('network', 'loadingFailed', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'loadingFailed', 'type'): (
            'type'
        ),
        ('network', 'loadingFailed', 'errorText'): (
            'error_text'
        ),
        ('network', 'loadingFailed', 'canceled'): (
            'canceled'
        ),
        ('network', 'loadingFailed', 'blockedReason'): (
            'blocked_reason'
        ),
        ('network', 'loadingFailed', 'corsErrorStatus'): (
            'cors_error_status'
        ),
        ('network', 'loadingFinished', 'requestId'): (
            'request_id'
        ),
        ('network', 'loadingFinished', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'loadingFinished', 'encodedDataLength'): (
            'encoded_data_length'
        ),
        ('network', 'requestIntercepted', 'interceptionId'): (
            'interception_id'
        ),
        ('network', 'requestIntercepted', 'request'): (
            'request'
        ),
        ('network', 'requestIntercepted', 'frameId'): (
            'frame_id'
        ),
        ('network', 'requestIntercepted', 'resourceType'): (
            'resource_type'
        ),
        ('network', 'requestIntercepted', 'isNavigationRequest'): (
            'is_navigation_request'
        ),
        ('network', 'requestIntercepted', 'isDownload'): (
            'is_download'
        ),
        ('network', 'requestIntercepted', 'redirectUrl'): (
            'redirect_url'
        ),
        ('network', 'requestIntercepted', 'authChallenge'): (
            'auth_challenge'
        ),
        ('network', 'requestIntercepted', 'responseErrorReason'): (
            'response_error_reason'
        ),
        ('network', 'requestIntercepted', 'responseStatusCode'): (
            'response_status_code'
        ),
        ('network', 'requestIntercepted', 'responseHeaders'): (
            'response_headers'
        ),
        ('network', 'requestIntercepted', 'requestId'): (
            'request_id'
        ),
        ('network', 'requestServedFromCache', 'requestId'): (
            'request_id'
        ),
        ('network', 'requestWillBeSent', 'requestId'): (
            'request_id'
        ),
        ('network', 'requestWillBeSent', 'loaderId'): (
            'loader_id'
        ),
        ('network', 'requestWillBeSent', 'documentURL'): (
            'document_url'
        ),
        ('network', 'requestWillBeSent', 'request'): (
            'request'
        ),
        ('network', 'requestWillBeSent', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'requestWillBeSent', 'wallTime'): (
            'wall_time'
        ),
        ('network', 'requestWillBeSent', 'initiator'): (
            'initiator'
        ),
        ('network', 'requestWillBeSent', 'redirectHasExtraInfo'): (
            'redirect_has_extra_info'
        ),
        ('network', 'requestWillBeSent', 'redirectResponse'): (
            'redirect_response'
        ),
        ('network', 'requestWillBeSent', 'type'): (
            'type'
        ),
        ('network', 'requestWillBeSent', 'frameId'): (
            'frame_id'
        ),
        ('network', 'requestWillBeSent', 'hasUserGesture'): (
            'has_user_gesture'
        ),
        ('network', 'resourceChangedPriority', 'requestId'): (
            'request_id'
        ),
        ('network', 'resourceChangedPriority', 'newPriority'): (
            'new_priority'
        ),
        ('network', 'resourceChangedPriority', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'signedExchangeReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'signedExchangeReceived', 'info'): (
            'info'
        ),
        ('network', 'responseReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'responseReceived', 'loaderId'): (
            'loader_id'
        ),
        ('network', 'responseReceived', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'responseReceived', 'type'): (
            'type'
        ),
        ('network', 'responseReceived', 'response'): (
            'response'
        ),
        ('network', 'responseReceived', 'hasExtraInfo'): (
            'has_extra_info'
        ),
        ('network', 'responseReceived', 'frameId'): (
            'frame_id'
        ),
        ('network', 'webSocketClosed', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketClosed', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webSocketCreated', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketCreated', 'url'): (
            'url'
        ),
        ('network', 'webSocketCreated', 'initiator'): (
            'initiator'
        ),
        ('network', 'webSocketFrameError', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketFrameError', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webSocketFrameError', 'errorMessage'): (
            'error_message'
        ),
        ('network', 'webSocketFrameReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketFrameReceived', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webSocketFrameReceived', 'response'): (
            'response'
        ),
        ('network', 'webSocketFrameSent', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketFrameSent', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webSocketFrameSent', 'response'): (
            'response'
        ),
        ('network', 'webSocketHandshakeResponseReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketHandshakeResponseReceived', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webSocketHandshakeResponseReceived', 'response'): (
            'response'
        ),
        ('network', 'webSocketWillSendHandshakeRequest', 'requestId'): (
            'request_id'
        ),
        ('network', 'webSocketWillSendHandshakeRequest', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webSocketWillSendHandshakeRequest', 'wallTime'): (
            'wall_time'
        ),
        ('network', 'webSocketWillSendHandshakeRequest', 'request'): (
            'request'
        ),
        ('network', 'webTransportCreated', 'transportId'): (
            'transport_id'
        ),
        ('network', 'webTransportCreated', 'url'): (
            'url'
        ),
        ('network', 'webTransportCreated', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webTransportCreated', 'initiator'): (
            'initiator'
        ),
        ('network', 'webTransportConnectionEstablished', 'transportId'): (
            'transport_id'
        ),
        ('network', 'webTransportConnectionEstablished', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'webTransportClosed', 'transportId'): (
            'transport_id'
        ),
        ('network', 'webTransportClosed', 'timestamp'): (
            'timestamp'
        ),
        ('network', 'requestWillBeSentExtraInfo', 'requestId'): (
            'request_id'
        ),
        ('network', 'requestWillBeSentExtraInfo', 'associatedCookies'): (
            'associated_cookies'
        ),
        ('network', 'requestWillBeSentExtraInfo', 'headers'): (
            'headers'
        ),
        ('network', 'requestWillBeSentExtraInfo', 'connectTiming'): (
            'connect_timing'
        ),
        ('network', 'requestWillBeSentExtraInfo', 'clientSecurityState'): (
            'client_security_state'
        ),
        ('network', 'requestWillBeSentExtraInfo', 'siteHasCookieInOtherPartition'): (
            'site_has_cookie_in_other_partition'
        ),
        ('network', 'responseReceivedExtraInfo', 'requestId'): (
            'request_id'
        ),
        ('network', 'responseReceivedExtraInfo', 'blockedCookies'): (
            'blocked_cookies'
        ),
        ('network', 'responseReceivedExtraInfo', 'headers'): (
            'headers'
        ),
        ('network', 'responseReceivedExtraInfo', 'resourceIPAddressSpace'): (
            'resource_ip_address_space'
        ),
        ('network', 'responseReceivedExtraInfo', 'statusCode'): (
            'status_code'
        ),
        ('network', 'responseReceivedExtraInfo', 'headersText'): (
            'headers_text'
        ),
        ('network', 'responseReceivedExtraInfo', 'cookiePartitionKey'): (
            'cookie_partition_key'
        ),
        ('network', 'responseReceivedExtraInfo', 'cookiePartitionKeyOpaque'): (
            'cookie_partition_key_opaque'
        ),
        ('network', 'trustTokenOperationDone', 'status'): (
            'status'
        ),
        ('network', 'trustTokenOperationDone', 'type'): (
            'type'
        ),
        ('network', 'trustTokenOperationDone', 'requestId'): (
            'request_id'
        ),
        ('network', 'trustTokenOperationDone', 'topLevelOrigin'): (
            'top_level_origin'
        ),
        ('network', 'trustTokenOperationDone', 'issuerOrigin'): (
            'issuer_origin'
        ),
        ('network', 'trustTokenOperationDone', 'issuedTokenCount'): (
            'issued_token_count'
        ),
        ('network', 'subresourceWebBundleMetadataReceived', 'requestId'): (
            'request_id'
        ),
        ('network', 'subresourceWebBundleMetadataReceived', 'urls'): (
            'urls'
        ),
        ('network', 'subresourceWebBundleMetadataError', 'requestId'): (
            'request_id'
        ),
        ('network', 'subresourceWebBundleMetadataError', 'errorMessage'): (
            'error_message'
        ),
        ('network', 'subresourceWebBundleInnerResponseParsed', 'innerRequestId'): (
            'inner_request_id'
        ),
        ('network', 'subresourceWebBundleInnerResponseParsed', 'innerRequestURL'): (
            'inner_request_url'
        ),
        ('network', 'subresourceWebBundleInnerResponseParsed', 'bundleRequestId'): (
            'bundle_request_id'
        ),
        ('network', 'subresourceWebBundleInnerResponseError', 'innerRequestId'): (
            'inner_request_id'
        ),
        ('network', 'subresourceWebBundleInnerResponseError', 'innerRequestURL'): (
            'inner_request_url'
        ),
        ('network', 'subresourceWebBundleInnerResponseError', 'errorMessage'): (
            'error_message'
        ),
        ('network', 'subresourceWebBundleInnerResponseError', 'bundleRequestId'): (
            'bundle_request_id'
        ),
        ('network', 'reportingApiReportAdded', 'report'): (
            'report'
        ),
        ('network', 'reportingApiReportUpdated', 'report'): (
            'report'
        ),
        ('network', 'reportingApiEndpointsChangedForOrigin', 'origin'): (
            'origin'
        ),
        ('network', 'reportingApiEndpointsChangedForOrigin', 'endpoints'): (
            'endpoints'
        ),
        ('overlay', 'inspectNodeRequested', 'backendNodeId'): (
            'backend_node_id'
        ),
        ('overlay', 'nodeHighlightRequested', 'nodeId'): (
            'node_id'
        ),
        ('overlay', 'screenshotRequested', 'viewport'): (
            'viewport'
        ),
        ('page', 'domContentEventFired', 'timestamp'): (
            'timestamp'
        ),
        ('page', 'fileChooserOpened', 'frameId'): (
            'frame_id'
        ),
        ('page', 'fileChooserOpened', 'mode'): (
            'mode'
        ),
        ('page', 'fileChooserOpened', 'backendNodeId'): (
            'backend_node_id'
        ),
        ('page', 'frameAttached', 'frameId'): (
            'frame_id'
        ),
        ('page', 'frameAttached', 'parentFrameId'): (
            'parent_frame_id'
        ),
        ('page', 'frameAttached', 'stack'): (
            'stack'
        ),
        ('page', 'frameClearedScheduledNavigation', 'frameId'): (
            'frame_id'
        ),
        ('page', 'frameDetached', 'frameId'): (
            'frame_id'
        ),
        ('page', 'frameDetached', 'reason'): (
            'reason'
        ),
        ('page', 'frameNavigated', 'frame'): (
            'frame'
        ),
        ('page', 'frameNavigated', 'type'): (
            'type'
        ),
        ('page', 'documentOpened', 'frame'): (
            'frame'
        ),
        ('page', 'frameRequestedNavigation', 'frameId'): (
            'frame_id'
        ),
        ('page', 'frameRequestedNavigation', 'reason'): (
            'reason'
        ),
        ('page', 'frameRequestedNavigation', 'url'): (
            'url'
        ),
        ('page', 'frameRequestedNavigation', 'disposition'): (
            'disposition'
        ),
        ('page', 'frameScheduledNavigation', 'frameId'): (
            'frame_id'
        ),
        ('page', 'frameScheduledNavigation', 'delay'): (
            'delay'
        ),
        ('page', 'frameScheduledNavigation', 'reason'): (
            'reason'
        ),
        ('page', 'frameScheduledNavigation', 'url'): (
            'url'
        ),
        ('page', 'frameStartedLoading', 'frameId'): (
            'frame_id'
        ),
        ('page', 'frameStoppedLoading', 'frameId'): (
            'frame_id'
        ),
        ('page', 'downloadWillBegin', 'frameId'): (
            'frame_id'
        ),
        ('page', 'downloadWillBegin', 'guid'): (
            'guid'
        ),
        ('page', 'downloadWillBegin', 'url'): (
            'url'
        ),
        ('page', 'downloadWillBegin', 'suggestedFilename'): (
            'suggested_filename'
        ),
        ('page', 'downloadProgress', 'guid'): (
            'guid'
        ),
        ('page', 'downloadProgress', 'totalBytes'): (
            'total_bytes'
        ),
        ('page', 'downloadProgress', 'receivedBytes'): (
            'received_bytes'
        ),
        ('page', 'downloadProgress', 'state'): (
            'state'
        ),
        ('page', 'javascriptDialogClosed', 'result'): (
            'result'
        ),
        ('page', 'javascriptDialogClosed', 'userInput'): (
            'user_input'
        ),
        ('page', 'javascriptDialogOpening', 'url'): (
            'url'
        ),
        ('page', 'javascriptDialogOpening', 'message'): (
            'message'
        ),
        ('page', 'javascriptDialogOpening', 'type'): (
            'type'
        ),
        ('page', 'javascriptDialogOpening', 'hasBrowserHandler'): (
            'has_browser_handler'
        ),
        ('page', 'javascriptDialogOpening', 'defaultPrompt'): (
            'default_prompt'
        ),
        ('page', 'lifecycleEvent', 'frameId'): (
            'frame_id'
        ),
        ('page', 'lifecycleEvent', 'loaderId'): (
            'loader_id'
        ),
        ('page', 'lifecycleEvent', 'name'): (
            'name'
        ),
        ('page', 'lifecycleEvent', 'timestamp'): (
            'timestamp'
        ),
        ('page', 'backForwardCacheNotUsed', 'loaderId'): (
            'loader_id'
        ),
        ('page', 'backForwardCacheNotUsed', 'frameId'): (
            'frame_id'
        ),
        ('page', 'backForwardCacheNotUsed', 'notRestoredExplanations'): (
            'not_restored_explanations'
        ),
        ('page', 'backForwardCacheNotUsed', 'notRestoredExplanationsTree'): (
            'not_restored_explanations_tree'
        ),
        ('page', 'loadEventFired', 'timestamp'): (
            'timestamp'
        ),
        ('page', 'navigatedWithinDocument', 'frameId'): (
            'frame_id'
        ),
        ('page', 'navigatedWithinDocument', 'url'): (
            'url'
        ),
        ('page', 'screencastFrame', 'data'): (
            'data'
        ),
        ('page', 'screencastFrame', 'metadata'): (
            'metadata'
        ),
        ('page', 'screencastFrame', 'sessionId'): (
            'session_id'
        ),
        ('page', 'screencastVisibilityChanged', 'visible'): (
            'visible'
        ),
        ('page', 'windowOpen', 'url'): (
            'url'
        ),
        ('page', 'windowOpen', 'windowName'): (
            'window_name'
        ),
        ('page', 'windowOpen', 'windowFeatures'): (
            'window_features'
        ),
        ('page', 'windowOpen', 'userGesture'): (
            'user_gesture'
        ),
        ('page', 'compilationCacheProduced', 'url'): (
            'url'
        ),
        ('page', 'compilationCacheProduced', 'data'): (
            'data'
        ),
        ('performance', 'metrics', 'metrics'): (
            'metrics'
        ),
        ('performance', 'metrics', 'title'): (
            'title'
        ),
        ('performanceTimeline', 'timelineEventAdded', 'event'): (
            'event'
        ),
        ('security', 'certificateError', 'eventId'): (
            'event_id'
        ),
        ('security', 'certificateError', 'errorType'): (
            'error_type'
        ),
        ('security', 'certificateError', 'requestURL'): (
            'request_url'
        ),
        ('security', 'visibleSecurityStateChanged', 'visibleSecurityState'): (
            'visible_security_state'
        ),
        ('security', 'securityStateChanged', 'securityState'): (
            'security_state'
        ),
        ('security', 'securityStateChanged', 'schemeIsCryptographic'): (
            'scheme_is_cryptographic'
        ),
        ('security', 'securityStateChanged', 'explanations'): (
            'explanations'
        ),
        ('security', 'securityStateChanged', 'insecureContentStatus'): (
            'insecure_content_status'
        ),
        ('security', 'securityStateChanged', 'summary'): (
            'summary'
        ),
        ('serviceWorker', 'workerErrorReported', 'errorMessage'): (
            'error_message'
        ),
        ('serviceWorker', 'workerRegistrationUpdated', 'registrations'): (
            'registrations'
        ),
        ('serviceWorker', 'workerVersionUpdated', 'versions'): (
            'versions'
        ),
        ('storage', 'cacheStorageContentUpdated', 'origin'): (
            'origin'
        ),
        ('storage', 'cacheStorageContentUpdated', 'storageKey'): (
            'storage_key'
        ),
        ('storage', 'cacheStorageContentUpdated', 'bucketId'): (
            'bucket_id'
        ),
        ('storage', 'cacheStorageContentUpdated', 'cacheName'): (
            'cache_name'
        ),
        ('storage', 'cacheStorageListUpdated', 'origin'): (
            'origin'
        ),
        ('storage', 'cacheStorageListUpdated', 'storageKey'): (
            'storage_key'
        ),
        ('storage', 'cacheStorageListUpdated', 'bucketId'): (
            'bucket_id'
        ),
        ('storage', 'indexedDBContentUpdated', 'origin'): (
            'origin'
        ),
        ('storage', 'indexedDBContentUpdated', 'storageKey'): (
            'storage_key'
        ),
        ('storage', 'indexedDBContentUpdated', 'bucketId'): (
            'bucket_id'
        ),
        ('storage', 'indexedDBContentUpdated', 'databaseName'): (
            'database_name'
        ),
        ('storage', 'indexedDBContentUpdated', 'objectStoreName'): (
            'object_store_name'
        ),
        ('storage', 'indexedDBListUpdated', 'origin'): (
            'origin'
        ),
        ('storage', 'indexedDBListUpdated', 'storageKey'): (
            'storage_key'
        ),
        ('storage', 'indexedDBListUpdated', 'bucketId'): (
            'bucket_id'
        ),
        ('storage', 'interestGroupAccessed', 'accessTime'): (
            'access_time'
        ),
        ('storage', 'interestGroupAccessed', 'type'): (
            'type'
        ),
        ('storage', 'interestGroupAccessed', 'ownerOrigin'): (
            'owner_origin'
        ),
        ('storage', 'interestGroupAccessed', 'name'): (
            'name'
        ),
        ('storage', 'sharedStorageAccessed', 'accessTime'): (
            'access_time'
        ),
        ('storage', 'sharedStorageAccessed', 'type'): (
            'type'
        ),
        ('storage', 'sharedStorageAccessed', 'mainFrameId'): (
            'main_frame_id'
        ),
        ('storage', 'sharedStorageAccessed', 'ownerOrigin'): (
            'owner_origin'
        ),
        ('storage', 'sharedStorageAccessed', 'params'): (
            'params'
        ),
        ('storage', 'storageBucketCreatedOrUpdated', 'bucketInfo'): (
            'bucket_info'
        ),
        ('storage', 'storageBucketDeleted', 'bucketId'): (
            'bucket_id'
        ),
        ('storage', 'attributionReportingSourceRegistered', 'registration'): (
            'registration'
        ),
        ('storage', 'attributionReportingSourceRegistered', 'result'): (
            'result'
        ),
        ('target', 'attachedToTarget', 'sessionId'): (
            'session_id'
        ),
        ('target', 'attachedToTarget', 'targetInfo'): (
            'target_info'
        ),
        ('target', 'attachedToTarget', 'waitingForDebugger'): (
            'waiting_for_debugger'
        ),
        ('target', 'detachedFromTarget', 'sessionId'): (
            'session_id'
        ),
        ('target', 'detachedFromTarget', 'targetId'): (
            'target_id'
        ),
        ('target', 'receivedMessageFromTarget', 'sessionId'): (
            'session_id'
        ),
        ('target', 'receivedMessageFromTarget', 'message'): (
            'message'
        ),
        ('target', 'receivedMessageFromTarget', 'targetId'): (
            'target_id'
        ),
        ('target', 'targetCreated', 'targetInfo'): (
            'target_info'
        ),
        ('target', 'targetDestroyed', 'targetId'): (
            'target_id'
        ),
        ('target', 'targetCrashed', 'targetId'): (
            'target_id'
        ),
        ('target', 'targetCrashed', 'status'): (
            'status'
        ),
        ('target', 'targetCrashed', 'errorCode'): (
            'error_code'
        ),
        ('target', 'targetInfoChanged', 'targetInfo'): (
            'target_info'
        ),
        ('tethering', 'accepted', 'port'): (
            'port'
        ),
        ('tethering', 'accepted', 'connectionId'): (
            'connection_id'
        ),
        ('tracing', 'bufferUsage', 'percentFull'): (
            'percent_full'
        ),
        ('tracing', 'bufferUsage', 'eventCount'): (
            'event_count'
        ),
        ('tracing', 'bufferUsage', 'value'): (
            'value'
        ),
        ('tracing', 'dataCollected', 'value'): (
            'value'
        ),
        ('tracing', 'tracingComplete', 'dataLossOccurred'): (
            'data_loss_occurred'
        ),
        ('tracing', 'tracingComplete', 'stream'): (
            'stream'
        ),
        ('tracing', 'tracingComplete', 'traceFormat'): (
            'trace_format'
        ),
        ('tracing', 'tracingComplete', 'streamCompression'): (
            'stream_compression'
        ),
        ('fetch', 'requestPaused', 'requestId'): (
            'request_id'
        ),
        ('fetch', 'requestPaused', 'request'): (
            'request'
        ),
        ('fetch', 'requestPaused', 'frameId'): (
            'frame_id'
        ),
        ('fetch', 'requestPaused', 'resourceType'): (
            'resource_type'
        ),
        ('fetch', 'requestPaused', 'responseErrorReason'): (
            'response_error_reason'
        ),
        ('fetch', 'requestPaused', 'responseStatusCode'): (
            'response_status_code'
        ),
        ('fetch', 'requestPaused', 'responseStatusText'): (
            'response_status_text'
        ),
        ('fetch', 'requestPaused', 'responseHeaders'): (
            'response_headers'
        ),
        ('fetch', 'requestPaused', 'networkId'): (
            'network_id'
        ),
        ('fetch', 'requestPaused', 'redirectedRequestId'): (
            'redirected_request_id'
        ),
        ('fetch', 'authRequired', 'requestId'): (
            'request_id'
        ),
        ('fetch', 'authRequired', 'request'): (
            'request'
        ),
        ('fetch', 'authRequired', 'frameId'): (
            'frame_id'
        ),
        ('fetch', 'authRequired', 'resourceType'): (
            'resource_type'
        ),
        ('fetch', 'authRequired', 'authChallenge'): (
            'auth_challenge'
        ),
        ('webAudio', 'contextCreated', 'context'): (
            'context'
        ),
        ('webAudio', 'contextWillBeDestroyed', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'contextChanged', 'context'): (
            'context'
        ),
        ('webAudio', 'audioListenerCreated', 'listener'): (
            'listener'
        ),
        ('webAudio', 'audioListenerWillBeDestroyed', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'audioListenerWillBeDestroyed', 'listenerId'): (
            'listener_id'
        ),
        ('webAudio', 'audioNodeCreated', 'node'): (
            'node'
        ),
        ('webAudio', 'audioNodeWillBeDestroyed', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'audioNodeWillBeDestroyed', 'nodeId'): (
            'node_id'
        ),
        ('webAudio', 'audioParamCreated', 'param'): (
            'param'
        ),
        ('webAudio', 'audioParamWillBeDestroyed', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'audioParamWillBeDestroyed', 'nodeId'): (
            'node_id'
        ),
        ('webAudio', 'audioParamWillBeDestroyed', 'paramId'): (
            'param_id'
        ),
        ('webAudio', 'nodesConnected', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'nodesConnected', 'sourceId'): (
            'source_id'
        ),
        ('webAudio', 'nodesConnected', 'destinationId'): (
            'destination_id'
        ),
        ('webAudio', 'nodesConnected', 'sourceOutputIndex'): (
            'source_output_index'
        ),
        ('webAudio', 'nodesConnected', 'destinationInputIndex'): (
            'destination_input_index'
        ),
        ('webAudio', 'nodesDisconnected', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'nodesDisconnected', 'sourceId'): (
            'source_id'
        ),
        ('webAudio', 'nodesDisconnected', 'destinationId'): (
            'destination_id'
        ),
        ('webAudio', 'nodesDisconnected', 'sourceOutputIndex'): (
            'source_output_index'
        ),
        ('webAudio', 'nodesDisconnected', 'destinationInputIndex'): (
            'destination_input_index'
        ),
        ('webAudio', 'nodeParamConnected', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'nodeParamConnected', 'sourceId'): (
            'source_id'
        ),
        ('webAudio', 'nodeParamConnected', 'destinationId'): (
            'destination_id'
        ),
        ('webAudio', 'nodeParamConnected', 'sourceOutputIndex'): (
            'source_output_index'
        ),
        ('webAudio', 'nodeParamDisconnected', 'contextId'): (
            'context_id'
        ),
        ('webAudio', 'nodeParamDisconnected', 'sourceId'): (
            'source_id'
        ),
        ('webAudio', 'nodeParamDisconnected', 'destinationId'): (
            'destination_id'
        ),
        ('webAudio', 'nodeParamDisconnected', 'sourceOutputIndex'): (
            'source_output_index'
        ),
        ('webAuthn', 'credentialAdded', 'authenticatorId'): (
            'authenticator_id'
        ),
        ('webAuthn', 'credentialAdded', 'credential'): (
            'credential'
        ),
        ('webAuthn', 'credentialAsserted', 'authenticatorId'): (
            'authenticator_id'
        ),
        ('webAuthn', 'credentialAsserted', 'credential'): (
            'credential'
        ),
        ('media', 'playerPropertiesChanged', 'playerId'): (
            'player_id'
        ),
        ('media', 'playerPropertiesChanged', 'properties'): (
            'properties'
        ),
        ('media', 'playerEventsAdded', 'playerId'): (
            'player_id'
        ),
        ('media', 'playerEventsAdded', 'events'): (
            'events'
        ),
        ('media', 'playerMessagesLogged', 'playerId'): (
            'player_id'
        ),
        ('media', 'playerMessagesLogged', 'messages'): (
            'messages'
        ),
        ('media', 'playerErrorsRaised', 'playerId'): (
            'player_id'
        ),
        ('media', 'playerErrorsRaised', 'errors'): (
            'errors'
        ),
        ('media', 'playersCreated', 'players'): (
            'players'
        ),
        ('deviceAccess', 'deviceRequestPrompted', 'id'): (
            'id'
        ),
        ('deviceAccess', 'deviceRequestPrompted', 'devices'): (
            'devices'
        ),
        ('preload', 'ruleSetUpdated', 'ruleSet'): (
            'rule_set'
        ),
        ('preload', 'ruleSetRemoved', 'id'): (
            'id'
        ),
        ('preload', 'prerenderAttemptCompleted', 'key'): (
            'key'
        ),
        ('preload', 'prerenderAttemptCompleted', 'initiatingFrameId'): (
            'initiating_frame_id'
        ),
        ('preload', 'prerenderAttemptCompleted', 'prerenderingUrl'): (
            'prerendering_url'
        ),
        ('preload', 'prerenderAttemptCompleted', 'finalStatus'): (
            'final_status'
        ),
        ('preload', 'prerenderAttemptCompleted', 'disallowedApiMethod'): (
            'disallowed_api_method'
        ),
        ('preload', 'preloadEnabledStateUpdated', 'disabledByPreference'): (
            'disabled_by_preference'
        ),
        ('preload', 'preloadEnabledStateUpdated', 'disabledByDataSaver'): (
            'disabled_by_data_saver'
        ),
        ('preload', 'preloadEnabledStateUpdated', 'disabledByBatterySaver'): (
            'disabled_by_battery_saver'
        ),
        ('preload', 'preloadEnabledStateUpdated', 'disabledByHoldbackPrefetchSpeculationRules'): (
            'disabled_by_holdback_prefetch_speculation_rules'
        ),
        ('preload', 'preloadEnabledStateUpdated', 'disabledByHoldbackPrerenderSpeculationRules'): (
            'disabled_by_holdback_prerender_speculation_rules'
        ),
        ('preload', 'prefetchStatusUpdated', 'key'): (
            'key'
        ),
        ('preload', 'prefetchStatusUpdated', 'initiatingFrameId'): (
            'initiating_frame_id'
        ),
        ('preload', 'prefetchStatusUpdated', 'prefetchUrl'): (
            'prefetch_url'
        ),
        ('preload', 'prefetchStatusUpdated', 'status'): (
            'status'
        ),
        ('preload', 'prefetchStatusUpdated', 'prefetchStatus'): (
            'prefetch_status'
        ),
        ('preload', 'prefetchStatusUpdated', 'requestId'): (
            'request_id'
        ),
        ('preload', 'prerenderStatusUpdated', 'key'): (
            'key'
        ),
        ('preload', 'prerenderStatusUpdated', 'status'): (
            'status'
        ),
        ('preload', 'prerenderStatusUpdated', 'prerenderStatus'): (
            'prerender_status'
        ),
        ('preload', 'prerenderStatusUpdated', 'disallowedMojoInterface'): (
            'disallowed_mojo_interface'
        ),
        ('preload', 'preloadingAttemptSourcesUpdated', 'loaderId'): (
            'loader_id'
        ),
        ('preload', 'preloadingAttemptSourcesUpdated', 'preloadingAttemptSources'): (
            'preloading_attempt_sources'
        ),
        ('fedCm', 'dialogShown', 'dialogId'): (
            'dialog_id'
        ),
        ('fedCm', 'dialogShown', 'dialogType'): (
            'dialog_type'
        ),
        ('fedCm', 'dialogShown', 'accounts'): (
            'accounts'
        ),
        ('fedCm', 'dialogShown', 'title'): (
            'title'
        ),
        ('fedCm', 'dialogShown', 'subtitle'): (
            'subtitle'
        ),
        ('console', 'messageAdded', 'message'): (
            'message'
        ),
        ('debugger', 'breakpointResolved', 'breakpointId'): (
            'breakpoint_id'
        ),
        ('debugger', 'breakpointResolved', 'location'): (
            'location'
        ),
        ('debugger', 'paused', 'callFrames'): (
            'call_frames'
        ),
        ('debugger', 'paused', 'reason'): (
            'reason'
        ),
        ('debugger', 'paused', 'data'): (
            'data'
        ),
        ('debugger', 'paused', 'hitBreakpoints'): (
            'hit_breakpoints'
        ),
        ('debugger', 'paused', 'asyncStackTrace'): (
            'async_stack_trace'
        ),
        ('debugger', 'paused', 'asyncStackTraceId'): (
            'async_stack_trace_id'
        ),
        ('debugger', 'paused', 'asyncCallStackTraceId'): (
            'async_call_stack_trace_id'
        ),
        ('debugger', 'scriptFailedToParse', 'scriptId'): (
            'script_id'
        ),
        ('debugger', 'scriptFailedToParse', 'url'): (
            'url'
        ),
        ('debugger', 'scriptFailedToParse', 'startLine'): (
            'start_line'
        ),
        ('debugger', 'scriptFailedToParse', 'startColumn'): (
            'start_column'
        ),
        ('debugger', 'scriptFailedToParse', 'endLine'): (
            'end_line'
        ),
        ('debugger', 'scriptFailedToParse', 'endColumn'): (
            'end_column'
        ),
        ('debugger', 'scriptFailedToParse', 'executionContextId'): (
            'execution_context_id'
        ),
        ('debugger', 'scriptFailedToParse', 'hash'): (
            'hash'
        ),
        ('debugger', 'scriptFailedToParse', 'executionContextAuxData'): (
            'execution_context_aux_data'
        ),
        ('debugger', 'scriptFailedToParse', 'sourceMapURL'): (
            'source_map_url'
        ),
        ('debugger', 'scriptFailedToParse', 'hasSourceURL'): (
            'has_source_url'
        ),
        ('debugger', 'scriptFailedToParse', 'isModule'): (
            'is_module'
        ),
        ('debugger', 'scriptFailedToParse', 'length'): (
            'length'
        ),
        ('debugger', 'scriptFailedToParse', 'stackTrace'): (
            'stack_trace'
        ),
        ('debugger', 'scriptParsed', 'scriptId'): (
            'script_id'
        ),
        ('debugger', 'scriptParsed', 'url'): (
            'url'
        ),
        ('debugger', 'scriptParsed', 'startLine'): (
            'start_line'
        ),
        ('debugger', 'scriptParsed', 'startColumn'): (
            'start_column'
        ),
        ('debugger', 'scriptParsed', 'endLine'): (
            'end_line'
        ),
        ('debugger', 'scriptParsed', 'endColumn'): (
            'end_column'
        ),
        ('debugger', 'scriptParsed', 'executionContextId'): (
            'execution_context_id'
        ),
        ('debugger', 'scriptParsed', 'hash'): (
            'hash'
        ),
        ('debugger', 'scriptParsed', 'executionContextAuxData'): (
            'execution_context_aux_data'
        ),
        ('debugger', 'scriptParsed', 'isLiveEdit'): (
            'is_live_edit'
        ),
        ('debugger', 'scriptParsed', 'sourceMapURL'): (
            'source_map_url'
        ),
        ('debugger', 'scriptParsed', 'hasSourceURL'): (
            'has_source_url'
        ),
        ('debugger', 'scriptParsed', 'isModule'): (
            'is_module'
        ),
        ('debugger', 'scriptParsed', 'length'): (
            'length'
        ),
        ('debugger', 'scriptParsed', 'stackTrace'): (
            'stack_trace'
        ),
        ('heapProfiler', 'addHeapSnapshotChunk', 'chunk'): (
            'chunk'
        ),
        ('heapProfiler', 'heapStatsUpdate', 'statsUpdate'): (
            'stats_update'
        ),
        ('heapProfiler', 'lastSeenObjectId', 'lastSeenObjectId'): (
            'last_seen_object_id'
        ),
        ('heapProfiler', 'lastSeenObjectId', 'timestamp'): (
            'timestamp'
        ),
        ('heapProfiler', 'reportHeapSnapshotProgress', 'done'): (
            'done'
        ),
        ('heapProfiler', 'reportHeapSnapshotProgress', 'total'): (
            'total'
        ),
        ('heapProfiler', 'reportHeapSnapshotProgress', 'finished'): (
            'finished'
        ),
        ('profiler', 'consoleProfileFinished', 'id'): (
            'id'
        ),
        ('profiler', 'consoleProfileFinished', 'location'): (
            'location'
        ),
        ('profiler', 'consoleProfileFinished', 'profile'): (
            'profile'
        ),
        ('profiler', 'consoleProfileFinished', 'title'): (
            'title'
        ),
        ('profiler', 'consoleProfileStarted', 'id'): (
            'id'
        ),
        ('profiler', 'consoleProfileStarted', 'location'): (
            'location'
        ),
        ('profiler', 'consoleProfileStarted', 'title'): (
            'title'
        ),
        ('runtime', 'bindingCalled', 'name'): (
            'name'
        ),
        ('runtime', 'bindingCalled', 'payload'): (
            'payload'
        ),
        ('runtime', 'bindingCalled', 'executionContextId'): (
            'execution_context_id'
        ),
        ('runtime', 'consoleAPICalled', 'type'): (
            'type'
        ),
        ('runtime', 'consoleAPICalled', 'args'): (
            'args'
        ),
        ('runtime', 'consoleAPICalled', 'executionContextId'): (
            'execution_context_id'
        ),
        ('runtime', 'consoleAPICalled', 'timestamp'): (
            'timestamp'
        ),
        ('runtime', 'consoleAPICalled', 'stackTrace'): (
            'stack_trace'
        ),
        ('runtime', 'consoleAPICalled', 'context'): (
            'context'
        ),
        ('runtime', 'exceptionRevoked', 'reason'): (
            'reason'
        ),
        ('runtime', 'exceptionRevoked', 'exceptionId'): (
            'exception_id'
        ),
        ('runtime', 'exceptionThrown', 'timestamp'): (
            'timestamp'
        ),
        ('runtime', 'exceptionThrown', 'exceptionDetails'): (
            'exception_details'
        ),
        ('runtime', 'executionContextCreated', 'context'): (
            'context'
        ),
        ('runtime', 'executionContextDestroyed', 'executionContextId'): (
            'execution_context_id'
        ),
        ('runtime', 'inspectRequested', 'object'): (
            'object'
        ),
        ('runtime', 'inspectRequested', 'hints'): (
            'hints'
        ),
    },
}
