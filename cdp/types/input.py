# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from typing import (
    Literal,
    NotRequired,
    TypedDict
)

TimeSinceEpoch = float

GestureSourceType = Literal[
    'default',
    'touch',
    'mouse'
]

MouseButton = Literal[
    'none',
    'left',
    'middle',
    'right',
    'back',
    'forward'
]


class TouchPoint(TypedDict):
    x: float
    y: float
    radius_x: NotRequired[float]
    radius_y: NotRequired[float]
    rotation_angle: NotRequired[float]
    force: NotRequired[float]
    tangential_pressure: NotRequired[float]
    tilt_x: NotRequired[int]
    tilt_y: NotRequired[int]
    twist: NotRequired[int]
    id: NotRequired[float]


class DragDataItem(TypedDict):
    mime_type: str
    data: str
    title: NotRequired[str]
    base_url: NotRequired[str]


class DragData(TypedDict):
    items: list
    drag_operations_mask: int
    files: NotRequired[list]


class DispatchDragEventParamsT(TypedDict):
    type: str
    x: float
    y: float
    data: 'DragData'
    modifiers: NotRequired[int]


class DispatchKeyEventParamsT(TypedDict):
    type: str
    modifiers: NotRequired[int]
    timestamp: NotRequired['TimeSinceEpoch']
    text: NotRequired[str]
    unmodified_text: NotRequired[str]
    key_identifier: NotRequired[str]
    code: NotRequired[str]
    key: NotRequired[str]
    windows_virtual_key_code: NotRequired[int]
    native_virtual_key_code: NotRequired[int]
    auto_repeat: NotRequired[bool]
    is_keypad: NotRequired[bool]
    is_system_key: NotRequired[bool]
    location: NotRequired[int]
    commands: NotRequired[list]


class InsertTextParamsT(TypedDict):
    text: str


class ImeSetCompositionParamsT(TypedDict):
    text: str
    selection_start: int
    selection_end: int
    replacement_start: NotRequired[int]
    replacement_end: NotRequired[int]


class DispatchMouseEventParamsT(TypedDict):
    type: str
    x: float
    y: float
    modifiers: NotRequired[int]
    timestamp: NotRequired['TimeSinceEpoch']
    button: NotRequired['MouseButton']
    buttons: NotRequired[int]
    click_count: NotRequired[int]
    force: NotRequired[float]
    tangential_pressure: NotRequired[float]
    tilt_x: NotRequired[int]
    tilt_y: NotRequired[int]
    twist: NotRequired[int]
    delta_x: NotRequired[float]
    delta_y: NotRequired[float]
    pointer_type: NotRequired[str]


class DispatchTouchEventParamsT(TypedDict):
    type: str
    touch_points: list
    modifiers: NotRequired[int]
    timestamp: NotRequired['TimeSinceEpoch']


class EmulateTouchFromMouseEventParamsT(TypedDict):
    type: str
    x: int
    y: int
    button: 'MouseButton'
    timestamp: NotRequired['TimeSinceEpoch']
    delta_x: NotRequired[float]
    delta_y: NotRequired[float]
    modifiers: NotRequired[int]
    click_count: NotRequired[int]


class SetIgnoreInputEventsParamsT(TypedDict):
    ignore: bool


class SetInterceptDragsParamsT(TypedDict):
    enabled: bool


class SynthesizePinchGestureParamsT(TypedDict):
    x: float
    y: float
    scale_factor: float
    relative_speed: NotRequired[int]
    gesture_source_type: NotRequired['GestureSourceType']


class SynthesizeScrollGestureParamsT(TypedDict):
    x: float
    y: float
    x_distance: NotRequired[float]
    y_distance: NotRequired[float]
    x_overscroll: NotRequired[float]
    y_overscroll: NotRequired[float]
    prevent_fling: NotRequired[bool]
    speed: NotRequired[int]
    gesture_source_type: NotRequired['GestureSourceType']
    repeat_count: NotRequired[int]
    repeat_delay_ms: NotRequired[int]
    interaction_marker_name: NotRequired[str]


class SynthesizeTapGestureParamsT(TypedDict):
    x: float
    y: float
    duration: NotRequired[int]
    tap_count: NotRequired[int]
    gesture_source_type: NotRequired['GestureSourceType']


class DragInterceptedEventT(TypedDict):
    name: Literal['drag_intercepted']
    params: 'DragInterceptedParamsT'


class DragInterceptedParamsT(TypedDict):
    data: 'DragData'
