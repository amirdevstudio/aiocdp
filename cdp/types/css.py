# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.types import (
    dom,
    page
)
from typing import (
    Literal,
    TypedDict
)

StyleSheetId = str

StyleSheetOrigin = Literal[
    'injected',
    'user-agent',
    'inspector',
    'regular'
]

CSSRuleType = Literal[
    'MediaRule',
    'SupportsRule',
    'ContainerRule',
    'LayerRule',
    'ScopeRule',
    'StyleRule'
]


class PseudoElementMatches(TypedDict):
    pseudo_type: 'dom.PseudoType'
    matches: list
    pseudo_identifier: str


class InheritedStyleEntry(TypedDict):
    matched_css_rules: list
    inline_style: 'CSSStyle'


class InheritedPseudoElementMatches(TypedDict):
    pseudo_elements: list


class RuleMatch(TypedDict):
    rule: 'CSSRule'
    matching_selectors: list


class Value(TypedDict):
    text: str
    range: 'SourceRange'
    specificity: 'Specificity'


class Specificity(TypedDict):
    a: int
    b: int
    c: int


class SelectorList(TypedDict):
    selectors: list
    text: str


class CSSStyleSheetHeader(TypedDict):
    style_sheet_id: 'StyleSheetId'
    frame_id: 'page.FrameId'
    source_url: str
    origin: 'StyleSheetOrigin'
    title: str
    disabled: bool
    is_inline: bool
    is_mutable: bool
    is_constructed: bool
    start_line: float
    start_column: float
    length: float
    end_line: float
    end_column: float
    source_map_url: str
    owner_node: 'dom.BackendNodeId'
    has_source_url: bool
    loading_failed: bool


class CSSRule(TypedDict):
    selector_list: 'SelectorList'
    origin: 'StyleSheetOrigin'
    style: 'CSSStyle'
    style_sheet_id: 'StyleSheetId'
    nesting_selectors: list
    media: list
    container_queries: list
    supports: list
    layers: list
    scopes: list
    rule_types: list


class RuleUsage(TypedDict):
    style_sheet_id: 'StyleSheetId'
    start_offset: float
    end_offset: float
    used: bool


class SourceRange(TypedDict):
    start_line: int
    start_column: int
    end_line: int
    end_column: int


class ShorthandEntry(TypedDict):
    name: str
    value: str
    important: bool


class CSSComputedStyleProperty(TypedDict):
    name: str
    value: str


class CSSStyle(TypedDict):
    css_properties: list
    shorthand_entries: list
    style_sheet_id: 'StyleSheetId'
    css_text: str
    range: 'SourceRange'


class CSSProperty(TypedDict):
    name: str
    value: str
    important: bool
    implicit: bool
    text: str
    parsed_ok: bool
    disabled: bool
    range: 'SourceRange'
    longhand_properties: list


class CSSMedia(TypedDict):
    text: str
    source: str
    source_url: str
    range: 'SourceRange'
    style_sheet_id: 'StyleSheetId'
    media_list: list


class MediaQuery(TypedDict):
    expressions: list
    active: bool


class MediaQueryExpression(TypedDict):
    value: float
    unit: str
    feature: str
    value_range: 'SourceRange'
    computed_length: float


class CSSContainerQuery(TypedDict):
    text: str
    range: 'SourceRange'
    style_sheet_id: 'StyleSheetId'
    name: str
    physical_axes: 'dom.PhysicalAxes'
    logical_axes: 'dom.LogicalAxes'


class CSSSupports(TypedDict):
    text: str
    active: bool
    range: 'SourceRange'
    style_sheet_id: 'StyleSheetId'


class CSSScope(TypedDict):
    text: str
    range: 'SourceRange'
    style_sheet_id: 'StyleSheetId'


class CSSLayer(TypedDict):
    text: str
    range: 'SourceRange'
    style_sheet_id: 'StyleSheetId'


class CSSLayerData(TypedDict):
    name: str
    order: float
    sub_layers: list


class PlatformFontUsage(TypedDict):
    family_name: str
    is_custom_font: bool
    glyph_count: float


class FontVariationAxis(TypedDict):
    tag: str
    name: str
    min_value: float
    max_value: float
    default_value: float


class FontFace(TypedDict):
    font_family: str
    font_style: str
    font_variant: str
    font_weight: str
    font_stretch: str
    font_display: str
    unicode_range: str
    src: str
    platform_font_family: str
    font_variation_axes: list


class CSSTryRule(TypedDict):
    origin: 'StyleSheetOrigin'
    style: 'CSSStyle'
    style_sheet_id: 'StyleSheetId'


class CSSPositionFallbackRule(TypedDict):
    name: 'Value'
    try_rules: list


class CSSKeyframesRule(TypedDict):
    animation_name: 'Value'
    keyframes: list


class CSSPropertyRegistration(TypedDict):
    property_name: str
    inherits: bool
    syntax: str
    initial_value: 'Value'


class CSSPropertyRule(TypedDict):
    origin: 'StyleSheetOrigin'
    property_name: 'Value'
    style: 'CSSStyle'
    style_sheet_id: 'StyleSheetId'


class CSSKeyframeRule(TypedDict):
    origin: 'StyleSheetOrigin'
    key_text: 'Value'
    style: 'CSSStyle'
    style_sheet_id: 'StyleSheetId'


class StyleDeclarationEdit(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    text: str
