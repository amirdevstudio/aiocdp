# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from cdp.types import (
    dom
)
from cdp.types import page
from typing import (
    Literal,
    NotRequired,
    TypedDict
)

StyleSheetId = str

StyleSheetOrigin = Literal[
    'injected',
    'user-agent',
    'inspector',
    'regular'
]

CSSRuleType = Literal[
    'MediaRule',
    'SupportsRule',
    'ContainerRule',
    'LayerRule',
    'ScopeRule',
    'StyleRule'
]


class PseudoElementMatches(TypedDict):
    pseudo_type: 'dom.PseudoType'
    matches: list
    pseudo_identifier: NotRequired[str]


class InheritedStyleEntry(TypedDict):
    matched_css_rules: list
    inline_style: NotRequired['CSSStyle']


class InheritedPseudoElementMatches(TypedDict):
    pseudo_elements: list


class RuleMatch(TypedDict):
    rule: 'CSSRule'
    matching_selectors: list


class Value(TypedDict):
    text: str
    range: NotRequired['SourceRange']
    specificity: NotRequired['Specificity']


class Specificity(TypedDict):
    a: int
    b: int
    c: int


class SelectorList(TypedDict):
    selectors: list
    text: str


class CSSStyleSheetHeader(TypedDict):
    style_sheet_id: 'StyleSheetId'
    frame_id: 'page.FrameId'
    source_url: str
    origin: 'StyleSheetOrigin'
    title: str
    disabled: bool
    is_inline: bool
    is_mutable: bool
    is_constructed: bool
    start_line: float
    start_column: float
    length: float
    end_line: float
    end_column: float
    source_map_url: NotRequired[str]
    owner_node: NotRequired['dom.BackendNodeId']
    has_source_url: NotRequired[bool]
    loading_failed: NotRequired[bool]


class CSSRule(TypedDict):
    selector_list: 'SelectorList'
    origin: 'StyleSheetOrigin'
    style: 'CSSStyle'
    style_sheet_id: NotRequired['StyleSheetId']
    nesting_selectors: NotRequired[list]
    media: NotRequired[list]
    container_queries: NotRequired[list]
    supports: NotRequired[list]
    layers: NotRequired[list]
    scopes: NotRequired[list]
    rule_types: NotRequired[list]


class RuleUsage(TypedDict):
    style_sheet_id: 'StyleSheetId'
    start_offset: float
    end_offset: float
    used: bool


class SourceRange(TypedDict):
    start_line: int
    start_column: int
    end_line: int
    end_column: int


class ShorthandEntry(TypedDict):
    name: str
    value: str
    important: NotRequired[bool]


class CSSComputedStyleProperty(TypedDict):
    name: str
    value: str


class CSSStyle(TypedDict):
    css_properties: list
    shorthand_entries: list
    style_sheet_id: NotRequired['StyleSheetId']
    css_text: NotRequired[str]
    range: NotRequired['SourceRange']


class CSSProperty(TypedDict):
    name: str
    value: str
    important: NotRequired[bool]
    implicit: NotRequired[bool]
    text: NotRequired[str]
    parsed_ok: NotRequired[bool]
    disabled: NotRequired[bool]
    range: NotRequired['SourceRange']
    longhand_properties: NotRequired[list]


class CSSMedia(TypedDict):
    text: str
    source: str
    source_url: NotRequired[str]
    range: NotRequired['SourceRange']
    style_sheet_id: NotRequired['StyleSheetId']
    media_list: NotRequired[list]


class MediaQuery(TypedDict):
    expressions: list
    active: bool


class MediaQueryExpression(TypedDict):
    value: float
    unit: str
    feature: str
    value_range: NotRequired['SourceRange']
    computed_length: NotRequired[float]


class CSSContainerQuery(TypedDict):
    text: str
    range: NotRequired['SourceRange']
    style_sheet_id: NotRequired['StyleSheetId']
    name: NotRequired[str]
    physical_axes: NotRequired['dom.PhysicalAxes']
    logical_axes: NotRequired['dom.LogicalAxes']


class CSSSupports(TypedDict):
    text: str
    active: bool
    range: NotRequired['SourceRange']
    style_sheet_id: NotRequired['StyleSheetId']


class CSSScope(TypedDict):
    text: str
    range: NotRequired['SourceRange']
    style_sheet_id: NotRequired['StyleSheetId']


class CSSLayer(TypedDict):
    text: str
    range: NotRequired['SourceRange']
    style_sheet_id: NotRequired['StyleSheetId']


class CSSLayerData(TypedDict):
    name: str
    order: float
    sub_layers: NotRequired[list]


class PlatformFontUsage(TypedDict):
    family_name: str
    is_custom_font: bool
    glyph_count: float


class FontVariationAxis(TypedDict):
    tag: str
    name: str
    min_value: float
    max_value: float
    default_value: float


class FontFace(TypedDict):
    font_family: str
    font_style: str
    font_variant: str
    font_weight: str
    font_stretch: str
    font_display: str
    unicode_range: str
    src: str
    platform_font_family: str
    font_variation_axes: NotRequired[list]


class CSSTryRule(TypedDict):
    origin: 'StyleSheetOrigin'
    style: 'CSSStyle'
    style_sheet_id: NotRequired['StyleSheetId']


class CSSPositionFallbackRule(TypedDict):
    name: 'Value'
    try_rules: list


class CSSKeyframesRule(TypedDict):
    animation_name: 'Value'
    keyframes: list


class CSSPropertyRegistration(TypedDict):
    property_name: str
    inherits: bool
    syntax: str
    initial_value: NotRequired['Value']


class CSSPropertyRule(TypedDict):
    origin: 'StyleSheetOrigin'
    property_name: 'Value'
    style: 'CSSStyle'
    style_sheet_id: NotRequired['StyleSheetId']


class CSSKeyframeRule(TypedDict):
    origin: 'StyleSheetOrigin'
    key_text: 'Value'
    style: 'CSSStyle'
    style_sheet_id: NotRequired['StyleSheetId']


class StyleDeclarationEdit(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    text: str


class AddRuleParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    rule_text: str
    location: 'SourceRange'


class CollectClassNamesParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'


class CreateStyleSheetParamsT(TypedDict):
    frame_id: 'page.FrameId'


class ForcePseudoStateParamsT(TypedDict):
    node_id: 'dom.NodeId'
    forced_pseudo_classes: list


class GetBackgroundColorsParamsT(TypedDict):
    node_id: 'dom.NodeId'


class GetComputedStyleForNodeParamsT(TypedDict):
    node_id: 'dom.NodeId'


class GetInlineStylesForNodeParamsT(TypedDict):
    node_id: 'dom.NodeId'


class GetMatchedStylesForNodeParamsT(TypedDict):
    node_id: 'dom.NodeId'


class GetPlatformFontsForNodeParamsT(TypedDict):
    node_id: 'dom.NodeId'


class GetStyleSheetTextParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'


class GetLayersForNodeParamsT(TypedDict):
    node_id: 'dom.NodeId'


class TrackComputedStyleUpdatesParamsT(TypedDict):
    properties_to_track: list


class SetEffectivePropertyValueForNodeParamsT(TypedDict):
    node_id: 'dom.NodeId'
    property_name: str
    value: str


class SetKeyframeKeyParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    key_text: str


class SetMediaTextParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    text: str


class SetContainerQueryTextParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    text: str


class SetSupportsTextParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    text: str


class SetScopeTextParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    text: str


class SetRuleSelectorParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    range: 'SourceRange'
    selector: str


class SetStyleSheetTextParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
    text: str


class SetStyleTextsParamsT(TypedDict):
    edits: list


class SetLocalFontsEnabledParamsT(TypedDict):
    enabled: bool


class AddRuleReturnT(TypedDict):
    rule: 'CSSRule'


class CollectClassNamesReturnT(TypedDict):
    class_names: list


class CreateStyleSheetReturnT(TypedDict):
    style_sheet_id: 'StyleSheetId'


class GetBackgroundColorsReturnT(TypedDict):
    background_colors: list
    computed_font_size: str
    computed_font_weight: str


class GetComputedStyleForNodeReturnT(TypedDict):
    computed_style: list


class GetInlineStylesForNodeReturnT(TypedDict):
    inline_style: 'CSSStyle'
    attributes_style: 'CSSStyle'


class GetMatchedStylesForNodeReturnT(TypedDict):
    inline_style: 'CSSStyle'
    attributes_style: 'CSSStyle'
    matched_css_rules: list
    pseudo_elements: list
    inherited: list
    inherited_pseudo_elements: list
    css_keyframes_rules: list
    css_position_fallback_rules: list
    css_property_rules: list
    css_property_registrations: list
    parent_layout_node_id: 'dom.NodeId'


class GetMediaQueriesReturnT(TypedDict):
    medias: list


class GetPlatformFontsForNodeReturnT(TypedDict):
    fonts: list


class GetStyleSheetTextReturnT(TypedDict):
    text: str


class GetLayersForNodeReturnT(TypedDict):
    root_layer: 'CSSLayerData'


class TakeComputedStyleUpdatesReturnT(TypedDict):
    node_ids: list


class SetKeyframeKeyReturnT(TypedDict):
    key_text: 'Value'


class SetMediaTextReturnT(TypedDict):
    media: 'CSSMedia'


class SetContainerQueryTextReturnT(TypedDict):
    container_query: 'CSSContainerQuery'


class SetSupportsTextReturnT(TypedDict):
    supports: 'CSSSupports'


class SetScopeTextReturnT(TypedDict):
    scope: 'CSSScope'


class SetRuleSelectorReturnT(TypedDict):
    selector_list: 'SelectorList'


class SetStyleSheetTextReturnT(TypedDict):
    source_map_url: str


class SetStyleTextsReturnT(TypedDict):
    styles: list


class StopRuleUsageTrackingReturnT(TypedDict):
    rule_usage: list


class TakeCoverageDeltaReturnT(TypedDict):
    coverage: list
    timestamp: float


class FontsUpdatedEventT(TypedDict):
    name: Literal['fonts_updated']
    params: 'FontsUpdatedParamsT'


class MediaQueryResultChangedEventT(TypedDict):
    name: Literal['media_query_result_changed']
    params: None


class StyleSheetAddedEventT(TypedDict):
    name: Literal['style_sheet_added']
    params: 'StyleSheetAddedParamsT'


class StyleSheetChangedEventT(TypedDict):
    name: Literal['style_sheet_changed']
    params: 'StyleSheetChangedParamsT'


class StyleSheetRemovedEventT(TypedDict):
    name: Literal['style_sheet_removed']
    params: 'StyleSheetRemovedParamsT'


class FontsUpdatedParamsT(TypedDict):
    font: 'FontFace'


class StyleSheetAddedParamsT(TypedDict):
    header: 'CSSStyleSheetHeader'


class StyleSheetChangedParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'


class StyleSheetRemovedParamsT(TypedDict):
    style_sheet_id: 'StyleSheetId'
