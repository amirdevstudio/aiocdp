# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from typing import (
    Any,
    Literal,
    NotRequired,
    TypedDict
)

ScriptId = str

RemoteObjectId = str

UnserializableValue = str

ExecutionContextId = int

Timestamp = float

TimeDelta = float

UniqueDebuggerId = str


class RemoteObject(TypedDict):
    type: str
    subtype: NotRequired[str]
    class_name: NotRequired[str]
    value: NotRequired[Any]
    unserializable_value: NotRequired['UnserializableValue']
    description: NotRequired[str]
    object_id: NotRequired['RemoteObjectId']
    preview: NotRequired['ObjectPreview']
    custom_preview: NotRequired['CustomPreview']


class CustomPreview(TypedDict):
    header: str
    body_getter_id: NotRequired['RemoteObjectId']


class ObjectPreview(TypedDict):
    type: str
    overflow: bool
    properties: list
    subtype: NotRequired[str]
    description: NotRequired[str]
    entries: NotRequired[list]


class PropertyPreview(TypedDict):
    name: str
    type: str
    value: NotRequired[str]
    value_preview: NotRequired['ObjectPreview']
    subtype: NotRequired[str]


class EntryPreview(TypedDict):
    value: 'ObjectPreview'
    key: NotRequired['ObjectPreview']


class PropertyDescriptor(TypedDict):
    name: str
    configurable: bool
    enumerable: bool
    value: NotRequired['RemoteObject']
    writable: NotRequired[bool]
    get: NotRequired['RemoteObject']
    set: NotRequired['RemoteObject']
    was_thrown: NotRequired[bool]
    is_own: NotRequired[bool]
    symbol: NotRequired['RemoteObject']


class InternalPropertyDescriptor(TypedDict):
    name: str
    value: NotRequired['RemoteObject']


class PrivatePropertyDescriptor(TypedDict):
    name: str
    value: 'RemoteObject'


class CallArgument(TypedDict):
    value: NotRequired[Any]
    unserializable_value: NotRequired['UnserializableValue']
    object_id: NotRequired['RemoteObjectId']


class ExecutionContextDescription(TypedDict):
    id: 'ExecutionContextId'
    origin: str
    name: str
    aux_data: NotRequired[dict]


class ExceptionDetails(TypedDict):
    exception_id: int
    text: str
    line_number: int
    column_number: int
    script_id: NotRequired['ScriptId']
    url: NotRequired[str]
    stack_trace: NotRequired['StackTrace']
    exception: NotRequired['RemoteObject']
    execution_context_id: NotRequired['ExecutionContextId']


class CallFrame(TypedDict):
    function_name: str
    script_id: 'ScriptId'
    url: str
    line_number: int
    column_number: int


class StackTrace(TypedDict):
    call_frames: list
    description: NotRequired[str]
    parent: NotRequired['StackTrace']
    parent_id: NotRequired['StackTraceId']


class StackTraceId(TypedDict):
    id: str
    debugger_id: NotRequired['UniqueDebuggerId']


class AwaitPromiseParamsT(TypedDict):
    promise_object_id: 'RemoteObjectId'
    return_by_value: NotRequired[bool]
    generate_preview: NotRequired[bool]


class CallFunctionOnParamsT(TypedDict):
    function_declaration: str
    object_id: NotRequired['RemoteObjectId']
    arguments: NotRequired[list]
    silent: NotRequired[bool]
    return_by_value: NotRequired[bool]
    generate_preview: NotRequired[bool]
    user_gesture: NotRequired[bool]
    await_promise: NotRequired[bool]
    execution_context_id: NotRequired['ExecutionContextId']
    object_group: NotRequired[str]


class CompileScriptParamsT(TypedDict):
    expression: str
    source_url: str
    persist_script: bool
    execution_context_id: NotRequired['ExecutionContextId']


class EvaluateParamsT(TypedDict):
    expression: str
    object_group: NotRequired[str]
    include_command_line_api: NotRequired[bool]
    silent: NotRequired[bool]
    context_id: NotRequired['ExecutionContextId']
    return_by_value: NotRequired[bool]
    generate_preview: NotRequired[bool]
    user_gesture: NotRequired[bool]
    await_promise: NotRequired[bool]
    throw_on_side_effect: NotRequired[bool]
    timeout: NotRequired['TimeDelta']


class GetPropertiesParamsT(TypedDict):
    object_id: 'RemoteObjectId'
    own_properties: NotRequired[bool]
    accessor_properties_only: NotRequired[bool]
    generate_preview: NotRequired[bool]


class GlobalLexicalScopeNamesParamsT(TypedDict):
    execution_context_id: NotRequired['ExecutionContextId']


class QueryObjectsParamsT(TypedDict):
    prototype_object_id: 'RemoteObjectId'
    object_group: NotRequired[str]


class ReleaseObjectParamsT(TypedDict):
    object_id: 'RemoteObjectId'


class ReleaseObjectGroupParamsT(TypedDict):
    object_group: str


class RunScriptParamsT(TypedDict):
    script_id: 'ScriptId'
    execution_context_id: NotRequired['ExecutionContextId']
    object_group: NotRequired[str]
    silent: NotRequired[bool]
    include_command_line_api: NotRequired[bool]
    return_by_value: NotRequired[bool]
    generate_preview: NotRequired[bool]
    await_promise: NotRequired[bool]


class SetAsyncCallStackDepthParamsT(TypedDict):
    max_depth: int


class SetCustomObjectFormatterEnabledParamsT(TypedDict):
    enabled: bool


class SetMaxCallStackSizeToCaptureParamsT(TypedDict):
    size: int


class AddBindingParamsT(TypedDict):
    name: str
    execution_context_id: NotRequired['ExecutionContextId']


class RemoveBindingParamsT(TypedDict):
    name: str


class AwaitPromiseReturnT(TypedDict):
    result: 'RemoteObject'
    exception_details: 'ExceptionDetails'


class CallFunctionOnReturnT(TypedDict):
    result: 'RemoteObject'
    exception_details: 'ExceptionDetails'


class CompileScriptReturnT(TypedDict):
    script_id: 'ScriptId'
    exception_details: 'ExceptionDetails'


class EvaluateReturnT(TypedDict):
    result: 'RemoteObject'
    exception_details: 'ExceptionDetails'


class GetIsolateIdReturnT(TypedDict):
    id: str


class GetHeapUsageReturnT(TypedDict):
    used_size: float
    total_size: float


class GetPropertiesReturnT(TypedDict):
    result: list
    internal_properties: list
    private_properties: list
    exception_details: 'ExceptionDetails'


class GlobalLexicalScopeNamesReturnT(TypedDict):
    names: list


class QueryObjectsReturnT(TypedDict):
    objects: 'RemoteObject'


class RunScriptReturnT(TypedDict):
    result: 'RemoteObject'
    exception_details: 'ExceptionDetails'


class BindingCalledEventT(TypedDict):
    name: Literal['binding_called']
    params: 'BindingCalledParamsT'


class ConsoleAPICalledEventT(TypedDict):
    name: Literal['console_api_called']
    params: 'ConsoleAPICalledParamsT'


class ExceptionRevokedEventT(TypedDict):
    name: Literal['exception_revoked']
    params: 'ExceptionRevokedParamsT'


class ExceptionThrownEventT(TypedDict):
    name: Literal['exception_thrown']
    params: 'ExceptionThrownParamsT'


class ExecutionContextCreatedEventT(TypedDict):
    name: Literal['execution_context_created']
    params: 'ExecutionContextCreatedParamsT'


class ExecutionContextDestroyedEventT(TypedDict):
    name: Literal['execution_context_destroyed']
    params: 'ExecutionContextDestroyedParamsT'


class ExecutionContextsClearedEventT(TypedDict):
    name: Literal['execution_contexts_cleared']
    params: None


class InspectRequestedEventT(TypedDict):
    name: Literal['inspect_requested']
    params: 'InspectRequestedParamsT'


class BindingCalledParamsT(TypedDict):
    name: str
    payload: str
    execution_context_id: 'ExecutionContextId'


class ConsoleAPICalledParamsT(TypedDict):
    type: str
    args: list
    execution_context_id: 'ExecutionContextId'
    timestamp: 'Timestamp'
    stack_trace: 'StackTrace'
    context: str


class ExceptionRevokedParamsT(TypedDict):
    reason: str
    exception_id: int


class ExceptionThrownParamsT(TypedDict):
    timestamp: 'Timestamp'
    exception_details: 'ExceptionDetails'


class ExecutionContextCreatedParamsT(TypedDict):
    context: 'ExecutionContextDescription'


class ExecutionContextDestroyedParamsT(TypedDict):
    execution_context_id: 'ExecutionContextId'


class InspectRequestedParamsT(TypedDict):
    object: 'RemoteObject'
    hints: dict
