# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.
from cdp.types import (
    browser
)
from cdp.types import page
from typing import (
    Literal,
    NotRequired,
    TypedDict
)

TargetID = str

SessionID = str

TargetFilter = list


class TargetInfo(TypedDict):
    target_id: 'TargetID'
    type: str
    title: str
    url: str
    attached: bool
    can_access_opener: bool
    opener_id: NotRequired['TargetID']
    opener_frame_id: NotRequired['page.FrameId']
    browser_context_id: NotRequired['browser.BrowserContextID']
    subtype: NotRequired[str]


class FilterEntry(TypedDict):
    exclude: NotRequired[bool]
    type: NotRequired[str]


class RemoteLocation(TypedDict):
    host: str
    port: int


class ActivateTargetParamsT(TypedDict):
    target_id: 'TargetID'


class AttachToTargetParamsT(TypedDict):
    target_id: 'TargetID'
    flatten: NotRequired[bool]


class CloseTargetParamsT(TypedDict):
    target_id: 'TargetID'


class ExposeDevToolsProtocolParamsT(TypedDict):
    target_id: 'TargetID'
    binding_name: NotRequired[str]


class CreateBrowserContextParamsT(TypedDict):
    dispose_on_detach: NotRequired[bool]
    proxy_server: NotRequired[str]
    proxy_bypass_list: NotRequired[str]
    origins_with_universal_network_access: NotRequired[list]


class CreateTargetParamsT(TypedDict):
    url: str
    width: NotRequired[int]
    height: NotRequired[int]
    browser_context_id: NotRequired['browser.BrowserContextID']
    enable_begin_frame_control: NotRequired[bool]
    new_window: NotRequired[bool]
    background: NotRequired[bool]
    for_tab: NotRequired[bool]


class DetachFromTargetParamsT(TypedDict):
    session_id: NotRequired['SessionID']
    target_id: NotRequired['TargetID']


class DisposeBrowserContextParamsT(TypedDict):
    browser_context_id: 'browser.BrowserContextID'


class GetTargetInfoParamsT(TypedDict):
    target_id: NotRequired['TargetID']


class GetTargetsParamsT(TypedDict):
    filter: NotRequired['TargetFilter']


class SendMessageToTargetParamsT(TypedDict):
    message: str
    session_id: NotRequired['SessionID']
    target_id: NotRequired['TargetID']


class SetAutoAttachParamsT(TypedDict):
    auto_attach: bool
    wait_for_debugger_on_start: bool
    flatten: NotRequired[bool]
    filter: NotRequired['TargetFilter']


class AutoAttachRelatedParamsT(TypedDict):
    target_id: 'TargetID'
    wait_for_debugger_on_start: bool
    filter: NotRequired['TargetFilter']


class SetDiscoverTargetsParamsT(TypedDict):
    discover: bool
    filter: NotRequired['TargetFilter']


class SetRemoteLocationsParamsT(TypedDict):
    locations: list


class AttachToTargetReturnT(TypedDict):
    session_id: 'SessionID'


class AttachToBrowserTargetReturnT(TypedDict):
    session_id: 'SessionID'


class CloseTargetReturnT(TypedDict):
    success: bool


class CreateBrowserContextReturnT(TypedDict):
    browser_context_id: 'browser.BrowserContextID'


class GetBrowserContextsReturnT(TypedDict):
    browser_context_ids: list


class CreateTargetReturnT(TypedDict):
    target_id: 'TargetID'


class GetTargetInfoReturnT(TypedDict):
    target_info: 'TargetInfo'


class GetTargetsReturnT(TypedDict):
    target_infos: list


class AttachedToTargetEventT(TypedDict):
    name: Literal['attached_to_target']
    params: 'AttachedToTargetParamsT'


class DetachedFromTargetEventT(TypedDict):
    name: Literal['detached_from_target']
    params: 'DetachedFromTargetParamsT'


class ReceivedMessageFromTargetEventT(TypedDict):
    name: Literal['received_message_from_target']
    params: 'ReceivedMessageFromTargetParamsT'


class TargetCreatedEventT(TypedDict):
    name: Literal['target_created']
    params: 'TargetCreatedParamsT'


class TargetDestroyedEventT(TypedDict):
    name: Literal['target_destroyed']
    params: 'TargetDestroyedParamsT'


class TargetCrashedEventT(TypedDict):
    name: Literal['target_crashed']
    params: 'TargetCrashedParamsT'


class TargetInfoChangedEventT(TypedDict):
    name: Literal['target_info_changed']
    params: 'TargetInfoChangedParamsT'


class AttachedToTargetParamsT(TypedDict):
    session_id: 'SessionID'
    target_info: 'TargetInfo'
    waiting_for_debugger: bool


class DetachedFromTargetParamsT(TypedDict):
    session_id: 'SessionID'
    target_id: 'TargetID'


class ReceivedMessageFromTargetParamsT(TypedDict):
    session_id: 'SessionID'
    message: str
    target_id: 'TargetID'


class TargetCreatedParamsT(TypedDict):
    target_info: 'TargetInfo'


class TargetDestroyedParamsT(TypedDict):
    target_id: 'TargetID'


class TargetCrashedParamsT(TypedDict):
    target_id: 'TargetID'
    status: str
    error_code: int


class TargetInfoChangedParamsT(TypedDict):
    target_info: 'TargetInfo'
