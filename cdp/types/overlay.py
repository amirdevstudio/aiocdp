# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.types import (
    dom,
    page,
    runtime
)
from typing import (
    Literal,
    TypedDict
)

ContrastAlgorithm = Literal[
    'aa',
    'aaa',
    'apca'
]

ColorFormat = Literal[
    'rgb',
    'hsl',
    'hwb',
    'hex'
]

InspectMode = Literal[
    'searchForNode',
    'searchForUAShadowDOM',
    'captureAreaScreenshot',
    'showDistances',
    'none'
]


class SourceOrderConfig(TypedDict):
    parentOutlineColor: 'dom.RGBA'
    childOutlineColor: 'dom.RGBA'


class GridHighlightConfig(TypedDict):
    showGridExtensionLines: bool
    showPositiveLineNumbers: bool
    showNegativeLineNumbers: bool
    showAreaNames: bool
    showLineNames: bool
    showTrackSizes: bool
    gridBorderColor: 'dom.RGBA'
    cellBorderColor: 'dom.RGBA'
    rowLineColor: 'dom.RGBA'
    columnLineColor: 'dom.RGBA'
    gridBorderDash: bool
    cellBorderDash: bool
    rowLineDash: bool
    columnLineDash: bool
    rowGapColor: 'dom.RGBA'
    rowHatchColor: 'dom.RGBA'
    columnGapColor: 'dom.RGBA'
    columnHatchColor: 'dom.RGBA'
    areaBorderColor: 'dom.RGBA'
    gridBackgroundColor: 'dom.RGBA'


class FlexContainerHighlightConfig(TypedDict):
    containerBorder: 'LineStyle'
    lineSeparator: 'LineStyle'
    itemSeparator: 'LineStyle'
    mainDistributedSpace: 'BoxStyle'
    crossDistributedSpace: 'BoxStyle'
    rowGapSpace: 'BoxStyle'
    columnGapSpace: 'BoxStyle'
    crossAlignment: 'LineStyle'


class FlexItemHighlightConfig(TypedDict):
    baseSizeBox: 'BoxStyle'
    baseSizeBorder: 'LineStyle'
    flexibilityArrow: 'LineStyle'


class LineStyle(TypedDict):
    color: 'dom.RGBA'
    pattern: str


class BoxStyle(TypedDict):
    fillColor: 'dom.RGBA'
    hatchColor: 'dom.RGBA'


class HighlightConfig(TypedDict):
    showInfo: bool
    showStyles: bool
    showRulers: bool
    showAccessibilityInfo: bool
    showExtensionLines: bool
    contentColor: 'dom.RGBA'
    paddingColor: 'dom.RGBA'
    borderColor: 'dom.RGBA'
    marginColor: 'dom.RGBA'
    eventTargetColor: 'dom.RGBA'
    shapeColor: 'dom.RGBA'
    shapeMarginColor: 'dom.RGBA'
    cssGridColor: 'dom.RGBA'
    colorFormat: 'ColorFormat'
    gridHighlightConfig: 'GridHighlightConfig'
    flexContainerHighlightConfig: 'FlexContainerHighlightConfig'
    flexItemHighlightConfig: 'FlexItemHighlightConfig'
    contrastAlgorithm: 'ContrastAlgorithm'
    containerQueryContainerHighlightConfig: 'ContainerQueryContainerHighlightConfig'


class GridNodeHighlightConfig(TypedDict):
    gridHighlightConfig: 'GridHighlightConfig'
    nodeId: 'dom.NodeId'


class FlexNodeHighlightConfig(TypedDict):
    flexContainerHighlightConfig: 'FlexContainerHighlightConfig'
    nodeId: 'dom.NodeId'


class ScrollSnapContainerHighlightConfig(TypedDict):
    snapportBorder: 'LineStyle'
    snapAreaBorder: 'LineStyle'
    scrollMarginColor: 'dom.RGBA'
    scrollPaddingColor: 'dom.RGBA'


class ScrollSnapHighlightConfig(TypedDict):
    scrollSnapContainerHighlightConfig: 'ScrollSnapContainerHighlightConfig'
    nodeId: 'dom.NodeId'


class HingeConfig(TypedDict):
    rect: 'dom.Rect'
    contentColor: 'dom.RGBA'
    outlineColor: 'dom.RGBA'


class ContainerQueryHighlightConfig(TypedDict):
    containerQueryContainerHighlightConfig: 'ContainerQueryContainerHighlightConfig'
    nodeId: 'dom.NodeId'


class ContainerQueryContainerHighlightConfig(TypedDict):
    containerBorder: 'LineStyle'
    descendantBorder: 'LineStyle'


class IsolatedElementHighlightConfig(TypedDict):
    isolationModeHighlightConfig: 'IsolationModeHighlightConfig'
    nodeId: 'dom.NodeId'


class IsolationModeHighlightConfig(TypedDict):
    resizerColor: 'dom.RGBA'
    resizerHandleColor: 'dom.RGBA'
    maskColor: 'dom.RGBA'
