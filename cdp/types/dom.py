# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.types import (
    page,
    runtime
)
from typing import (
    Literal,
    TypedDict
)

NodeId = int

BackendNodeId = int

Quad = list

PseudoType = Literal[
    'first-line',
    'first-letter',
    'before',
    'after',
    'marker',
    'backdrop',
    'selection',
    'target-text',
    'spelling-error',
    'grammar-error',
    'highlight',
    'first-line-inherited',
    'scrollbar',
    'scrollbar-thumb',
    'scrollbar-button',
    'scrollbar-track',
    'scrollbar-track-piece',
    'scrollbar-corner',
    'resizer',
    'input-list-button',
    'view-transition',
    'view-transition-group',
    'view-transition-image-pair',
    'view-transition-old',
    'view-transition-new'
]

ShadowRootType = Literal[
    'user-agent',
    'open',
    'closed'
]

CompatibilityMode = Literal[
    'QuirksMode',
    'LimitedQuirksMode',
    'NoQuirksMode'
]

PhysicalAxes = Literal[
    'Horizontal',
    'Vertical',
    'Both'
]

LogicalAxes = Literal[
    'Inline',
    'Block',
    'Both'
]


class BackendNode(TypedDict):
    nodeType: int
    nodeName: str
    backendNodeId: 'BackendNodeId'


class Node(TypedDict):
    nodeId: 'NodeId'
    backendNodeId: 'BackendNodeId'
    nodeType: int
    nodeName: str
    localName: str
    nodeValue: str
    parentId: 'NodeId'
    childNodeCount: int
    children: list
    attributes: list
    documentURL: str
    baseURL: str
    publicId: str
    systemId: str
    internalSubset: str
    xmlVersion: str
    name: str
    value: str
    pseudoType: 'PseudoType'
    pseudoIdentifier: str
    shadowRootType: 'ShadowRootType'
    frameId: 'page.FrameId'
    contentDocument: 'Node'
    shadowRoots: list
    templateContent: 'Node'
    pseudoElements: list
    importedDocument: 'Node'
    distributedNodes: list
    isSVG: bool
    compatibilityMode: 'CompatibilityMode'
    assignedSlot: 'BackendNode'


class RGBA(TypedDict):
    r: int
    g: int
    b: int
    a: float


class BoxModel(TypedDict):
    content: 'Quad'
    padding: 'Quad'
    border: 'Quad'
    margin: 'Quad'
    width: int
    height: int
    shapeOutside: 'ShapeOutsideInfo'


class ShapeOutsideInfo(TypedDict):
    bounds: 'Quad'
    shape: list
    marginShape: list


class Rect(TypedDict):
    x: float
    y: float
    width: float
    height: float


class CSSComputedStyleProperty(TypedDict):
    name: str
    value: str
