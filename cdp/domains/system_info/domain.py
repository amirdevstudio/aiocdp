# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from cdp.domains import (
    mappers
)
from cdp.utils import (
    UNDEFINED,
    is_defined
)
from dataclasses import (
    dataclass
)
from typing import (
    TYPE_CHECKING
)
from cdp.domains.system_info.types import (
    GetFeatureStateReturnType,
    GetInfoReturnType,
    GetProcessInfoReturnType
)
if TYPE_CHECKING:
    from cdp.target.connection import (
        IFutureResponse
    )


@dataclass
class SystemInfo(BaseDomain):
    def get_info(
            self
    ) -> 'IFutureResponse[GetInfoReturnType]':
        params = {}

        return self._send_command(
            'SystemInfo.getInfo',
            params,
            True,
            lambda data: from_dict(
                GetInfoReturnType,
                data,
                'camel'
            )
        )

    def get_feature_state(
            self,
            feature_state: 'str'
    ) -> 'IFutureResponse[GetFeatureStateReturnType]':
        params = {
            'featureState': feature_state,
        }

        return self._send_command(
            'SystemInfo.getFeatureState',
            params,
            True,
            lambda data: from_dict(
                GetFeatureStateReturnType,
                data,
                'camel'
            )
        )

    def get_process_info(
            self
    ) -> 'IFutureResponse[GetProcessInfoReturnType]':
        params = {}

        return self._send_command(
            'SystemInfo.getProcessInfo',
            params,
            True,
            lambda data: from_dict(
                GetProcessInfoReturnType,
                data,
                'camel'
            )
        )
