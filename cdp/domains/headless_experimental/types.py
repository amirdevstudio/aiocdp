# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from typing import (
    Any,
    Literal,
    TYPE_CHECKING
)
from dataclasses import (
    dataclass
)
if TYPE_CHECKING:


@dataclass
class ScreenshotParams:
    format: str
    quality: int
    optimize_for_speed: bool
    def to_dict(
        self,
        casing_strategy: Literal[
            'snake',
            'camel',
            'pascal'
        ] = 'snake'
    ):

        if casing_strategy == 'snake':
            return {
                'format': self.format_,
                'quality': self.quality,
                'optimize_for_speed': self.optimize_for_speed,
            }
        if casing_strategy == 'camel':
            return {
                'format': self.format_,
                'quality': self.quality,
                'optimizeForSpeed': self.optimize_for_speed,
            }
        if casing_strategy == 'pascal':
            return {
                'Format': self.format_,
                'Quality': self.quality,
                'OptimizeForSpeed': self.optimize_for_speed,
            }


@dataclass
class BeginFrameReturnT:
    has_damage: bool
    screenshot_data: str
