# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from dataclasses import (
    dataclass
)
from cdp.utils import (
    is_defined,
    UNDEFINED
)
from typing import (
    TYPE_CHECKING
)
from cdp.domains.performance.types import (
    GetMetricsReturnT
)
if TYPE_CHECKING:
    from cdp.target.connection import (
        IResult
    )


@dataclass
class Performance(BaseDomain):
    def disable(
            self
    ) -> IResult[None]:
        params = {}

        return self._send_command(
            'Performance.disable',
            params,
            False
        )

    def enable(
            self,
            time_domain: str = UNDEFINED
    ) -> IResult[None]:
        params = {}

        if is_defined(time_domain):
            params['timeDomain'] = time_domain

        return self._send_command(
            'Performance.enable',
            params,
            False
        )

    def set_time_domain(
            self,
            time_domain: str
    ) -> IResult[None]:
        params = {
            'timeDomain': time_domain,
        }

        return self._send_command(
            'Performance.setTimeDomain',
            params,
            False
        )

    def get_metrics(
            self
    ) -> IResult['GetMetricsReturnT']:
        params = {}

        return self._send_command(
            'Performance.getMetrics',
            params,
            True
        )
