# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from dataclasses import (
    dataclass
)
from cdp.utils import (
    is_defined,
    UNDEFINED
)
from typing import (
    TYPE_CHECKING
)
from cdp.domains.mapper import (
    from_dict,
    to_dict
)
from cdp.domains.device_access.types import (
    DeviceId,
    RequestId
)
if TYPE_CHECKING:
    from cdp.target.connection import (
        IFutureResponse
    )


@dataclass
class DeviceAccess(BaseDomain):
    def enable(
            self
    ) -> 'IFutureResponse[None]':
        params = {}

        return self._send_command(
            'DeviceAccess.enable',
            params,
            False
        )

    def disable(
            self
    ) -> 'IFutureResponse[None]':
        params = {}

        return self._send_command(
            'DeviceAccess.disable',
            params,
            False
        )

    def select_prompt(
            self,
            id_: 'RequestId',
            device_id: 'DeviceId'
    ) -> 'IFutureResponse[None]':
        params = {
            'id': id_,
            'deviceId': device_id,
        }

        return self._send_command(
            'DeviceAccess.selectPrompt',
            params,
            False
        )

    def cancel_prompt(
            self,
            id_: 'RequestId'
    ) -> 'IFutureResponse[None]':
        params = {
            'id': id_,
        }

        return self._send_command(
            'DeviceAccess.cancelPrompt',
            params,
            False
        )
