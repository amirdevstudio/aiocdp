# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from dataclasses import (
    dataclass
)
from cdp.utils import (
    is_defined,
    UNDEFINED
)
from cdp.domains.security.types import (
    CertificateErrorAction
)


@dataclass
class Security(BaseDomain):
    def disable(
        self
    ) -> 'DisableReturnT':
        params = {}
        
        return self._send_command(
            'Security.disable',

            params
        )

    def enable(
        self
    ) -> 'EnableReturnT':
        params = {}
        
        return self._send_command(
            'Security.enable',

            params
        )

    def set_ignore_certificate_errors(
        self,
        ignore: bool
    ) -> 'SetIgnoreCertificateErrorsReturnT':
        params = {
            'ignore': ignore,
        }
        
        return self._send_command(
            'Security.setIgnoreCertificateErrors',

            params
        )

    def handle_certificate_error(
        self,
        event_id: int,
        action: CertificateErrorAction
    ) -> 'HandleCertificateErrorReturnT':
        params = {
            'eventId': event_id,
            'action': action,
        }
        
        return self._send_command(
            'Security.handleCertificateError',

            params
        )

    def set_override_certificate_errors(
        self,
        override: bool
    ) -> 'SetOverrideCertificateErrorsReturnT':
        params = {
            'override': override,
        }
        
        return self._send_command(
            'Security.setOverrideCertificateErrors',

            params
        )

