# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from dataclasses import (
    dataclass
)
from cdp.domains.dom_storage.types import (
    StorageId
)
from cdp.utils import (
    is_defined,
    UNDEFINED
)


@dataclass
class DOMStorage(BaseDomain):
    def clear(
        self,
        storage_id: StorageId
    ) -> 'ClearReturnT':
        params = {
            'storageId': storage_id,
        }
        
        return self._send_command(
            'DOMStorage.clear',

            params
        )

    def disable(
        self
    ) -> 'DisableReturnT':
        params = {}
        
        return self._send_command(
            'DOMStorage.disable',

            params
        )

    def enable(
        self
    ) -> 'EnableReturnT':
        params = {}
        
        return self._send_command(
            'DOMStorage.enable',

            params
        )

    def get_dom_storage_items(
        self,
        storage_id: StorageId
    ) -> 'GetDOMStorageItemsReturnT':
        params = {
            'storageId': storage_id,
        }
        
        return self._send_command(
            'DOMStorage.getDOMStorageItems',

            params
        )

    def remove_dom_storage_item(
        self,
        storage_id: StorageId,
        key: str
    ) -> 'RemoveDOMStorageItemReturnT':
        params = {
            'storageId': storage_id,
            'key': key,
        }
        
        return self._send_command(
            'DOMStorage.removeDOMStorageItem',

            params
        )

    def set_dom_storage_item(
        self,
        storage_id: StorageId,
        key: str,
        value: str
    ) -> 'SetDOMStorageItemReturnT':
        params = {
            'storageId': storage_id,
            'key': key,
            'value': value,
        }
        
        return self._send_command(
            'DOMStorage.setDOMStorageItem',

            params
        )

