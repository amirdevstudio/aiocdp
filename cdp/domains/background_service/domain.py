# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from dataclasses import (
    dataclass
)
from cdp.utils import (
    is_defined,
    UNDEFINED
)
from cdp.domains.background_service.types import (
    ServiceName
)


@dataclass
class BackgroundService(BaseDomain):
    def start_observing(
            self,
            service: ServiceName
    ) -> None:
        params = {
            'service': service,
        }

        return self._send_command(
            'BackgroundService.startObserving',
            params
        )

    def stop_observing(
            self,
            service: ServiceName
    ) -> None:
        params = {
            'service': service,
        }

        return self._send_command(
            'BackgroundService.stopObserving',
            params
        )

    def set_recording(
            self,
            should_record: bool,
            service: ServiceName
    ) -> None:
        params = {
            'shouldRecord': should_record,
            'service': service,
        }

        return self._send_command(
            'BackgroundService.setRecording',
            params
        )

    def clear_events(
            self,
            service: ServiceName
    ) -> None:
        params = {
            'service': service,
        }

        return self._send_command(
            'BackgroundService.clearEvents',
            params
        )
