# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from dataclasses import (
    dataclass
)
from cdp.utils import (
    is_defined,
    UNDEFINED
)
from cdp.domains.audits.types import (
    CheckFormsIssuesReturnT,
    GetEncodedResponseReturnT
)
from cdp.domains.network.types import (
    RequestId
)
if TYPE_CHECKING:
    from cdp.target.connection import (
        IResult
    )


@dataclass
class Audits(BaseDomain):
    def get_encoded_response(
            self,
            request_id: RequestId,
            encoding: str,
            quality: float = UNDEFINED,
            size_only: bool = UNDEFINED
    ) -> IResult['GetEncodedResponseReturnT']:
        params = {
            'requestId': request_id,
            'encoding': encoding,
        }

        if is_defined(quality):
            params['quality'] = quality

        if is_defined(size_only):
            params['sizeOnly'] = size_only

        return self._send_command(
            'Audits.getEncodedResponse',
            params,
            True
        )

    def disable(
            self
    ) -> IResult[None]:
        params = {}

        return self._send_command(
            'Audits.disable',
            params,
            False
        )

    def enable(
            self
    ) -> IResult[None]:
        params = {}

        return self._send_command(
            'Audits.enable',
            params,
            False
        )

    def check_contrast(
            self,
            report_aaa: bool = UNDEFINED
    ) -> IResult[None]:
        params = {}

        if is_defined(report_aaa):
            params['reportAAA'] = report_aaa

        return self._send_command(
            'Audits.checkContrast',
            params,
            False
        )

    def check_forms_issues(
            self
    ) -> IResult['CheckFormsIssuesReturnT']:
        params = {}

        return self._send_command(
            'Audits.checkFormsIssues',
            params,
            True
        )
