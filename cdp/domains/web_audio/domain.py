# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from cdp.domains.base import (
    BaseDomain
)
from cdp.domains import (
    mappers
)
from cdp.utils import (
    UNDEFINED,
    is_defined
)
from dataclasses import (
    dataclass
)
from typing import (
    TYPE_CHECKING
)
from cdp.domains.web_audio.types import (
    GetRealtimeDataReturnType,
    GraphObjectId
)
if TYPE_CHECKING:
    from cdp.target.connection import (
        IFutureResponse
    )


@dataclass
class WebAudio(BaseDomain):
    def enable(
            self
    ) -> 'IFutureResponse[None]':
        params = {}

        return self._send_command(
            'WebAudio.enable',
            params,
            False
        )

    def disable(
            self
    ) -> 'IFutureResponse[None]':
        params = {}

        return self._send_command(
            'WebAudio.disable',
            params,
            False
        )

    def get_realtime_data(
            self,
            context_id: 'GraphObjectId'
    ) -> 'IFutureResponse[GetRealtimeDataReturnType]':
        params = {
            'contextId': to_dict(
                context_id,
                'camel'
            ),
        }

        return self._send_command(
            'WebAudio.getRealtimeData',
            params,
            True,
            lambda data: from_dict(
                GetRealtimeDataReturnType,
                data,
                'camel'
            )
        )
