# DO NOT EDIT THIS FILE
#
# This file is generated by the generator. To make changes, edit the generator
# and run it again.

from typing import (
    Any,
    Literal,
    TYPE_CHECKING
)
from dataclasses import (
    dataclass
)

if TYPE_CHECKING:
    from cdp.domains.runtime.types import (
        CallFrame,
        ScriptId
    )


@dataclass
class ProfileNode:
    id: int
    call_frame: 'CallFrame'
    hit_count: int
    children: list[int]
    deopt_reason: str
    position_ticks: list['PositionTickInfo']


@dataclass
class Profile:
    nodes: list['ProfileNode']
    start_time: float
    end_time: float
    samples: list[int]
    time_deltas: list[int]


@dataclass
class PositionTickInfo:
    line: int
    ticks: int


@dataclass
class CoverageRange:
    start_offset: int
    end_offset: int
    count: int


@dataclass
class FunctionCoverage:
    function_name: str
    ranges: list['CoverageRange']
    is_block_coverage: bool


@dataclass
class ScriptCoverage:
    script_id: 'ScriptId'
    url: str
    functions: list['FunctionCoverage']


@dataclass
class TypeObject:
    name: str


@dataclass
class TypeProfileEntry:
    offset: int
    types: list['TypeObject']


@dataclass
class ScriptTypeProfile:
    script_id: 'ScriptId'
    url: str
    entries: list['TypeProfileEntry']


@dataclass
class GetBestEffortCoverageReturnT:
    result: list


@dataclass
class StopReturnT:
    profile: 'Profile'


@dataclass
class TakePreciseCoverageReturnT:
    result: list


@dataclass
class TakeTypeProfileReturnT:
    result: list
